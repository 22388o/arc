{"version":3,"sources":["rpc/rpc_grpc_web_pb.js","rpc/validator_pb.js","config/auth-creds.js","utils/discussion-utils.js","components/content-pages/message-info.js","config/api-url.js","services/messageServices.js","style/theme.js","components/content-pages/markdown/c13n-image.js","components/content-pages/markdown/c13n-link.js","components/content-pages/markdown/c13n-link-ref.js","components/content-pages/markdown/c13n-text.js","components/content-pages/markdown/c13n-inline-code.js","utils/payreq/payreq-tracker.js","payload-protocol/parsers.js","utils/payreq/utils.js","payload-protocol/version.js","payload-protocol/utils.js","utils/lsat/upload-image.js","utils/system.js","media/arrow-right.svg","components/content-pages/chat-history-input.js","services/discussionServices.js","components/content-pages/chat-history-statistics.js","utils/identicon.js","components/content-pages/user-preview.js","utils/users-utils.js","components/content-pages/chat-history.js","utils/settings.js","components/content-pages/user-settings.js","services/channelServices.js","services/nodeInfoServices.js","components/content-pages/open-channel.js","components/content-pages/connect-peer.js","components/content-pages/user-funds.js","services/contactServices.js","components/content-pages/search-users.js","components/content-pages/contacts.js","media/arc-logo.png","media/programize_logo.png","components/content-pages/logo.js","config/version.js","utils/accounts-utils.js","components/accounts.js","components/content-pages/version-error.js","components/content-pages/connection-screen.js","components/content-pages/group-chat.js","components/contents.js","media/arc-logo-short.png","components/side.js","components/content-pages/funds-initialization.js","utils/fiat-rates.js","media/notification.mp3","components/main.js","App.js","index.js","rpc/rpc_pb.js","utils/crypto-utils.js"],"names":["grpc","web","require","proto","services","NodeInfoServiceClient","hostname","credentials","options","this","client_","GrpcWebClientBase","hostname_","NodeInfoServicePromiseClient","methodDescriptor_NodeInfoService_GetVersion","MethodDescriptor","MethodType","UNARY","VersionRequest","Version","request","serializeBinary","deserializeBinary","AbstractClientBase","MethodInfo","prototype","getVersion","metadata","callback","rpcCall","unaryCall","methodDescriptor_NodeInfoService_GetSelfInfo","SelfInfoRequest","SelfInfoResponse","getSelfInfo","methodDescriptor_NodeInfoService_GetSelfBalance","SelfBalanceRequest","SelfBalanceResponse","getSelfBalance","methodDescriptor_NodeInfoService_GetNodes","GetNodesRequest","NodeInfoResponse","getNodes","methodDescriptor_NodeInfoService_SearchNodeByAddress","SearchNodeByAddressRequest","searchNodeByAddress","methodDescriptor_NodeInfoService_SearchNodeByAlias","SearchNodeByAliasRequest","searchNodeByAlias","methodDescriptor_NodeInfoService_ConnectNode","ConnectNodeRequest","ConnectNodeResponse","connectNode","ChannelServiceClient","ChannelServicePromiseClient","methodDescriptor_ChannelService_OpenChannel","OpenChannelRequest","OpenChannelResponse","openChannel","ContactServiceClient","ContactServicePromiseClient","methodDescriptor_ContactService_GetContacts","GetContactsRequest","GetContactsResponse","getContacts","methodDescriptor_ContactService_AddContact","AddContactRequest","AddContactResponse","addContact","methodDescriptor_ContactService_RemoveContactByID","RemoveContactByIDRequest","RemoveContactResponse","removeContactByID","methodDescriptor_ContactService_RemoveContactByAddress","RemoveContactByAddressRequest","removeContactByAddress","MessageServiceClient","MessageServicePromiseClient","methodDescriptor_MessageService_EstimateMessage","EstimateMessageRequest","EstimateMessageResponse","estimateMessage","methodDescriptor_MessageService_SendMessage","SendMessageRequest","SendMessageResponse","sendMessage","methodDescriptor_MessageService_SubscribeMessages","SERVER_STREAMING","SubscribeMessageRequest","SubscribeMessageResponse","subscribeMessages","serverStreaming","DiscussionServiceClient","DiscussionServicePromiseClient","methodDescriptor_DiscussionService_GetDiscussions","GetDiscussionsRequest","GetDiscussionsResponse","getDiscussions","methodDescriptor_DiscussionService_GetDiscussionHistoryByID","GetDiscussionHistoryByIDRequest","GetDiscussionHistoryResponse","getDiscussionHistoryByID","methodDescriptor_DiscussionService_GetDiscussionStatistics","GetDiscussionStatisticsRequest","GetDiscussionStatisticsResponse","getDiscussionStatistics","methodDescriptor_DiscussionService_AddDiscussion","AddDiscussionRequest","AddDiscussionResponse","addDiscussion","methodDescriptor_DiscussionService_UpdateDiscussionLastRead","UpdateDiscussionLastReadRequest","UpdateDiscussionResponse","updateDiscussionLastRead","methodDescriptor_DiscussionService_RemoveDiscussion","RemoveDiscussionRequest","RemoveDiscussionResponse","removeDiscussion","module","exports","jspb","goog","global","Function","google_protobuf_descriptor_pb","exportSymbol","validator","FieldValidator","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","regex","getField","intGt","intLt","msgExists","humanError","floatGt","getOptionalFloatingPointField","floatLt","floatEpsilon","floatGte","floatLte","stringNotEmpty","repeatedCountMin","repeatedCountMax","lengthGt","lengthLt","lengthEq","isInEnum","uuidVer","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setRegex","readInt64","setIntGt","setIntLt","readBool","setMsgExists","setHumanError","readDouble","setFloatGt","setFloatLt","setFloatEpsilon","setFloatGte","setFloatLte","setStringNotEmpty","setRepeatedCountMin","setRepeatedCountMax","setLengthGt","setLengthLt","setLengthEq","setIsInEnum","readInt32","setUuidVer","skipField","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","undefined","writeString","writeInt64","writeBool","writeDouble","writeInt32","getRegex","getFieldWithDefault","setField","clearRegex","hasRegex","getIntGt","clearIntGt","hasIntGt","getIntLt","clearIntLt","hasIntLt","getMsgExists","clearMsgExists","hasMsgExists","getHumanError","clearHumanError","hasHumanError","getFloatGt","clearFloatGt","hasFloatGt","getFloatLt","clearFloatLt","hasFloatLt","getFloatEpsilon","clearFloatEpsilon","hasFloatEpsilon","getFloatGte","clearFloatGte","hasFloatGte","getFloatLte","clearFloatLte","hasFloatLte","getStringNotEmpty","clearStringNotEmpty","hasStringNotEmpty","getRepeatedCountMin","clearRepeatedCountMin","hasRepeatedCountMin","getRepeatedCountMax","clearRepeatedCountMax","hasRepeatedCountMax","getLengthGt","clearLengthGt","hasLengthGt","getLengthLt","clearLengthLt","hasLengthLt","getLengthEq","clearLengthEq","hasLengthEq","getIsInEnum","clearIsInEnum","hasIsInEnum","getUuidVer","clearUuidVer","hasUuidVer","OneofValidator","required","setRequired","getRequired","clearRequired","hasRequired","field","ExtensionFieldInfo","FieldOptions","extensionsBinary","ExtensionFieldBinaryInfo","readMessage","writeMessage","extensions","oneof","OneofOptions","object","extend","attemptUsernameRead","read","window","localStorage","getItem","toString","attemptPasswordRead","authCreds","Buffer","from","concatUserNames","props","users","res","forEach","elem","contactName","findContactName","alias","findAlias","length","concat","substring","slice","concatUserAddresses","item","lookup","contacts","find","user","address","userLookup","routesToAddresses","routes","addressArray","route","lastHop","hopsList","push","hopAddress","populateChatHistoryMetadata","chatHistory","previousElem","sender","sentTimestamp","seconds","appendToChatHistory","setChatHistory","oldHistory","cryptoUtils","MessageInfo","prepareHopsArray","hops","temp","unshift","selfInfo","feeMsat","selectedMessage","dataSource","paymentRoutesList","renderItem","className","Item","CopyOutlined","onClick","copyText","document","getElementById","select","setSelectionRange","execCommand","NotificationManager","info","id","onChange","isLast","msatToCurrentCryptoUnit","parseInt","routeAmtMsat","routeFeesMsat","selectedCryptoUnit","apiUrl","MessageOptions","rpcClient","client","Object","req","messageOptions","setFeeLimitMsat","feeLimitMsat","setAnonymous","anonymous","setOptions","setDiscussionId","discussionId","setPayload","payload","setAmtMsat","amtMsat","err","a","preimage","setPreimage","payReq","setPayReq","messageClient","theme","menuDark","menuDarkLite","menuNormal","menuLight","C13nImage","React","memo","useState","focus","setFocus","automaticImageLoading","style","width","transition","smoothAnimations","src","title","cancelButtonProps","display","visible","bodyStyle","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","screen","height","href","target","c13nLink","c13nLinkRef","c13nText","c13nInlineCode","payreqs","checkPayreq","renderers","image","mdProps","link","linkReference","text","inlineCode","payloadToDom","myMessage","payloadObj","JSON","parse","t","c","source","disallowedTypes","unwrapDisallowed","fontSize","border","borderRadius","padding","color","attL","u","CheckOutlined","type","payreqObj","console","log","selectedDiscussion","payreqPayToPayload","sentMessage","lastMsgId","lastReadMsgId","updateCurrentFunds","setLastFundChange","Number","totalFeesMsat","sendPayreqPay","margin","description","satisfyPayreq","messageToPayload","attachmentList","messageObj","n","v","stringify","payreqToPayload","Date","now","createAttachment","uri","tags","show","axios","default","lsatUrl","lsat","headerToLsat","header","macaroonStr","split","invoiceStr","macaroon","invoice","uploadImage","post","then","catch","response","headers","fileElem","file","files","formData","FormData","append","filename","data","fullUrl","sleep","ms","Promise","resolve","setTimeout","ChatHistoryInput","selectedInput","setSelectedInput","currentFee","setCurrentFee","messageToSend","setMessageToSend","emojiPickerActive","setEmojiPickerActive","amount","setAmount","fileDialogActive","setFileDialogActive","imageURL","setImageURL","uploadLoading","setUploadLoading","payreqModalActive","setPayreqModalActive","payreqAmount","setPayreqAmount","payreqDescription","setPayreqDescription","currentCryptoAmtToMsat","anonymousActive","retrieveDefaultCryptoAmount","warning","useEffect","discussion","calculateFee","onBlur","trigger","overlay","FileImageOutlined","FormOutlined","placement","setAnonymousActive","checkedChildren","EyeInvisibleOutlined","unCheckedChildren","EyeOutlined","disabled","participantsList","PlusOutlined","TextArea","onFocus","e","updateLastMessageSeen","updateChatScroll","key","preventDefault","onKeyDown","shiftKey","placeholder","resize","scrollHeight","maxHeight","borderColor","SmileOutlined","marginLeft","selectedCryptoToVerbose","currentCryptoAmtToFiat","selectedFiatUnit","parseFloat","min","max","input","selectAmountInputText","numCast","isNaN","onEmojiClick","emoji","pickerStyle","backgroundColor","disableSearchBar","disableAutoFocus","disableSkinTonePicker","onMouseDown","ChatButton","onOk","onCancel","okButtonProps","okText","LoadingOutlined","spin","orientation","accept","error","selectPayreqAmountInputText","KeySetPageOptions","DiscussionInfo","DiscussionOptions","getDiscussionHistoryById","keySetPageOptions","setLastId","pageOptions","lastId","setPageSize","pageSize","setReverse","reverse","setPageOptions","setId","discussionInfo","discussionOptions","setParticipantsList","participants","setLastReadMsgId","setLastMsgId","setDiscussion","discussionClient","ChatHistoryStatistics","loaded","setLoaded","totalIncome","setTotalIncome","totalOutcome","setTotalOutcome","totalFees","setTotalFees","totalSent","setTotalSent","totalReceived","setTotalReceived","amtMsatReceived","amtMsatSent","amtMsatFees","messagesSent","messagesReceived","ArrowDownOutlined","ArrowUpOutlined","jdenticon","iconCache","generateIdenticon","size","Parser","icon","toSvg","UserPreview","setVisible","findUserByAddress","addr","splitURI","URI","hostport","ChatHistory","setOldListHeight","lastMessageSeen","setLastMessageSeen","noMoreHistory","setNoMoreHistory","feeModalVisible","setFeeModalVisible","statisticsModalVisible","setStatisticsModalVisible","rawMessageInfoModalVisible","setRawMessageInfoModalVisible","userPreviewVisible","setUserPreviewVisible","userPreviewUser","setUserPreviewUser","setSelectedMessage","pageLoaded","setPageLoaded","anonymousBucket","chatHistoryIcon","chatHistoryUsrName","history","hidden","calculateTextAlign","chatLayout","findSenderName","calculateFlexRowDirection","calculateChatHistoryMessageColor","calculatePartialFailureIndicatorDisplay","atBottom","scrollTop","clientHeight","loadHistory","fresh","setSelectedDiscussion","oldValue","async_selectedDiscusion","previousId","on","code","setAnonymousBucket","setChatScroll","element","scroll","top","behavior","monthToStr","unixToDate","unix","format","date","hours","getHours","minutes","getMinutes","getMonth","getDate","substr","getUTCFullYear","getFullYear","DoubleRightOutlined","sideSquashed","sideActivated","setSideActivated","EllipsisOutlined","Content","innerWidth","innerHeight","left","bottom","opacity","DownCircleOutlined","locale","emptyText","flexDirection","textAlign","chatIdenticons","marginTop","paddingLeft","senderVerified","SafetyOutlined","CloseCircleOutlined","ExclamationCircleOutlined","myMessageColor","otherMessageColor","maxWidth","selectedPage","footer","msatAmtToFiat","saveMyMessageColor","setMyMessageColor","setItem","saveOtherMessageColor","setOtherMessageColor","messageColorsArray","UserSettings","url","Panel","checked","setAutomaticImageLoading","saveAutomaticImageLoadingSetting","setSmoothAnimations","saveSmoothAnimationsSetting","setChatIdenticons","saveChatIdenticonsSetting","defaultValue","setChatLayout","Option","triangle","colors","onChangeComplete","hex","developerLogs","setDeveloperLogs","saveDeveloperLogsSetting","setSelectedCryptoUnit","setSelectedFiatUnit","label","backendVersion","setAddress","setPushAmtMsat","pushAmtMsat","setMinInputConfs","minInputConfs","setTargetConfirmationBlock","targetConfirmationBlock","channelClient","meta","setAlias","setHostport","nodeInfoClient","OpenChannel","mode","setMode","lightningAddress","setLightningAddress","pushAmount","setPushAmount","minimumInputConfirmations","setMinimumInputConfirmations","targetConfirmationBlocks","setTargetConfirmationBlocks","success","defaultActiveKey","TabPane","tab","layout","ConnectPeer","params","UserFunds","walletConfirmedBalance","setWalletConfirmedBalance","walletUnconfirmedBalance","setWalletUnconfirmedBalance","channelTotalBalance","setChannelTotalBalance","pendingChannelBalance","setPendingChannelBalance","setChannelRemoteBalance","connectPeerModalVisible","setConnectPeerModalVisible","openChannelModalVisible","setOpenChannelModalVisible","walletConfirmedSat","walletUnconfirmedSat","channelLocalMsat","Math","floor","pendingOpenLocalMsat","channelRemoteMsat","ContactInfo","NodeInfo","contact","node","setNode","setDisplayName","setContact","contactClient","SearchUsers","aliasToSearch","setaliasToSearch","addressToSearch","setAddressToSearch","searchedAlias","setSearchedAlias","searchedAddress","setSearchedAddress","userSelected","setUserSelected","friendlyName","setFriendlyName","contactAddModalActive","setContactAddModalActive","contactRemoveModalActive","setContactRemoveModalActive","searchAliasLoading","setSearchAliasLoading","searchAliasEmptyText","setSearchAliasEmptyText","searchAddressLoading","setSearchAddressLoading","searchAddressEmptyText","setSearchAddressEmptyText","enteredAlias","setEnteredAlias","searchAliasTouched","setSearchAliasTouched","aliasFormValid","setAliasFormValid","enteredAddress","setEnteredAddress","searchAddressTouched","setSearchAddressTouched","addressFormValid","setAddressFormValid","enteredAliasIsValid","enteredAddressIsValid","searchUsersByAlias","nodesList","searchUsersByAddress","onSubmit","event","SearchOutlined","itemLayout","inContacts","inDiscussion","discussions","includes","setSelectedPage","setDiscussions","oldDiscussions","MessageOutlined","UserDeleteOutlined","UserAddOutlined","parsedContact","setContacts","createContact","filter","Contacts","Logo","arcLogo","programizeLogo","version","addToAccounts","account","accounts","setAccounts","oldAccounts","saveAccounts","accountsArray","Accounts","addAccountModalVisible","setAddAccountModalVisible","deleteAccountModalVisible","setDeleteAccountModalVisible","credentialsModalVisible","setCredentialsModalVisible","usernameToUse","setUsernameToUse","passwordToUse","setPasswordToUse","urlToAdd","setUrlToAdd","selectedAccount","setSelectedAccount","loadAccount","deadline","setSeconds","getSeconds","getTime","setBackendVersion","setLoadAccount","credentialsModalLogin","location","reload","addAccountHandler","username","lastActive","sort","b","DeleteOutlined","removeFromAccounts","formLayout","labelCol","span","wrapperCol","VersionScreen","ConnectionScreen","GroupChat","setAliasToSearch","searchLoading","setSearchLoading","searchGroupTouched","setSearchGroupTouched","enteredGroupIsValid","groupInputIsInvalid","groupModalVisible","setGroupModalVisible","groupFormIsValid","setSelectedParticipants","oldParticipants","filtered","selectedParticipants","addr_list","createGroupDiscussion","MinusOutlined","Contents","contentsProps","page","getContentPage","Side","stringToSearch","SetStringToSearch","selectedSearchOption","setSelectedSearchOption","selectedSideDiscussion","setSelectedSideDiscussion","deleteDiscussionModalActive","setDeleteDiscussionModalActive","calculateUnreadStatus","body","requestFullscreen","setFundsInitVisible","setFundsInitDisabled","removeItem","backendStatus","msgStreamActive","parseLastFundChange","lastFundChange","parseCurrentFunds","parseCurrentFiatAmount","changePage","scrollbarColor","messageCounter","disc","titleNotificationChecker","name","toLowerCase","Group","optionType","Button","chainInfo","chain","network","FundsInitialization","mainnetNodes","testnetNodes","defaultAmount","defaultPushAmount","setKey","loading","setLoading","cancelText","setDisabled","getAddress","borderBottom","fontWeight","balance","https","getExchangeRates","setExchangeRates","get","resp","chunk","rates","Main","setInitialConnection","setBackendStatus","msgRxUp","setMsgRxUp","setMsgStreamActive","setSelfInfo","setChainInfo","setUsers","currentFunds","setCurrentFunds","setSideSquashed","exchangeRates","fundsInitVisible","setBalance","fetchAccountData","fetchUsers","fetchContacts","fetchDiscussions","loadSettings","loadAutomaticImageLoadingSetting","loadSmoothAnimationsSetting","loadSelectedCryptoUnit","loadSelectedFiatUnit","loadChatIdenticonsSetting","loadChatLayoutSetting","loadMyMessageColor","loadOtherMessageColor","loadDeveloperLogsSetting","calculateFundsInitialization","modalDisabled","fundColor","newAmount","oldAmount","oldFunds","fundsWrapper","mainProps","pageName","sideMenuAction","initial","old","oldStatus","chainsList","parsedContacts","contactsList","map","discussionsArray","initializeExchangeRates","upStatusChecker","setInterval","loadAccounts","streamValue","startTime","setHours","curPage","oldUsers","receivedMessage","oldPage","aliasLookup","directlyToRoom","oldSelectedDiscussion","hasFocus","Audio","notificationAudio","play","content","Notification","requestPermission","enterTimeout","leaveTimeout","onResize","windowWidth","App","ReactDOM","render","google_protobuf_timestamp_pb","PageOptions","skipRecent","setSkipRecent","getSkipRecent","getPageSize","setProto3IntField","readUint64","getLastId","writeUint64","getReverse","setProto3BooleanField","commit","commitHash","setVersion","setCommit","setCommitHash","getCommit","getCommitHash","setProto3StringField","getAlias","Chain","setChain","setNetwork","getChain","getNetwork","repeatedFields_","getInfo","toObjectList","getChainsList","setInfo","addChains","writeRepeatedMessage","getWrapperField","setWrapperField","clearInfo","hasInfo","getRepeatedWrapperField","setChainsList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearChainsList","pendingOpenRemoteMsat","unsettledLocalMsat","unsettledRemoteMsat","setWalletConfirmedSat","setWalletUnconfirmedSat","setChannelLocalMsat","setChannelRemoteMsat","setPendingOpenLocalMsat","setPendingOpenRemoteMsat","setUnsettledLocalMsat","setUnsettledRemoteMsat","getWalletConfirmedSat","getWalletUnconfirmedSat","getChannelLocalMsat","getChannelRemoteMsat","getPendingOpenLocalMsat","getPendingOpenRemoteMsat","getUnsettledLocalMsat","getUnsettledRemoteMsat","getNodesList","addNodes","setNodesList","clearNodesList","getHostport","readUint32","getAmtMsat","getPushAmtMsat","getMinInputConfs","getTargetConfirmationBlock","writeUint32","fundingTxid","outputIndex","setFundingTxid","setOutputIndex","getFundingTxid","getOutputIndex","getNode","getId","getDisplayName","clearNode","hasNode","getContactsList","addContacts","setContactsList","clearContactsList","getContact","clearContact","hasContact","receiver","getSentTimestamp","Timestamp","receivedTimestamp","getReceivedTimestamp","getPaymentRoutesList","PaymentRoute","setSender","setReceiver","setSenderVerified","setTotalFeesMsat","setSentTimestamp","setReceivedTimestamp","addPaymentRoutes","getDiscussionId","getSender","getReceiver","getSenderVerified","getPayload","getTotalFeesMsat","getPreimage","getPayReq","clearSentTimestamp","hasSentTimestamp","clearReceivedTimestamp","hasReceivedTimestamp","setPaymentRoutesList","clearPaymentRoutesList","getHopsList","PaymentHop","totalTimelock","addHops","setTotalTimelock","setRouteAmtMsat","setRouteFeesMsat","getTotalTimelock","getRouteAmtMsat","getRouteFeesMsat","setHopsList","clearHopsList","chanId","amtToForwardMsat","setChanId","setHopAddress","setAmtToForwardMsat","setFeeMsat","getChanId","getHopAddress","getAmtToForwardMsat","getFeeMsat","getFeeLimitMsat","getAnonymous","getOptions","clearOptions","hasOptions","successProb","getMessage","setSuccessProb","setMessage","getSuccessProb","setProto3FloatField","clearMessage","hasMessage","getSentMessage","setSentMessage","clearSentMessage","hasSentMessage","getReceivedMessage","setReceivedMessage","clearReceivedMessage","hasReceivedMessage","getRepeatedField","addParticipants","getParticipantsList","writeRepeatedString","getLastReadMsgId","getLastMsgId","addToRepeatedField","clearParticipantsList","getDiscussion","clearDiscussion","hasDiscussion","getPageOptions","clearPageOptions","hasPageOptions","setAmtMsatSent","setAmtMsatReceived","setAmtMsatFees","setMessagesSent","setMessagesReceived","getAmtMsatSent","getAmtMsatReceived","getAmtMsatFees","getMessagesSent","getMessagesReceived","cryptoRate","toFixed","rate","btc","satToCurrentCryptoUnit","satAmt","msatAmt","unit"],"mappings":"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","file":"static/js/main.f86f3da3.chunk.js","sourcesContent":["/**\n * @fileoverview gRPC-Web generated client stub for services\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\n\nvar google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')\n\nvar validator_pb = require('./validator_pb.js')\nconst proto = {};\nproto.services = require('./rpc_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.NodeInfoServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.NodeInfoServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.VersionRequest,\n *   !proto.services.Version>}\n */\nconst methodDescriptor_NodeInfoService_GetVersion = new grpc.web.MethodDescriptor(\n  '/services.NodeInfoService/GetVersion',\n  grpc.web.MethodType.UNARY,\n  proto.services.VersionRequest,\n  proto.services.Version,\n  /**\n   * @param {!proto.services.VersionRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.Version.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.VersionRequest,\n *   !proto.services.Version>}\n */\nconst methodInfo_NodeInfoService_GetVersion = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.Version,\n  /**\n   * @param {!proto.services.VersionRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.Version.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.VersionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.Version)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.Version>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.NodeInfoServiceClient.prototype.getVersion =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.NodeInfoService/GetVersion',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetVersion,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.VersionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.Version>}\n *     Promise that resolves to the response\n */\nproto.services.NodeInfoServicePromiseClient.prototype.getVersion =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.NodeInfoService/GetVersion',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetVersion);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.SelfInfoRequest,\n *   !proto.services.SelfInfoResponse>}\n */\nconst methodDescriptor_NodeInfoService_GetSelfInfo = new grpc.web.MethodDescriptor(\n  '/services.NodeInfoService/GetSelfInfo',\n  grpc.web.MethodType.UNARY,\n  proto.services.SelfInfoRequest,\n  proto.services.SelfInfoResponse,\n  /**\n   * @param {!proto.services.SelfInfoRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SelfInfoResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.SelfInfoRequest,\n *   !proto.services.SelfInfoResponse>}\n */\nconst methodInfo_NodeInfoService_GetSelfInfo = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.SelfInfoResponse,\n  /**\n   * @param {!proto.services.SelfInfoRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SelfInfoResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.SelfInfoRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.SelfInfoResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.SelfInfoResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.NodeInfoServiceClient.prototype.getSelfInfo =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.NodeInfoService/GetSelfInfo',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetSelfInfo,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.SelfInfoRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.SelfInfoResponse>}\n *     Promise that resolves to the response\n */\nproto.services.NodeInfoServicePromiseClient.prototype.getSelfInfo =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.NodeInfoService/GetSelfInfo',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetSelfInfo);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.SelfBalanceRequest,\n *   !proto.services.SelfBalanceResponse>}\n */\nconst methodDescriptor_NodeInfoService_GetSelfBalance = new grpc.web.MethodDescriptor(\n  '/services.NodeInfoService/GetSelfBalance',\n  grpc.web.MethodType.UNARY,\n  proto.services.SelfBalanceRequest,\n  proto.services.SelfBalanceResponse,\n  /**\n   * @param {!proto.services.SelfBalanceRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SelfBalanceResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.SelfBalanceRequest,\n *   !proto.services.SelfBalanceResponse>}\n */\nconst methodInfo_NodeInfoService_GetSelfBalance = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.SelfBalanceResponse,\n  /**\n   * @param {!proto.services.SelfBalanceRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SelfBalanceResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.SelfBalanceRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.SelfBalanceResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.SelfBalanceResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.NodeInfoServiceClient.prototype.getSelfBalance =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.NodeInfoService/GetSelfBalance',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetSelfBalance,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.SelfBalanceRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.SelfBalanceResponse>}\n *     Promise that resolves to the response\n */\nproto.services.NodeInfoServicePromiseClient.prototype.getSelfBalance =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.NodeInfoService/GetSelfBalance',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetSelfBalance);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.GetNodesRequest,\n *   !proto.services.NodeInfoResponse>}\n */\nconst methodDescriptor_NodeInfoService_GetNodes = new grpc.web.MethodDescriptor(\n  '/services.NodeInfoService/GetNodes',\n  grpc.web.MethodType.UNARY,\n  proto.services.GetNodesRequest,\n  proto.services.NodeInfoResponse,\n  /**\n   * @param {!proto.services.GetNodesRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.NodeInfoResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.GetNodesRequest,\n *   !proto.services.NodeInfoResponse>}\n */\nconst methodInfo_NodeInfoService_GetNodes = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.NodeInfoResponse,\n  /**\n   * @param {!proto.services.GetNodesRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.NodeInfoResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.GetNodesRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.NodeInfoResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.NodeInfoResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.NodeInfoServiceClient.prototype.getNodes =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.NodeInfoService/GetNodes',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetNodes,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.GetNodesRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.NodeInfoResponse>}\n *     Promise that resolves to the response\n */\nproto.services.NodeInfoServicePromiseClient.prototype.getNodes =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.NodeInfoService/GetNodes',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetNodes);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.SearchNodeByAddressRequest,\n *   !proto.services.NodeInfoResponse>}\n */\nconst methodDescriptor_NodeInfoService_SearchNodeByAddress = new grpc.web.MethodDescriptor(\n  '/services.NodeInfoService/SearchNodeByAddress',\n  grpc.web.MethodType.UNARY,\n  proto.services.SearchNodeByAddressRequest,\n  proto.services.NodeInfoResponse,\n  /**\n   * @param {!proto.services.SearchNodeByAddressRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.NodeInfoResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.SearchNodeByAddressRequest,\n *   !proto.services.NodeInfoResponse>}\n */\nconst methodInfo_NodeInfoService_SearchNodeByAddress = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.NodeInfoResponse,\n  /**\n   * @param {!proto.services.SearchNodeByAddressRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.NodeInfoResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.SearchNodeByAddressRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.NodeInfoResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.NodeInfoResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.NodeInfoServiceClient.prototype.searchNodeByAddress =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.NodeInfoService/SearchNodeByAddress',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_SearchNodeByAddress,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.SearchNodeByAddressRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.NodeInfoResponse>}\n *     Promise that resolves to the response\n */\nproto.services.NodeInfoServicePromiseClient.prototype.searchNodeByAddress =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.NodeInfoService/SearchNodeByAddress',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_SearchNodeByAddress);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.SearchNodeByAliasRequest,\n *   !proto.services.NodeInfoResponse>}\n */\nconst methodDescriptor_NodeInfoService_SearchNodeByAlias = new grpc.web.MethodDescriptor(\n  '/services.NodeInfoService/SearchNodeByAlias',\n  grpc.web.MethodType.UNARY,\n  proto.services.SearchNodeByAliasRequest,\n  proto.services.NodeInfoResponse,\n  /**\n   * @param {!proto.services.SearchNodeByAliasRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.NodeInfoResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.SearchNodeByAliasRequest,\n *   !proto.services.NodeInfoResponse>}\n */\nconst methodInfo_NodeInfoService_SearchNodeByAlias = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.NodeInfoResponse,\n  /**\n   * @param {!proto.services.SearchNodeByAliasRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.NodeInfoResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.SearchNodeByAliasRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.NodeInfoResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.NodeInfoResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.NodeInfoServiceClient.prototype.searchNodeByAlias =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.NodeInfoService/SearchNodeByAlias',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_SearchNodeByAlias,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.SearchNodeByAliasRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.NodeInfoResponse>}\n *     Promise that resolves to the response\n */\nproto.services.NodeInfoServicePromiseClient.prototype.searchNodeByAlias =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.NodeInfoService/SearchNodeByAlias',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_SearchNodeByAlias);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.ConnectNodeRequest,\n *   !proto.services.ConnectNodeResponse>}\n */\nconst methodDescriptor_NodeInfoService_ConnectNode = new grpc.web.MethodDescriptor(\n  '/services.NodeInfoService/ConnectNode',\n  grpc.web.MethodType.UNARY,\n  proto.services.ConnectNodeRequest,\n  proto.services.ConnectNodeResponse,\n  /**\n   * @param {!proto.services.ConnectNodeRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.ConnectNodeResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.ConnectNodeRequest,\n *   !proto.services.ConnectNodeResponse>}\n */\nconst methodInfo_NodeInfoService_ConnectNode = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.ConnectNodeResponse,\n  /**\n   * @param {!proto.services.ConnectNodeRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.ConnectNodeResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.ConnectNodeRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.ConnectNodeResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.ConnectNodeResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.NodeInfoServiceClient.prototype.connectNode =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.NodeInfoService/ConnectNode',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_ConnectNode,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.ConnectNodeRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.ConnectNodeResponse>}\n *     Promise that resolves to the response\n */\nproto.services.NodeInfoServicePromiseClient.prototype.connectNode =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.NodeInfoService/ConnectNode',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_ConnectNode);\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.ChannelServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.ChannelServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.OpenChannelRequest,\n *   !proto.services.OpenChannelResponse>}\n */\nconst methodDescriptor_ChannelService_OpenChannel = new grpc.web.MethodDescriptor(\n  '/services.ChannelService/OpenChannel',\n  grpc.web.MethodType.UNARY,\n  proto.services.OpenChannelRequest,\n  proto.services.OpenChannelResponse,\n  /**\n   * @param {!proto.services.OpenChannelRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.OpenChannelResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.OpenChannelRequest,\n *   !proto.services.OpenChannelResponse>}\n */\nconst methodInfo_ChannelService_OpenChannel = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.OpenChannelResponse,\n  /**\n   * @param {!proto.services.OpenChannelRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.OpenChannelResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.OpenChannelRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.OpenChannelResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.OpenChannelResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.ChannelServiceClient.prototype.openChannel =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.ChannelService/OpenChannel',\n      request,\n      metadata || {},\n      methodDescriptor_ChannelService_OpenChannel,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.OpenChannelRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.OpenChannelResponse>}\n *     Promise that resolves to the response\n */\nproto.services.ChannelServicePromiseClient.prototype.openChannel =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.ChannelService/OpenChannel',\n      request,\n      metadata || {},\n      methodDescriptor_ChannelService_OpenChannel);\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.ContactServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.ContactServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.GetContactsRequest,\n *   !proto.services.GetContactsResponse>}\n */\nconst methodDescriptor_ContactService_GetContacts = new grpc.web.MethodDescriptor(\n  '/services.ContactService/GetContacts',\n  grpc.web.MethodType.UNARY,\n  proto.services.GetContactsRequest,\n  proto.services.GetContactsResponse,\n  /**\n   * @param {!proto.services.GetContactsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetContactsResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.GetContactsRequest,\n *   !proto.services.GetContactsResponse>}\n */\nconst methodInfo_ContactService_GetContacts = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.GetContactsResponse,\n  /**\n   * @param {!proto.services.GetContactsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetContactsResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.GetContactsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.GetContactsResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.GetContactsResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.ContactServiceClient.prototype.getContacts =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.ContactService/GetContacts',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_GetContacts,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.GetContactsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.GetContactsResponse>}\n *     Promise that resolves to the response\n */\nproto.services.ContactServicePromiseClient.prototype.getContacts =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.ContactService/GetContacts',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_GetContacts);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.AddContactRequest,\n *   !proto.services.AddContactResponse>}\n */\nconst methodDescriptor_ContactService_AddContact = new grpc.web.MethodDescriptor(\n  '/services.ContactService/AddContact',\n  grpc.web.MethodType.UNARY,\n  proto.services.AddContactRequest,\n  proto.services.AddContactResponse,\n  /**\n   * @param {!proto.services.AddContactRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.AddContactResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.AddContactRequest,\n *   !proto.services.AddContactResponse>}\n */\nconst methodInfo_ContactService_AddContact = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.AddContactResponse,\n  /**\n   * @param {!proto.services.AddContactRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.AddContactResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.AddContactRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.AddContactResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.AddContactResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.ContactServiceClient.prototype.addContact =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.ContactService/AddContact',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_AddContact,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.AddContactRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.AddContactResponse>}\n *     Promise that resolves to the response\n */\nproto.services.ContactServicePromiseClient.prototype.addContact =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.ContactService/AddContact',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_AddContact);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.RemoveContactByIDRequest,\n *   !proto.services.RemoveContactResponse>}\n */\nconst methodDescriptor_ContactService_RemoveContactByID = new grpc.web.MethodDescriptor(\n  '/services.ContactService/RemoveContactByID',\n  grpc.web.MethodType.UNARY,\n  proto.services.RemoveContactByIDRequest,\n  proto.services.RemoveContactResponse,\n  /**\n   * @param {!proto.services.RemoveContactByIDRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.RemoveContactResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.RemoveContactByIDRequest,\n *   !proto.services.RemoveContactResponse>}\n */\nconst methodInfo_ContactService_RemoveContactByID = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.RemoveContactResponse,\n  /**\n   * @param {!proto.services.RemoveContactByIDRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.RemoveContactResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.RemoveContactByIDRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.RemoveContactResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.RemoveContactResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.ContactServiceClient.prototype.removeContactByID =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.ContactService/RemoveContactByID',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_RemoveContactByID,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.RemoveContactByIDRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.RemoveContactResponse>}\n *     Promise that resolves to the response\n */\nproto.services.ContactServicePromiseClient.prototype.removeContactByID =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.ContactService/RemoveContactByID',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_RemoveContactByID);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.RemoveContactByAddressRequest,\n *   !proto.services.RemoveContactResponse>}\n */\nconst methodDescriptor_ContactService_RemoveContactByAddress = new grpc.web.MethodDescriptor(\n  '/services.ContactService/RemoveContactByAddress',\n  grpc.web.MethodType.UNARY,\n  proto.services.RemoveContactByAddressRequest,\n  proto.services.RemoveContactResponse,\n  /**\n   * @param {!proto.services.RemoveContactByAddressRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.RemoveContactResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.RemoveContactByAddressRequest,\n *   !proto.services.RemoveContactResponse>}\n */\nconst methodInfo_ContactService_RemoveContactByAddress = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.RemoveContactResponse,\n  /**\n   * @param {!proto.services.RemoveContactByAddressRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.RemoveContactResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.RemoveContactByAddressRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.RemoveContactResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.RemoveContactResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.ContactServiceClient.prototype.removeContactByAddress =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.ContactService/RemoveContactByAddress',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_RemoveContactByAddress,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.RemoveContactByAddressRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.RemoveContactResponse>}\n *     Promise that resolves to the response\n */\nproto.services.ContactServicePromiseClient.prototype.removeContactByAddress =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.ContactService/RemoveContactByAddress',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_RemoveContactByAddress);\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.MessageServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.MessageServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.EstimateMessageRequest,\n *   !proto.services.EstimateMessageResponse>}\n */\nconst methodDescriptor_MessageService_EstimateMessage = new grpc.web.MethodDescriptor(\n  '/services.MessageService/EstimateMessage',\n  grpc.web.MethodType.UNARY,\n  proto.services.EstimateMessageRequest,\n  proto.services.EstimateMessageResponse,\n  /**\n   * @param {!proto.services.EstimateMessageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.EstimateMessageResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.EstimateMessageRequest,\n *   !proto.services.EstimateMessageResponse>}\n */\nconst methodInfo_MessageService_EstimateMessage = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.EstimateMessageResponse,\n  /**\n   * @param {!proto.services.EstimateMessageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.EstimateMessageResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.EstimateMessageRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.EstimateMessageResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.EstimateMessageResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.MessageServiceClient.prototype.estimateMessage =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.MessageService/EstimateMessage',\n      request,\n      metadata || {},\n      methodDescriptor_MessageService_EstimateMessage,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.EstimateMessageRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.EstimateMessageResponse>}\n *     Promise that resolves to the response\n */\nproto.services.MessageServicePromiseClient.prototype.estimateMessage =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.MessageService/EstimateMessage',\n      request,\n      metadata || {},\n      methodDescriptor_MessageService_EstimateMessage);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.SendMessageRequest,\n *   !proto.services.SendMessageResponse>}\n */\nconst methodDescriptor_MessageService_SendMessage = new grpc.web.MethodDescriptor(\n  '/services.MessageService/SendMessage',\n  grpc.web.MethodType.UNARY,\n  proto.services.SendMessageRequest,\n  proto.services.SendMessageResponse,\n  /**\n   * @param {!proto.services.SendMessageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SendMessageResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.SendMessageRequest,\n *   !proto.services.SendMessageResponse>}\n */\nconst methodInfo_MessageService_SendMessage = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.SendMessageResponse,\n  /**\n   * @param {!proto.services.SendMessageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SendMessageResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.SendMessageRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.SendMessageResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.SendMessageResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.MessageServiceClient.prototype.sendMessage =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.MessageService/SendMessage',\n      request,\n      metadata || {},\n      methodDescriptor_MessageService_SendMessage,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.SendMessageRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.SendMessageResponse>}\n *     Promise that resolves to the response\n */\nproto.services.MessageServicePromiseClient.prototype.sendMessage =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.MessageService/SendMessage',\n      request,\n      metadata || {},\n      methodDescriptor_MessageService_SendMessage);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.SubscribeMessageRequest,\n *   !proto.services.SubscribeMessageResponse>}\n */\nconst methodDescriptor_MessageService_SubscribeMessages = new grpc.web.MethodDescriptor(\n  '/services.MessageService/SubscribeMessages',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.services.SubscribeMessageRequest,\n  proto.services.SubscribeMessageResponse,\n  /**\n   * @param {!proto.services.SubscribeMessageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SubscribeMessageResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.SubscribeMessageRequest,\n *   !proto.services.SubscribeMessageResponse>}\n */\nconst methodInfo_MessageService_SubscribeMessages = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.SubscribeMessageResponse,\n  /**\n   * @param {!proto.services.SubscribeMessageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SubscribeMessageResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.SubscribeMessageRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.services.SubscribeMessageResponse>}\n *     The XHR Node Readable Stream\n */\nproto.services.MessageServiceClient.prototype.subscribeMessages =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/services.MessageService/SubscribeMessages',\n      request,\n      metadata || {},\n      methodDescriptor_MessageService_SubscribeMessages);\n};\n\n\n/**\n * @param {!proto.services.SubscribeMessageRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.services.SubscribeMessageResponse>}\n *     The XHR Node Readable Stream\n */\nproto.services.MessageServicePromiseClient.prototype.subscribeMessages =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/services.MessageService/SubscribeMessages',\n      request,\n      metadata || {},\n      methodDescriptor_MessageService_SubscribeMessages);\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.DiscussionServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.DiscussionServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.GetDiscussionsRequest,\n *   !proto.services.GetDiscussionsResponse>}\n */\nconst methodDescriptor_DiscussionService_GetDiscussions = new grpc.web.MethodDescriptor(\n  '/services.DiscussionService/GetDiscussions',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.services.GetDiscussionsRequest,\n  proto.services.GetDiscussionsResponse,\n  /**\n   * @param {!proto.services.GetDiscussionsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetDiscussionsResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.GetDiscussionsRequest,\n *   !proto.services.GetDiscussionsResponse>}\n */\nconst methodInfo_DiscussionService_GetDiscussions = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.GetDiscussionsResponse,\n  /**\n   * @param {!proto.services.GetDiscussionsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetDiscussionsResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.GetDiscussionsRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.services.GetDiscussionsResponse>}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServiceClient.prototype.getDiscussions =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/services.DiscussionService/GetDiscussions',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_GetDiscussions);\n};\n\n\n/**\n * @param {!proto.services.GetDiscussionsRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.services.GetDiscussionsResponse>}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServicePromiseClient.prototype.getDiscussions =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/services.DiscussionService/GetDiscussions',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_GetDiscussions);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.GetDiscussionHistoryByIDRequest,\n *   !proto.services.GetDiscussionHistoryResponse>}\n */\nconst methodDescriptor_DiscussionService_GetDiscussionHistoryByID = new grpc.web.MethodDescriptor(\n  '/services.DiscussionService/GetDiscussionHistoryByID',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.services.GetDiscussionHistoryByIDRequest,\n  proto.services.GetDiscussionHistoryResponse,\n  /**\n   * @param {!proto.services.GetDiscussionHistoryByIDRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetDiscussionHistoryResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.GetDiscussionHistoryByIDRequest,\n *   !proto.services.GetDiscussionHistoryResponse>}\n */\nconst methodInfo_DiscussionService_GetDiscussionHistoryByID = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.GetDiscussionHistoryResponse,\n  /**\n   * @param {!proto.services.GetDiscussionHistoryByIDRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetDiscussionHistoryResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.GetDiscussionHistoryByIDRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.services.GetDiscussionHistoryResponse>}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServiceClient.prototype.getDiscussionHistoryByID =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/services.DiscussionService/GetDiscussionHistoryByID',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_GetDiscussionHistoryByID);\n};\n\n\n/**\n * @param {!proto.services.GetDiscussionHistoryByIDRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.services.GetDiscussionHistoryResponse>}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServicePromiseClient.prototype.getDiscussionHistoryByID =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/services.DiscussionService/GetDiscussionHistoryByID',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_GetDiscussionHistoryByID);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.GetDiscussionStatisticsRequest,\n *   !proto.services.GetDiscussionStatisticsResponse>}\n */\nconst methodDescriptor_DiscussionService_GetDiscussionStatistics = new grpc.web.MethodDescriptor(\n  '/services.DiscussionService/GetDiscussionStatistics',\n  grpc.web.MethodType.UNARY,\n  proto.services.GetDiscussionStatisticsRequest,\n  proto.services.GetDiscussionStatisticsResponse,\n  /**\n   * @param {!proto.services.GetDiscussionStatisticsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetDiscussionStatisticsResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.GetDiscussionStatisticsRequest,\n *   !proto.services.GetDiscussionStatisticsResponse>}\n */\nconst methodInfo_DiscussionService_GetDiscussionStatistics = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.GetDiscussionStatisticsResponse,\n  /**\n   * @param {!proto.services.GetDiscussionStatisticsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetDiscussionStatisticsResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.GetDiscussionStatisticsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.GetDiscussionStatisticsResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.GetDiscussionStatisticsResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServiceClient.prototype.getDiscussionStatistics =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.DiscussionService/GetDiscussionStatistics',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_GetDiscussionStatistics,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.GetDiscussionStatisticsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.GetDiscussionStatisticsResponse>}\n *     Promise that resolves to the response\n */\nproto.services.DiscussionServicePromiseClient.prototype.getDiscussionStatistics =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.DiscussionService/GetDiscussionStatistics',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_GetDiscussionStatistics);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.AddDiscussionRequest,\n *   !proto.services.AddDiscussionResponse>}\n */\nconst methodDescriptor_DiscussionService_AddDiscussion = new grpc.web.MethodDescriptor(\n  '/services.DiscussionService/AddDiscussion',\n  grpc.web.MethodType.UNARY,\n  proto.services.AddDiscussionRequest,\n  proto.services.AddDiscussionResponse,\n  /**\n   * @param {!proto.services.AddDiscussionRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.AddDiscussionResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.AddDiscussionRequest,\n *   !proto.services.AddDiscussionResponse>}\n */\nconst methodInfo_DiscussionService_AddDiscussion = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.AddDiscussionResponse,\n  /**\n   * @param {!proto.services.AddDiscussionRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.AddDiscussionResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.AddDiscussionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.AddDiscussionResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.AddDiscussionResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServiceClient.prototype.addDiscussion =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.DiscussionService/AddDiscussion',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_AddDiscussion,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.AddDiscussionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.AddDiscussionResponse>}\n *     Promise that resolves to the response\n */\nproto.services.DiscussionServicePromiseClient.prototype.addDiscussion =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.DiscussionService/AddDiscussion',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_AddDiscussion);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.UpdateDiscussionLastReadRequest,\n *   !proto.services.UpdateDiscussionResponse>}\n */\nconst methodDescriptor_DiscussionService_UpdateDiscussionLastRead = new grpc.web.MethodDescriptor(\n  '/services.DiscussionService/UpdateDiscussionLastRead',\n  grpc.web.MethodType.UNARY,\n  proto.services.UpdateDiscussionLastReadRequest,\n  proto.services.UpdateDiscussionResponse,\n  /**\n   * @param {!proto.services.UpdateDiscussionLastReadRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.UpdateDiscussionResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.UpdateDiscussionLastReadRequest,\n *   !proto.services.UpdateDiscussionResponse>}\n */\nconst methodInfo_DiscussionService_UpdateDiscussionLastRead = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.UpdateDiscussionResponse,\n  /**\n   * @param {!proto.services.UpdateDiscussionLastReadRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.UpdateDiscussionResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.UpdateDiscussionLastReadRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.UpdateDiscussionResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.UpdateDiscussionResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServiceClient.prototype.updateDiscussionLastRead =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.DiscussionService/UpdateDiscussionLastRead',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_UpdateDiscussionLastRead,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.UpdateDiscussionLastReadRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.UpdateDiscussionResponse>}\n *     Promise that resolves to the response\n */\nproto.services.DiscussionServicePromiseClient.prototype.updateDiscussionLastRead =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.DiscussionService/UpdateDiscussionLastRead',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_UpdateDiscussionLastRead);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.RemoveDiscussionRequest,\n *   !proto.services.RemoveDiscussionResponse>}\n */\nconst methodDescriptor_DiscussionService_RemoveDiscussion = new grpc.web.MethodDescriptor(\n  '/services.DiscussionService/RemoveDiscussion',\n  grpc.web.MethodType.UNARY,\n  proto.services.RemoveDiscussionRequest,\n  proto.services.RemoveDiscussionResponse,\n  /**\n   * @param {!proto.services.RemoveDiscussionRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.RemoveDiscussionResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.RemoveDiscussionRequest,\n *   !proto.services.RemoveDiscussionResponse>}\n */\nconst methodInfo_DiscussionService_RemoveDiscussion = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.RemoveDiscussionResponse,\n  /**\n   * @param {!proto.services.RemoveDiscussionRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.RemoveDiscussionResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.RemoveDiscussionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.RemoveDiscussionResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.RemoveDiscussionResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServiceClient.prototype.removeDiscussion =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.DiscussionService/RemoveDiscussion',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_RemoveDiscussion,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.RemoveDiscussionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.RemoveDiscussionResponse>}\n *     Promise that resolves to the response\n */\nproto.services.DiscussionServicePromiseClient.prototype.removeDiscussion =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.DiscussionService/RemoveDiscussion',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_RemoveDiscussion);\n};\n\n\nmodule.exports = proto.services;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar google_protobuf_descriptor_pb = require('google-protobuf/google/protobuf/descriptor_pb.js');\ngoog.exportSymbol('proto.validator.FieldValidator', null, global);\ngoog.exportSymbol('proto.validator.OneofValidator', null, global);\ngoog.exportSymbol('proto.validator.field', null, global);\ngoog.exportSymbol('proto.validator.oneof', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.validator.FieldValidator = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.validator.FieldValidator, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.validator.FieldValidator.displayName = 'proto.validator.FieldValidator';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.validator.FieldValidator.prototype.toObject = function(opt_includeInstance) {\n    return proto.validator.FieldValidator.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.validator.FieldValidator} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.validator.FieldValidator.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      regex: jspb.Message.getField(msg, 1),\n      intGt: jspb.Message.getField(msg, 2),\n      intLt: jspb.Message.getField(msg, 3),\n      msgExists: jspb.Message.getField(msg, 4),\n      humanError: jspb.Message.getField(msg, 5),\n      floatGt: jspb.Message.getOptionalFloatingPointField(msg, 6),\n      floatLt: jspb.Message.getOptionalFloatingPointField(msg, 7),\n      floatEpsilon: jspb.Message.getOptionalFloatingPointField(msg, 8),\n      floatGte: jspb.Message.getOptionalFloatingPointField(msg, 9),\n      floatLte: jspb.Message.getOptionalFloatingPointField(msg, 10),\n      stringNotEmpty: jspb.Message.getField(msg, 11),\n      repeatedCountMin: jspb.Message.getField(msg, 12),\n      repeatedCountMax: jspb.Message.getField(msg, 13),\n      lengthGt: jspb.Message.getField(msg, 14),\n      lengthLt: jspb.Message.getField(msg, 15),\n      lengthEq: jspb.Message.getField(msg, 16),\n      isInEnum: jspb.Message.getField(msg, 17),\n      uuidVer: jspb.Message.getField(msg, 18)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.validator.FieldValidator}\n */\nproto.validator.FieldValidator.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.validator.FieldValidator;\n  return proto.validator.FieldValidator.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.validator.FieldValidator} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.validator.FieldValidator}\n */\nproto.validator.FieldValidator.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRegex(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setIntGt(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setIntLt(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setMsgExists(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHumanError(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setFloatGt(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setFloatLt(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setFloatEpsilon(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setFloatGte(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setFloatLte(value);\n      break;\n    case 11:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setStringNotEmpty(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRepeatedCountMin(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRepeatedCountMax(value);\n      break;\n    case 14:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLengthGt(value);\n      break;\n    case 15:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLengthLt(value);\n      break;\n    case 16:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLengthEq(value);\n      break;\n    case 17:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsInEnum(value);\n      break;\n    case 18:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setUuidVer(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.validator.FieldValidator.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.validator.FieldValidator.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.validator.FieldValidator} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.validator.FieldValidator.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeDouble(\n      6,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeDouble(\n      7,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 8));\n  if (f != null) {\n    writer.writeDouble(\n      8,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 9));\n  if (f != null) {\n    writer.writeDouble(\n      9,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 10));\n  if (f != null) {\n    writer.writeDouble(\n      10,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));\n  if (f != null) {\n    writer.writeBool(\n      11,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 12));\n  if (f != null) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 13));\n  if (f != null) {\n    writer.writeInt64(\n      13,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 14));\n  if (f != null) {\n    writer.writeInt64(\n      14,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 15));\n  if (f != null) {\n    writer.writeInt64(\n      15,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 16));\n  if (f != null) {\n    writer.writeInt64(\n      16,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));\n  if (f != null) {\n    writer.writeBool(\n      17,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 18));\n  if (f != null) {\n    writer.writeInt32(\n      18,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string regex = 1;\n * @return {string}\n */\nproto.validator.FieldValidator.prototype.getRegex = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.validator.FieldValidator.prototype.setRegex = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearRegex = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasRegex = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int64 int_gt = 2;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getIntGt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setIntGt = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearIntGt = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasIntGt = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 int_lt = 3;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getIntLt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setIntLt = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearIntLt = function() {\n  jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasIntLt = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bool msg_exists = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.validator.FieldValidator.prototype.getMsgExists = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.validator.FieldValidator.prototype.setMsgExists = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearMsgExists = function() {\n  jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasMsgExists = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional string human_error = 5;\n * @return {string}\n */\nproto.validator.FieldValidator.prototype.getHumanError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.validator.FieldValidator.prototype.setHumanError = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearHumanError = function() {\n  jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasHumanError = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional double float_gt = 6;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getFloatGt = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setFloatGt = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearFloatGt = function() {\n  jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasFloatGt = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional double float_lt = 7;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getFloatLt = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setFloatLt = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearFloatLt = function() {\n  jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasFloatLt = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional double float_epsilon = 8;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getFloatEpsilon = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setFloatEpsilon = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearFloatEpsilon = function() {\n  jspb.Message.setField(this, 8, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasFloatEpsilon = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional double float_gte = 9;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getFloatGte = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setFloatGte = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearFloatGte = function() {\n  jspb.Message.setField(this, 9, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasFloatGte = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n/**\n * optional double float_lte = 10;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getFloatLte = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 10, 0.0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setFloatLte = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearFloatLte = function() {\n  jspb.Message.setField(this, 10, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasFloatLte = function() {\n  return jspb.Message.getField(this, 10) != null;\n};\n\n\n/**\n * optional bool string_not_empty = 11;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.validator.FieldValidator.prototype.getStringNotEmpty = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));\n};\n\n\n/** @param {boolean} value */\nproto.validator.FieldValidator.prototype.setStringNotEmpty = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearStringNotEmpty = function() {\n  jspb.Message.setField(this, 11, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasStringNotEmpty = function() {\n  return jspb.Message.getField(this, 11) != null;\n};\n\n\n/**\n * optional int64 repeated_count_min = 12;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getRepeatedCountMin = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setRepeatedCountMin = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearRepeatedCountMin = function() {\n  jspb.Message.setField(this, 12, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasRepeatedCountMin = function() {\n  return jspb.Message.getField(this, 12) != null;\n};\n\n\n/**\n * optional int64 repeated_count_max = 13;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getRepeatedCountMax = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setRepeatedCountMax = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearRepeatedCountMax = function() {\n  jspb.Message.setField(this, 13, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasRepeatedCountMax = function() {\n  return jspb.Message.getField(this, 13) != null;\n};\n\n\n/**\n * optional int64 length_gt = 14;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getLengthGt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setLengthGt = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearLengthGt = function() {\n  jspb.Message.setField(this, 14, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasLengthGt = function() {\n  return jspb.Message.getField(this, 14) != null;\n};\n\n\n/**\n * optional int64 length_lt = 15;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getLengthLt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setLengthLt = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearLengthLt = function() {\n  jspb.Message.setField(this, 15, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasLengthLt = function() {\n  return jspb.Message.getField(this, 15) != null;\n};\n\n\n/**\n * optional int64 length_eq = 16;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getLengthEq = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setLengthEq = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearLengthEq = function() {\n  jspb.Message.setField(this, 16, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasLengthEq = function() {\n  return jspb.Message.getField(this, 16) != null;\n};\n\n\n/**\n * optional bool is_in_enum = 17;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.validator.FieldValidator.prototype.getIsInEnum = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 17, false));\n};\n\n\n/** @param {boolean} value */\nproto.validator.FieldValidator.prototype.setIsInEnum = function(value) {\n  jspb.Message.setField(this, 17, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearIsInEnum = function() {\n  jspb.Message.setField(this, 17, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasIsInEnum = function() {\n  return jspb.Message.getField(this, 17) != null;\n};\n\n\n/**\n * optional int32 uuid_ver = 18;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getUuidVer = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setUuidVer = function(value) {\n  jspb.Message.setField(this, 18, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearUuidVer = function() {\n  jspb.Message.setField(this, 18, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasUuidVer = function() {\n  return jspb.Message.getField(this, 18) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.validator.OneofValidator = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.validator.OneofValidator, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.validator.OneofValidator.displayName = 'proto.validator.OneofValidator';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.validator.OneofValidator.prototype.toObject = function(opt_includeInstance) {\n    return proto.validator.OneofValidator.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.validator.OneofValidator} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.validator.OneofValidator.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      required: jspb.Message.getField(msg, 1)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.validator.OneofValidator}\n */\nproto.validator.OneofValidator.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.validator.OneofValidator;\n  return proto.validator.OneofValidator.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.validator.OneofValidator} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.validator.OneofValidator}\n */\nproto.validator.OneofValidator.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setRequired(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.validator.OneofValidator.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.validator.OneofValidator.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.validator.OneofValidator} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.validator.OneofValidator.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool required = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.validator.OneofValidator.prototype.getRequired = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.validator.OneofValidator.prototype.setRequired = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.validator.OneofValidator.prototype.clearRequired = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.OneofValidator.prototype.hasRequired = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `field`.\n * @type {!jspb.ExtensionFieldInfo<!proto.validator.FieldValidator>}\n */\nproto.validator.field = new jspb.ExtensionFieldInfo(\n  65020,\n  {field: 0},\n  proto.validator.FieldValidator,\n  /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (\n    proto.validator.FieldValidator.toObject),\n  0);\n\ngoogle_protobuf_descriptor_pb.FieldOptions.extensionsBinary[65020] = new jspb.ExtensionFieldBinaryInfo(\n  proto.validator.field,\n  jspb.BinaryReader.prototype.readMessage,\n  jspb.BinaryWriter.prototype.writeMessage,\n  proto.validator.FieldValidator.serializeBinaryToWriter,\n  proto.validator.FieldValidator.deserializeBinaryFromReader,\n  false);\n// This registers the extension field with the extended class, so that\n// toObject() will function correctly.\ngoogle_protobuf_descriptor_pb.FieldOptions.extensions[65020] = proto.validator.field;\n\n\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `oneof`.\n * @type {!jspb.ExtensionFieldInfo<!proto.validator.OneofValidator>}\n */\nproto.validator.oneof = new jspb.ExtensionFieldInfo(\n  65021,\n  {oneof: 0},\n  proto.validator.OneofValidator,\n  /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (\n    proto.validator.OneofValidator.toObject),\n  0);\n\ngoogle_protobuf_descriptor_pb.OneofOptions.extensionsBinary[65021] = new jspb.ExtensionFieldBinaryInfo(\n  proto.validator.oneof,\n  jspb.BinaryReader.prototype.readMessage,\n  jspb.BinaryWriter.prototype.writeMessage,\n  proto.validator.OneofValidator.serializeBinaryToWriter,\n  proto.validator.OneofValidator.deserializeBinaryFromReader,\n  false);\n// This registers the extension field with the extended class, so that\n// toObject() will function correctly.\ngoogle_protobuf_descriptor_pb.OneofOptions.extensions[65021] = proto.validator.oneof;\n\ngoog.object.extend(exports, proto.validator);\n","const attemptUsernameRead = () => {\n  const read = window.localStorage.getItem('httpUsername');\n  if (read) {\n    return read.toString();\n  }\n};\n\nconst attemptPasswordRead = () => {\n  const read = window.localStorage.getItem('httpPassword');\n  if (read) {\n    return read.toString();\n  }\n};\n\nconst authCreds = () => {\n  // console.log({\"Authorization\": 'Basic ' + Buffer.from(`${attemptUsernameRead()}:${attemptPasswordRead()}`).toString('base64')})\n  return {\"Authorization\": 'Basic ' + Buffer.from(`${attemptUsernameRead()}:${attemptPasswordRead()}`).toString('base64')};\n};\n\nexport default authCreds;","const concatUserNames = (props, users) => {\n  let res = '';\n  users.forEach((elem) => {\n    if (elem !== undefined) {\n      let contactName = findContactName(props, elem);\n      let alias = findAlias(props, elem);\n      if (contactName.length > 0) {\n        res = res.concat(contactName);\n        res = res.concat(',');\n      } else if (alias.length > 0) {\n        res = res.concat(alias);\n        res = res.concat(',');\n      } else {\n        res = res.concat(elem.substring(0, 5));\n        res = res.concat(',');\n      }\n    }\n  });\n  res = res.slice(0, -1);\n  return res;\n};\n\nconst concatUserAddresses = (props, users) => {\n  let res = '';\n  users.forEach((elem) => {\n    if (elem.length > 0) {\n      res = res.concat(elem);\n      res = res.concat(',');\n    } else {\n      res = res.concat('Unknown');\n      res = res.concat(',');\n    }\n  });\n  if (res !== '') {\n    res = res.slice(0, -1);\n  }\n  return res;\n};\n\n/**\n   * This function returns the contact name for a specific address.\n   * @param {string} item The address.\n   */\nconst findContactName = (props, item) => {\n  let lookup;\n  if (props.contacts) {\n    lookup = props.contacts.find((elem) => {\n      return elem.user.address === item;\n    });\n  }\n  if (lookup) {\n    return lookup.displayName;\n  } else {\n    return '';\n  }\n};\n\n/**\n * This function returns the friendly name and alias pair for a given address.\n * @param {string} item The address.\n */\nconst findAlias = (props, item) => {\n  let userLookup;\n  if (props.users) {\n    userLookup = props.users.find((elem) => {\n      return elem.address === item;\n    });\n  }\n  if (userLookup) {\n    return userLookup.alias;\n  } else {\n    return '';\n  }\n};\n\nconst routesToAddresses = (routes) => {\n  let addressArray = [];\n  if (routes !== undefined) {\n    routes.forEach((route) => {\n      let lastHop = route.hopsList[route.hopsList.length - 1];\n      addressArray.push(lastHop.hopAddress);\n    });\n  }\n  return addressArray;\n};\n\nconst populateChatHistoryMetadata = (chatHistory) => {\n  let previousElem = undefined;\n  chatHistory.forEach((elem) => {\n    elem['merge'] = false;\n    if (previousElem !== undefined) {\n      if (previousElem.sender === elem.sender\n        && elem.sentTimestamp.seconds < previousElem.sentTimestamp.seconds + 60) {\n        elem['merge'] = true;\n      }\n    }\n    previousElem = elem;\n  });\n};\n\nconst appendToChatHistory = (props, message) => {\n  props.setChatHistory(\n    (oldHistory) => {\n      let previousElem = oldHistory[oldHistory.length - 1];\n      message['merge'] = false;\n      if (previousElem !== undefined) {\n        if (previousElem.sender === message.sender\n          && message.sentTimestamp.seconds < previousElem.sentTimestamp.seconds + 60) {\n          message['merge'] = true;\n        }\n      }\n      return oldHistory.concat(message);\n    }\n  );\n};\n\nexport {\n  concatUserAddresses,\n  concatUserNames,\n  findContactName,\n  findAlias,\n  routesToAddresses,\n  populateChatHistoryMetadata,\n  appendToChatHistory\n};","import React from \"react\";\nimport { List } from \"antd\";\nimport { CopyOutlined } from \"@ant-design/icons\";\nimport { NotificationManager } from \"react-notifications\";\nimport { concatUserNames } from \"../../utils/discussion-utils\";\nimport \"./message-info.css\";\n\nconst cryptoUtils = require(\"../../utils/crypto-utils\");\n\n/**\n * This component represents the info window for a chat history message.\n * @param {*} props The global variables.\n * @returns The JSX of the info component.\n */\nconst MessageInfo = (props) => {\n  /**\n   * Prepend self to hops for a given message's hops array.\n   * @param {*} hops The hops array.\n   */\n  const prepareHopsArray = (hops) => {\n    let temp = [...hops];\n    temp.unshift({ hopAddress: props.selfInfo.address, feeMsat: 0 });\n    temp[temp.length - 1][\"isLast\"] = true;\n    return temp;\n  };\n\n  /**\n   * Creates the list containing the route hops for a specific route.\n   * @param {*} route The route to calculate hops for.\n   * @returns The JSX list representing the hops list.\n   */\n  const routeHopsList = (route) => {\n    return (\n      <List\n        className=\"message-info-routeHopsList\"\n        dataSource={\n          props.selectedMessage ? prepareHopsArray(route.hopsList) : []\n        }\n        renderItem={(item) => {\n          return (\n            <List.Item>\n              <CopyOutlined\n                className=\"message-info-routeHopsList-Outilined\"\n                onClick={() => {\n                  let copyText = document.getElementById(\n                    \"hopAddressText\" + item.hopAddress\n                  );\n                  copyText.select();\n                  copyText.setSelectionRange(0, 99999);\n                  document.execCommand(\"copy\");\n                  NotificationManager.info(\"Copied to clipboard\");\n                }}\n              />\n              <input\n                id={\"hopAddressText\" + item.hopAddress}\n                className=\"message-info-routeHopsList-input\"\n                value={item.hopAddress}\n                onChange={() => {}}\n              />\n              <b>{`${item.hopAddress.substring(\n                0,\n                5\n              )}...${item.hopAddress.substring(\n                item.hopAddress.length - 5,\n                item.hopAddress.length\n              )}:  `}</b>\n              {item.hopAddress === props.selfInfo.address ? \"(You)\" : \"\"}\n              {item.isLast\n                ? `(${concatUserNames(props, [item.hopAddress])})`\n                : \"\"}\n              <span className=\"message-info-routeHopsList-span\">\n                {item.hopAddress === props.selfInfo.address ? \"-\" : \"+\"}\n                {`${\n                  item.hopAddress === props.selfInfo.address\n                    ? cryptoUtils.msatToCurrentCryptoUnit(\n                      props,\n                      parseInt(route.routeAmtMsat ? route.routeAmtMsat : 0) +\n                      parseInt(\n                        route.routeFeesMsat ? route.routeFeesMsat : 0\n                      )\n                    )\n                    : item.isLast\n                      ? cryptoUtils.msatToCurrentCryptoUnit(\n                        props,\n                        parseInt(route.routeAmtMsat)\n                      )\n                      : item.feeMsat\n                        ? cryptoUtils.msatToCurrentCryptoUnit(\n                          props,\n                          parseInt(item.feeMsat)\n                        )\n                        : 0\n                }\n                              ${props.selectedCryptoUnit}`}\n              </span>\n            </List.Item>\n          );\n        }}\n      />\n    );\n  };\n\n  return (\n    <div>\n      {props.selectedMessage ? (\n        props.selectedMessage.sender === props.selfInfo.address ? (\n          <div>\n            <b>Transaction Paths</b>\n            <List\n              dataSource={props.selectedMessage.paymentRoutesList}\n              renderItem={(item) => {\n                return <div>{routeHopsList(item)}</div>;\n              }}\n            />\n          </div>\n        ) : (\n          \"\"\n        )\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default MessageInfo;\n","/**\n * This function returns the currently selected account's URL.\n * @return {string} The URL.\n */\nconst url = () => {\n  return window.localStorage.getItem('url');\n};\n/**\n * This function assembles the backend rpc API URL based on current selected backend location.\n * @returns The string representing the API URL.\n */\nconst apiUrl = () => {\n  return `${url()}/c13n-grpc`;\n};\n\nexport default apiUrl;\n","import apiUrl from \"../config/api-url\";\nimport authCreds from \"../config/auth-creds\";\n\nconst {\n  EstimateMessageRequest,\n  EstimateMessageResponse,\n  SendMessageRequest,\n  SendMessageResponse,\n  SubscribeMessageRequest,\n  SubscribeMessageResponse,\n  MessageOptions,\n} = require(\"../rpc/rpc_pb\");\n\nconst { MessageServiceClient } = require(\"../rpc/rpc_grpc_web_pb.js\");\n\nconst rpcClient = new MessageServiceClient(apiUrl(), {});\n\nconst client = new Object();\n\nclient.subscribeMessages = (req) => {\n  const request = new SubscribeMessageRequest();\n  return rpcClient.subscribeMessages(request, { ...authCreds() });\n};\n\nclient.estimateMessage = (req, callback) => {\n  const request = new EstimateMessageRequest();\n  const messageOptions = new MessageOptions();\n  messageOptions.setFeeLimitMsat(req?.options?.feeLimitMsat);\n  messageOptions.setAnonymous(req?.options?.anonymous);\n  request.setOptions(messageOptions);\n  request.setDiscussionId(req.discussionId);\n  request.setPayload(req.payload);\n  request.setAmtMsat(req.amtMsat);\n\n  return rpcClient.estimateMessage(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? EstimateMessageResponse.toObject(true, res) : undefined)\n  );\n};\n\nclient.sendMessage = async (req, callback) => {\n  const request = new SendMessageRequest();\n  const messageOptions = new MessageOptions();\n  messageOptions.setFeeLimitMsat(req?.options?.feeLimitMsat);\n  messageOptions.setAnonymous(req?.options?.anonymous);\n  request.setOptions(messageOptions);\n  request.setDiscussionId(req.discussionId);\n  request.setPayload(req.payload);\n  request.setAmtMsat(req.amtMsat);\n  if (req.preimage) {\n    request.setPreimage(req.preimage);\n  }\n  if (req.payReq) {\n    request.setPayReq(req.payReq);\n  }\n\n  return rpcClient.sendMessage(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? SendMessageResponse.toObject(res, res) : undefined)\n  );\n};\n\nconst messageClient = () => {\n  return client;\n};\n\nexport default messageClient;\n","const theme = new Object();\n\ntheme.menuDark = 'rgb(23, 23, 37)';\ntheme.menuDarkLite = 'rgb(36, 36, 46)';\ntheme.menuNormal = 'rgb(45, 45, 65)';\ntheme.menuLight = 'rgb(65, 65, 85)';\n\nexport default theme;","import React, { useState } from \"react\";\nimport { Modal } from \"antd\";\nimport \"./c13n-image.css\";\n\n/**\n * This component represents the markdown image rendering process.\n * @param {*} props The markdown object containing syntax information.\n */\nconst C13nImage = React.memo((props) => {\n  const [focus, setFocus] = useState(false);\n  return props.automaticImageLoading ? (\n    <div\n      onClick={() => {\n        setFocus(!focus);\n      }}\n      className=\"c13n-image-click\"\n      style={{\n        width: \"25vw\",\n        transition: props.smoothAnimations ? \"0.5s\" : \"0s\",\n      }}\n    >\n      <img src={props.src} width=\"100%\" />\n      <Modal\n        title=\"\"\n        className=\"c13n-image-modal\"\n        cancelButtonProps={{ style: { display: \"none\" } }}\n        visible={!!focus}\n        width=\"90vw\"\n        bodyStyle={{\n          backgroundImage: `url(\"${props.src}\")`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundPosition: \"center\",\n          backgroundSize:\n            screen.height > screen.width ? \"100% auto\" : \"auto 100%\",\n          height: \"75vh\",\n        }}\n      ></Modal>\n    </div>\n  ) : (\n    <div>\n      (Image)\n      <a href={props.src} target=\"_blank\">\n        {props.src}\n      </a>\n    </div>\n  );\n});\n\nexport default C13nImage;\n","import React from \"react\";\n\n/**\n * This component represents the markdown link rendering process.\n * @param {*} props The markdown object containing syntax information.\n */\nconst c13nLink = (props) => {\n  return (\n    <a href={props.href} target=\"_blank\">\n      {props.href}\n    </a>\n  );\n};\n\nexport default c13nLink;\n","import React from \"react\";\n\n/**\n * This component represents the markdown link rendering process.\n * @param {*} props The markdown object containing syntax information.\n */\nconst c13nLinkRef = (props) => {\n  return (\n    <a href={props.href} target=\"_blank\">\n      {props.href}\n    </a>\n  );\n};\n\nexport default c13nLinkRef;\n","import React from \"react\";\nimport \"./c13n-text.css\";\n\n/**\n * This component represents the markdown image rendering process.\n * @param {*} props The markdown object containing syntax information.\n */\nconst c13nText = (props) => {\n  return <span className=\"c13n-text\">{props.value}</span>;\n};\n\nexport default c13nText;\n","import React from \"react\";\nimport \"./c13n-inline-code.css\";\n\n/**\n * This component represents the markdown inline-code rendering process.\n * @param {*} props The markdown object containing syntax information.\n */\nconst c13nInlineCode = (props) => {\n  return <code className=\"chatHistoryMessageCodeSection\">{props.value}</code>;\n};\n\nexport default c13nInlineCode;\n","let payreqs = {};\n\nconst issuePayreq = (id) => {\n  if(!(id in payreqs)) {\n    payreqs[id] = false;\n  }\n};\n\nconst satisfyPayreq = (id) => {\n  payreqs[id] = true;\n};\n\nconst checkPayreq = (id) => {\n  if(id in payreqs) {\n    return payreqs[id];\n  } else {\n    return false;\n  }\n};\n\nexport {\n  issuePayreq,\n  satisfyPayreq,\n  checkPayreq\n};","import version from \"./version\";\nimport ReactMarkdown from \"react-markdown\";\nimport C13nImage from \"../components/content-pages/markdown/c13n-image\";\nimport c13nLink from \"../components/content-pages/markdown/c13n-link\";\nimport c13nLinkRef from \"../components/content-pages/markdown/c13n-link-ref\";\nimport c13nText from \"../components/content-pages/markdown/c13n-text\";\nimport c13nInlineCode from \"../components/content-pages/markdown/c13n-inline-code\";\n\nimport { issuePayreq, checkPayreq, satisfyPayreq } from \"../utils/payreq/payreq-tracker\";\n\nimport { Button, List } from \"antd\";\nimport { CheckOutlined } from \"@ant-design/icons\";\n\nimport React from \"react\";\nimport { sendPayreqPay } from \"../utils/payreq/utils\";\n\nconst cryptoUtils = require(\"../utils/crypto-utils\");\n\n/**\n * The markdown renderers.\n */\nconst renderers = (props) => {\n  return {\n    image: (mdProps) =>\n      <C13nImage\n        src={mdProps.src}\n        automaticImageLoading={props.automaticImageLoading}\n        smoothAnimations={props.smoothAnimations}\n      />\n    ,\n    link: c13nLink,\n    linkReference: c13nLinkRef,\n    text: c13nText,\n    inlineCode: c13nInlineCode,\n  };\n};\n\nconst messageCore = () => {\n  return {\n    n: \"c13n-cp\",\n    v: version\n  };\n};\n\n/**\n * This function generates the JSX to represent the message inside the chat bubble.\n * @param {} props The global variables.\n * @param {string} payload The message data.\n * @param {boolean} myMessage Flag indicating if message was send by this wallet.\n * @param {number} amtMsat The msat amount delivered by the message.\n * @returns The JSX representing the message.\n */\nconst payloadToDom = (props, payload, myMessage, amtMsat) => {\n  let payloadObj;\n  try {\n    payloadObj = JSON.parse(payload);\n  } catch (err) {\n    payloadObj = payload;\n  }\n  if (payloadObj.t === undefined) {\n    return payload;\n  }\n  switch (payloadObj.t) {\n  case \"message\":\n    return [\n      (payloadObj.c ?\n        <div>\n          <ReactMarkdown\n            source={payloadObj.c}\n            renderers={renderers(props)}\n            disallowedTypes={[\"paragraph\"]}\n            unwrapDisallowed={!!true}\n          />\n        </div>\n        :\n        <div\n          style={{\n            fontSize: '20px',\n            border: '2px solid gray',\n            borderRadius: '5px',\n            padding: '15px'\n          }}\n        >\n          {\n            `You ${myMessage ? 'sent' : 'received'} `\n          }\n          <span\n            style={{\n              color: myMessage ? 'red' : 'green'\n            }}\n          >\n            {`${cryptoUtils.msatToCurrentCryptoUnit(props, amtMsat)}`}\n          </span>\n          <span>\n            {`${props.selectedCryptoUnit}`}\n          </span>\n        </div>),\n      (<div>\n        <List\n          style={{\n            display: payloadObj.attL ? 'inherit' : 'none'\n          }}\n          dataSource={payloadObj.attL}\n          renderItem={(item) => {\n            switch(item.t){\n            case 'image':\n              return (\n                <ReactMarkdown\n                  source={`![](${item.u})`}\n                  renderers={renderers(props)}\n                  disallowedTypes={[\"paragraph\"]}\n                  unwrapDisallowed={!!true}\n                />\n              );\n            case 'file':\n              return(\n                <a href={item.u}>File</a>\n              );\n            }\n          }}\n        />\n      </div>)];\n  case \"payreq\":\n    issuePayreq(payloadObj.id);\n    return (\n      <div\n        style={{\n          border: '1px solid gray',\n          borderRadius: '5px',\n          padding: '10px'\n        }}\n      >\n        <h3> Request to\n          {\n            myMessage ? ' receive' : ' pay'\n          } <b>{cryptoUtils.msatToCurrentCryptoUnit(props, payloadObj.amtMsat)} {props.selectedCryptoUnit}</b></h3>\n        {\n          myMessage ? checkPayreq(payloadObj.id)\n            ?\n            <h2 style={{ color: 'green' }}><b>Paid <CheckOutlined /></b></h2>\n\n            :\n            <h2><b>Pending</b></h2>\n\n\n            : checkPayreq(payloadObj.id) ?\n              <div>\n                <h2 style={{ color: 'green' }}><b>Paid <CheckOutlined /></b></h2>\n              </div>\n              :\n              <div>\n                <Button\n                  type=\"primary\"\n                  onClick={() => {\n                    sendPayreqPay(props, payloadObj);\n                  }}\n                  style={{\n                    margin: \"15px\",\n                    fontSize: '20px',\n                    width: '90%',\n                    height: '75%'\n                  }}\n                >\n                      Pay\n                </Button>\n                <br />\n              </div>\n\n        }\n        <span\n          style={{\n            display: payloadObj.description ? \"inherit\" : \"none\"\n          }}\n        >\n          <b>Description</b>\n          <br />\n          <span>{payloadObj.description}</span>\n          <br />\n          <br />\n        </span>\n        <span\n          style={{\n            fontSize: '10px'\n          }}\n        >\n          <b>ID</b>\n          <span>{payloadObj.id}</span>\n        </span>\n      </div>\n    );\n  case \"payreq_pay\":\n    satisfyPayreq(payloadObj.id);\n    return (\n      <div\n        style={{\n          border: '2px solid green',\n          borderRadius: '5px',\n          padding: '10px',\n        }}\n      >\n        <span\n          style={{\n            fontSize: '25px',\n            color: 'green'\n          }}\n        >\n\n        </span>\n          Paid request {payloadObj.id}\n        <CheckOutlined\n          style={{\n            fontSize: '30px',\n            color: 'green'\n          }}\n        />\n      </div>\n    );\n  }\n};\n\n/**\n * Parses the entered message string to an object with respect to the payload protocol.\n * @param {*} message The entered message string.\n * @returns The message object.\n */\nconst messageToPayload = (message, attachmentList) => {\n  let messageObj = {\n    ...messageCore(),\n    t: \"message\",\n    c: message,\n    attL: attachmentList\n  };\n  try {\n    return JSON.stringify(messageObj);\n  } catch (err) {\n    return message;\n  }\n};\n\nconst payreqToPayload = (amtMsat, description) => {\n  let messageObj = {\n    ...messageCore(),\n    t: \"payreq\",\n    amtMsat: amtMsat,\n    description: description,\n    id: Date.now()\n  };\n  try {\n    return JSON.stringify(messageObj);\n  } catch (err) {\n    return '';\n  }\n};\n\nconst payreqPayToPayload = (id) => {\n  let messageObj = {\n    ...messageCore(),\n    t: \"payreq_pay\",\n    id: id\n  };\n  try {\n    return JSON.stringify(messageObj);\n  } catch (err) {\n    return '';\n  }\n};\n\nexport {\n  payloadToDom,\n  messageToPayload,\n  payreqToPayload,\n  payreqPayToPayload\n};\n","import { payreqPayToPayload } from \"../../payload-protocol/parsers\";\nimport messageClient from \"../../services/messageServices\";\nimport { appendToChatHistory } from \"../discussion-utils\";\n\nconst sendPayreqPay = (props, payreqObj) => {\n  console.log('Paying ', payreqObj);\n  messageClient().sendMessage(\n    {\n      discussionId: props.selectedDiscussion.id,\n      payload: payreqPayToPayload(payreqObj.id),\n      amtMsat: parseInt(payreqObj.amtMsat)\n    }, (err, res) => {\n      if (err) {\n        console.log(err);\n      }\n      if (res) {\n        console.log(res.sentMessage);\n        props.selectedDiscussion.lastMsgId = res.sentMessage.id;\n        props.selectedDiscussion.lastReadMsgId = res.sentMessage.id;\n        appendToChatHistory(props, res.sentMessage);\n        props.updateCurrentFunds();\n        props.setLastFundChange(\n          `-${Number(\n            res.sentMessage.amtMsat / 1000 +\n            res.sentMessage.totalFeesMsat / 1000\n          )}`\n        );\n      }\n    }\n  );\n};\n\nexport {\n  sendPayreqPay\n};","/**\n * The payload protocol version.\n */\nconst version = '0.0.1c';\n\nexport default version;","const createAttachment = (type, uri, tags, show) => {\n  return {\n    t: type,\n    u: uri,\n    tags: tags ? tags : '',\n    show: show ? show : false\n  };\n};\n\nexport {\n  createAttachment\n};","import { messageToPayload } from \"../../payload-protocol/parsers\";\nimport { createAttachment } from \"../../payload-protocol/utils\";\n\nimport messageClient from \"../../services/messageServices\";\n\nimport { appendToChatHistory } from '../../utils/discussion-utils';\n\nconst axios = require('axios').default;\n\nlet lsatUrl = 'https://kenovios.space:3001';\nlet preimage = \"\";\nlet lsat = {};\n\nconst headerToLsat = (header) => {\n  const macaroonStr = header.split(' ')[1];\n  const invoiceStr = header.split(' ')[2];\n  const macaroon = macaroonStr.slice(10, -2);\n  const invoice = invoiceStr.slice(9, -1);\n  return {\n    invoice: invoice,\n    macaroon: macaroon\n  };\n};\n\nconst uploadImage = async (props) => {\n  console.log('Uploading file to LSAT server');\n  await axios.post(\n    lsatUrl + '/upload',\n  ).then((res) => {\n  }).catch((err) => {\n    let header = (err?.response?.headers['www-authenticate']);\n    console.log(header);\n    if (header) {\n      lsat = headerToLsat(header);\n    }\n  });\n  if (lsat?.invoice) {\n    messageClient().sendMessage(\n      {\n        payReq: lsat.invoice,\n        payload: \"\",\n        options: {\n          anonymous: true\n        }\n      },\n      async (err, res) => {\n        if (res) {\n          console.log(res);\n          preimage = res.sentMessage.preimage;\n          const fileElem = document.getElementById('fileInput');\n          const file = fileElem.files[0];\n          let formData = new FormData();\n          formData.append('file', file);\n\n          axios.post(\n            lsatUrl + '/upload',\n            formData,\n            {\n              headers: {\n                'Authorization': `LSAT ${lsat.macaroon}:${preimage}`,\n              },\n            }\n          ).then((res) => {\n            console.log(res);\n            let filename = res?.data?.filename;\n            let fullUrl = `${lsatUrl}/download?name=${filename}`;\n            messageClient().sendMessage(\n              {\n                payload: messageToPayload(\"\", [createAttachment(\"image\", fullUrl, \"lsat\", true)]),\n                amtMsat: 1000,\n              }, (err, res) => {\n                if (err) {\n                  console.log(err);\n                }\n                if (res) {\n                  props.selectedDiscussion.lastMsgId = res.sentMessage.id;\n                  props.selectedDiscussion.lastReadMsgId = res.sentMessage.id;\n                  appendToChatHistory(props, res.sentMessage);\n                  props.updateCurrentFunds();\n                  props.setLastFundChange(`-${Number(res.sentMessage.amtMsat / 1000 + res.sentMessage.totalFeesMsat / 1000)}`);\n                }\n              });\n          }).catch((err) => {\n            console.log(err.response);\n          });\n        }\n        if (err) {\n          console.log(err);\n        }\n      });\n  }\n\n};\n\nexport default uploadImage;\n","const sleep = (ms) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\nexport default sleep;\n","export default __webpack_public_path__ + \"static/media/arrow-right.e10cfb42.svg\";","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  Button,\n  Tooltip,\n  Switch,\n  Input,\n  Dropdown,\n  Menu,\n  Divider,\n} from \"antd\";\nimport {\n  PlusOutlined,\n  EyeOutlined,\n  EyeInvisibleOutlined,\n  FileImageOutlined,\n  SmileOutlined,\n  FormOutlined,\n  LoadingOutlined,\n} from \"@ant-design/icons\";\nimport Picker from \"emoji-picker-react\";\nimport { NotificationManager } from \"react-notifications\";\n\nimport messageClient from \"../../services/messageServices\";\nimport { appendToChatHistory } from \"../../utils/discussion-utils\";\nimport theme from \"../../style/theme\";\nimport uploadImage from \"../../utils/lsat/upload-image\";\nimport sleep from \"../../utils/system\";\n\nimport {\n  messageToPayload,\n  payreqToPayload,\n} from \"../../payload-protocol/parsers\";\nimport \"./chat-history-input.css\";\nimport ChatButton from \"../../media/arrow-right.svg\";\nimport { createAttachment } from \"../../payload-protocol/utils\";\n\nconst cryptoUtils = require(\"../../utils/crypto-utils\");\n\nconst ChatHistoryInput = (props) => {\n  const [selectedInput, setSelectedInput] = useState(\"text\");\n  const [currentFee, setCurrentFee] = useState(-1);\n  const [messageToSend, setMessageToSend] = useState(\"\");\n  const [emojiPickerActive, setEmojiPickerActive] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const [fileDialogActive, setFileDialogActive] = useState(false);\n  const [imageURL, setImageURL] = useState(\"\");\n  const [uploadLoading, setUploadLoading] = useState(false);\n  const [payreqModalActive, setPayreqModalActive] = useState(false);\n  const [payreqAmount, setPayreqAmount] = useState(0);\n  const [payreqDescription, setPayreqDescription] = useState(\"\");\n\n  /**\n   * This function sends a payload and the currently entered payload to the current discussion.\n   * @param {string} text The payload to send.\n   */\n  const sendMessage = async (text, attachmentList) => {\n    const amtMsat = cryptoUtils.currentCryptoAmtToMsat(props, amount);\n    const msg = {\n      discussionId: props.selectedDiscussion.id,\n      amtMsat:\n        amtMsat === \"\"\n          ? 1000\n          : parseInt(amtMsat) > 1000\n            ? parseInt(amtMsat)\n            : 1000,\n      payload: messageToPayload(text, attachmentList),\n      options: {\n        anonymous: props.anonymousActive,\n      },\n    };\n    setMessageToSend(\"\");\n    setAmount(cryptoUtils.retrieveDefaultCryptoAmount(props));\n    messageClient().sendMessage(msg, (err, res) => {\n      if (err) {\n        console.log(err);\n        NotificationManager.warning(err.message);\n      }\n      if (res) {\n        console.log(res.sentMessage);\n        props.selectedDiscussion.lastMsgId = res.sentMessage.id;\n        props.selectedDiscussion.lastReadMsgId = res.sentMessage.id;\n        appendToChatHistory(props, res.sentMessage);\n        props.updateCurrentFunds();\n        props.setLastFundChange(\n          `-${Number(\n            res.sentMessage.amtMsat / 1000 +\n              res.sentMessage.totalFeesMsat / 1000\n          )}`\n        );\n      }\n    });\n  };\n\n  /**\n   * Calculates the fee for a specific discussion and currently entered msat amount.\n   * @param {*} discussion The discussion.\n   */\n  const calculateFee = (discussion) => {\n    const amtMsat = cryptoUtils.currentCryptoAmtToMsat(props, amount);\n    const msg = {\n      discussionId: discussion.id,\n      amtMsat:\n        amtMsat === \"\"\n          ? 1000\n          : parseInt(amtMsat) > 1000\n            ? parseInt(amtMsat)\n            : 1000,\n      payload: \"fee_calculation\",\n    };\n    messageClient().estimateMessage(msg, (err, res) => {\n      if (err) {\n        NotificationManager.warning(err.message);\n      }\n      if (res) {\n        setCurrentFee(\n          cryptoUtils.msatToCurrentCryptoUnit(props, res.message.totalFeesMsat)\n        );\n      }\n    });\n  };\n\n  /**\n   * the fucntion selects all the text in the amount input and highlight it in order to change on focus.\n   */\n\n  const selectAmountInputText = () => {\n    const input = document.getElementById(\"cryptoAmountInput\");\n    input.focus();\n    input.select();\n  };\n\n  const selectPayreqAmountInputText = () => {\n    const input = document.getElementById(\"payreqAmountInput\");\n    input.focus();\n    input.select();\n  };\n\n  /**\n   * Hook to perform discussion related actions when the selected discussion changes.\n   */\n  useEffect(() => {\n    calculateFee(props.selectedDiscussion);\n    setCurrentFee();\n\n    setMessageToSend(\"\");\n    setAmount(cryptoUtils.retrieveDefaultCryptoAmount(props));\n    document.getElementById(\"messageInputArea\").focus();\n  }, [props.selectedDiscussion]);\n\n  return (\n    <div\n      onBlur={() => {\n        setSelectedInput(\"text\");\n      }}\n      className=\"chat-history-footer-container\"\n    >\n      <Dropdown\n        trigger=\"click\"\n        overlay={\n          <Menu className=\"chat-history-input-dropdown\">\n            <Menu.Item\n              onClick={() => {\n                setFileDialogActive(true);\n              }}\n            >\n              <FileImageOutlined\n                className=\"chat-history-input-fileImageOutlined\"\n                style={{ fontSize: \"25px\" }}\n              />\n            </Menu.Item>\n            <Menu.Item\n              onClick={() => {\n                setPayreqModalActive(true);\n              }}\n            >\n              <FormOutlined style={{ fontSize: \"25px\" }} />\n            </Menu.Item>\n            <Menu.Item onClick={() => {}}>\n              <Tooltip title=\"Anonymous Mode\" placement=\"top\">\n                <Switch\n                  onChange={(value) => {\n                    props.setAnonymousActive(value);\n                  }}\n                  checkedChildren={<EyeInvisibleOutlined />}\n                  unCheckedChildren={<EyeOutlined />}\n                  disabled={\n                    props.selectedDiscussion.participantsList.length > 1\n                  }\n                />\n              </Tooltip>\n            </Menu.Item>\n          </Menu>\n        }\n      >\n        <PlusOutlined className=\"chat-history-footer-addMedia\" />\n      </Dropdown>\n      <div className=\"chat-history-footer-messageMoney\">\n        <Input.TextArea\n          id=\"messageInputArea\"\n          value={messageToSend}\n          onFocus={(e) => {\n            if (props.chatHistory.length !== 0) {\n              props.updateLastMessageSeen(props.chatHistory);\n              props.updateChatScroll();\n              setSelectedInput(\"text\");\n            }\n          }}\n          onChange={(e) => {\n            if (e.key === \"Enter\") {\n              e.preventDefault();\n            } else {\n              setMessageToSend(e.target.value);\n            }\n          }}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\" && !e.shiftKey) {\n              e.preventDefault();\n              sendMessage(e.target.value);\n            }\n          }}\n          placeholder={`Enter ${\n            props.anonymousActive ? \"anonymous \" : \"\"\n          }message`}\n          style={{\n            display: \"inline-block\",\n            width:\n              selectedInput === \"text\"\n                ? \"calc(100% - 100px)\"\n                : \"calc(100% - 150px)\",\n            resize: \"none\",\n            height:\n              document.getElementById(\"messageInputArea\")?.scrollHeight > 45\n                ? messageToSend.length === 0\n                  ? \"35px\"\n                  : document.getElementById(\"messageInputArea\")?.scrollHeight\n                : \"35px\",\n            maxHeight: \"100px\",\n            borderRadius: \"15px\",\n            border: \"2px solid gray\",\n            borderColor: selectedInput === \"text\" ? \"white\" : \"gray\",\n          }}\n        />\n        <div className=\"chat-history-footer-emoticons\">\n          <div className=\"chat-history-footer-emoticonsSmile\">\n            <SmileOutlined\n              onClick={() => {\n                setEmojiPickerActive(!emojiPickerActive);\n              }}\n              onBlur={() => {\n                setEmojiPickerActive(false);\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"chat-history-footer-input-addAmount\">\n          <div\n            className=\"chat-history-footer-input-currency\"\n            style={{\n              width: selectedInput === \"crypto\" ? \"130px\" : \"80px\",\n              marginLeft: selectedInput === \"crypto\" ? \"20px\" : \"\",\n            }}\n          >\n            {cryptoUtils.selectedCryptoToVerbose(props.selectedCryptoUnit)}\n          </div>\n          <Tooltip\n            title={`${cryptoUtils.currentCryptoAmtToFiat(props, amount)} ${\n              props.selectedFiatUnit\n            }`}\n            placement=\"top\"\n            visible={selectedInput === \"crypto\"}\n          >\n            <Input\n              id=\"cryptoAmountInput\"\n              type=\"number\"\n              value={amount}\n              onBlur={() => {\n                if (\n                  amount <\n                  parseFloat(cryptoUtils.retrieveDefaultCryptoAmount(props))\n                ) {\n                  setAmount(\n                    parseFloat(cryptoUtils.retrieveDefaultCryptoAmount(props))\n                  );\n                }\n                if (amount > 1000000) {\n                  setAmount(1000000);\n                }\n              }}\n              min={1}\n              max={1000000}\n              onFocus={() => {\n                setSelectedInput(\"crypto\");\n                selectAmountInputText();\n              }}\n              className=\"chat-history-footer-input-addAmount-amount\"\n              style={{\n                width: selectedInput === \"crypto\" ? \"130px\" : \"80px\",\n                borderColor: selectedInput === \"crypto\" ? \"white\" : \"gray\",\n                color: amount === \"1\" ? \"gray\" : \"white\",\n              }}\n              onChange={(e) => {\n                const numCast = parseFloat(e.target.value);\n                if (isNaN(numCast)) {\n                  setAmount(amount);\n                } else {\n                  setAmount(e.target.value);\n                }\n                if (e.target.value === \"\") {\n                  setAmount(cryptoUtils.retrieveDefaultCryptoAmount(props));\n                }\n              }}\n              placeholder={cryptoUtils.retrieveDefaultCryptoAmount(props)}\n            />\n          </Tooltip>\n        </div>\n      </div>\n\n      <div\n        className=\"chat-history-footer-emojiPicker\"\n        style={{\n          display: emojiPickerActive ? \"inherit\" : \"none\",\n        }}\n      >\n        <Picker\n          onEmojiClick={(e, emoji) => {\n            e.preventDefault();\n            setMessageToSend(messageToSend.concat(emoji.emoji));\n          }}\n          pickerStyle={{\n            backgroundColor: \"#656585\",\n            width: \"250px\",\n          }}\n          disableSearchBar\n          disableAutoFocus\n          disableSkinTonePicker\n        />\n      </div>\n      <div\n        className=\"chat-history-footer-sendButtonContainer\"\n        style={{\n          backgroundColor: theme.menuLight,\n        }}\n      >\n        <div className=\"chat-history-footer-feeContainer\">\n          <span className=\"chat-history-footer-feeText\">\n            {`Fee ${currentFee || 0} ${props.selectedCryptoUnit}`}\n          </span>\n        </div>\n\n        <Button\n          onMouseDown={(e) => {\n            e.preventDefault();\n          }}\n          onClick={() => {\n            sendMessage(messageToSend);\n          }}\n          className=\"chat-history-footer-sendButton\"\n        >\n          <img src={ChatButton} className=\"chat-history-footer-sendButtonSvg\" />\n        </Button>\n      </div>\n      <Modal\n        visible={!!fileDialogActive}\n        onOk={async () => {\n          setUploadLoading(true);\n          switch (imageURL.length) {\n          case 0:\n            uploadImage(props);\n            break;\n          default:\n            sendMessage(\"\", [createAttachment(\"image\", imageURL)]);\n          }\n          await sleep(1500);\n          setImageURL(\"\");\n          setFileDialogActive(false);\n          setUploadLoading(false);\n        }}\n        onCancel={() => {\n          setFileDialogActive(false);\n        }}\n        okButtonProps={{ type: \"default\", disabled: !!uploadLoading }}\n        okText={uploadLoading ? <LoadingOutlined spin /> : \"Send\"}\n      >\n        <Divider orientation=\"left\">Choose image file</Divider>\n        <input\n          disabled\n          id=\"fileInput\"\n          type=\"file\"\n          accept=\"image/png, image/jpeg\"\n        />\n        <Divider>OR</Divider>\n        <Divider orientation=\"left\">Paste image link:</Divider>\n        <Input\n          value={imageURL}\n          onChange={(e) => {\n            setImageURL(e.target.value);\n          }}\n        />\n      </Modal>\n      <Modal\n        visible={!!payreqModalActive}\n        title=\"Request Payment\"\n        onOk={() => {\n          console.log(\n            \"Requesting: \",\n            cryptoUtils.currentCryptoAmtToMsat(props, payreqAmount),\n            \"msat\"\n          );\n          messageClient().sendMessage(\n            {\n              discussionId: props.selectedDiscussion.id,\n              payload: payreqToPayload(\n                cryptoUtils.currentCryptoAmtToMsat(props, payreqAmount),\n                payreqDescription\n              ),\n              amtMsat: 1000,\n            },\n            (err, res) => {\n              if (err) {\n                NotificationManager.error(\"Could not send message\");\n                console.log(err);\n              }\n              if (res) {\n                setPayreqAmount(0);\n                setPayreqDescription(\"\");\n                setPayreqModalActive(false);\n                props.selectedDiscussion.lastMsgId = res.sentMessage.id;\n                props.selectedDiscussion.lastReadMsgId = res.sentMessage.id;\n                appendToChatHistory(props, res.sentMessage);\n                props.updateCurrentFunds();\n                props.setLastFundChange(\n                  `-${Number(\n                    res.sentMessage.amtMsat / 1000 +\n                      res.sentMessage.totalFeesMsat / 1000\n                  )}`\n                );\n              }\n            }\n          );\n        }}\n        onCancel={() => {\n          setPayreqModalActive(false);\n        }}\n        okButtonProps={{ type: \"default\" }}\n        okText={\"Request\"}\n      >\n        Description:\n        <Input\n          value={payreqDescription}\n          onChange={(e) => {\n            setPayreqDescription(e.target.value);\n          }}\n        />\n        <br />\n        Amount ({props.selectedCryptoUnit}):\n        <Input\n          id=\"payreqAmountInput\"\n          type=\"number\"\n          value={payreqAmount}\n          onBlur={() => {\n            if (\n              amount <\n              parseFloat(cryptoUtils.retrieveDefaultCryptoAmount(props))\n            ) {\n              setAmount(\n                parseFloat(cryptoUtils.retrieveDefaultCryptoAmount(props))\n              );\n            }\n            if (amount > 1000000) {\n              setAmount(1000000);\n            }\n          }}\n          onFocus={() => {\n            selectPayreqAmountInputText();\n          }}\n          onChange={(e) => {\n            const numCast = parseFloat(e.target.value);\n            if (isNaN(numCast)) {\n              setPayreqAmount(amount);\n            } else {\n              setPayreqAmount(e.target.value);\n            }\n            if (e.target.value === \"\") {\n              setPayreqAmount(cryptoUtils.retrieveDefaultCryptoAmount(props));\n            }\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default ChatHistoryInput;\n","import apiUrl from \"../config/api-url\";\nimport authCreds from \"../config/auth-creds\";\n\nconst {\n  GetDiscussionsRequest,\n  GetDiscussionsResponse,\n  GetDiscussionHistoryByIDRequest,\n  GetDiscussionHistoryResponse,\n  GetDiscussionStatisticsRequest,\n  GetDiscussionStatisticsResponse,\n  AddDiscussionRequest,\n  AddDiscussionResponse,\n  UpdateDiscussionLastReadRequest,\n  UpdateDiscussionResponse,\n  RemoveDiscussionRequest,\n  RemoveDiscussionResponse,\n  KeySetPageOptions,\n  DiscussionInfo,\n  DiscussionOptions,\n} = require(\"../rpc/rpc_pb\");\nconst { DiscussionServiceClient } = require(\"../rpc/rpc_grpc_web_pb.js\");\n\nconst rpcClient = new DiscussionServiceClient(apiUrl(), {});\n\nconst client = new Object();\n\nclient.getDiscussions = (req) => {\n  const request = new GetDiscussionsRequest();\n  return rpcClient.getDiscussions(request, { ...authCreds() });\n};\n\nclient.getDiscussionHistoryById = (req) => {\n  const request = new GetDiscussionHistoryByIDRequest();\n  const keySetPageOptions = new KeySetPageOptions();\n  keySetPageOptions.setLastId(req.pageOptions.lastId);\n  keySetPageOptions.setPageSize(req.pageOptions.pageSize);\n  keySetPageOptions.setReverse(req.pageOptions.reverse);\n  request.setPageOptions(keySetPageOptions);\n  request.setId(req.id);\n  return rpcClient.getDiscussionHistoryByID(request, { ...authCreds() });\n};\n\nclient.getDiscussionStatistics = (req, callback) => {\n  const request = new GetDiscussionStatisticsRequest();\n  request.setId(req.id);\n  return rpcClient.getDiscussionStatistics(\n    request,\n    { ...authCreds() },\n    (err, res) =>\n      callback(\n        err,\n        res ? GetDiscussionStatisticsResponse.toObject(res, res) : undefined\n      )\n  );\n};\n\nclient.addDiscussion = (req, callback) => {\n  const request = new AddDiscussionRequest();\n  const discussionInfo = new DiscussionInfo();\n  const discussionOptions = new DiscussionOptions();\n\n  discussionOptions.setFeeLimitMsat(req.discussion?.options?.feeLimitMsat);\n  discussionOptions.setAnonymous(req.discussion?.options?.anonymous);\n  discussionInfo.setOptions(discussionOptions);\n  discussionInfo.setId(req.discussion.id);\n  discussionInfo.setParticipantsList(req.discussion.participants);\n  discussionInfo.setLastReadMsgId(req.discussion.lastReadMsgId);\n  discussionInfo.setLastMsgId(req.discussion.lastMsgId);\n  request.setDiscussion(discussionInfo);\n  return rpcClient.addDiscussion(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? AddDiscussionResponse.toObject(res, res) : undefined)\n  );\n};\n\nclient.updateDiscussionLastRead = (req, callback) => {\n  const request = new UpdateDiscussionLastReadRequest();\n  request.setDiscussionId(req.discussionId);\n  request.setLastReadMsgId(req.lastReadMsgId);\n  return rpcClient.updateDiscussionLastRead(\n    request,\n    { ...authCreds() },\n    (err, res) =>\n      callback(\n        err,\n        res ? UpdateDiscussionResponse.toObject(res, res) : undefined\n      )\n  );\n};\n\nclient.removeDiscussion = (req, callback) => {\n  const request = new RemoveDiscussionRequest();\n  request.setId(req.id);\n  return rpcClient.removeDiscussion(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? RemoveDiscussionResponse.toObject(res, res) : undefined)\n  );\n};\n\nconst discussionClient = () => {\n  return client;\n};\n\nexport default discussionClient;\n","import React, { useEffect, useState } from \"react\";\nimport { ArrowUpOutlined, ArrowDownOutlined } from \"@ant-design/icons\";\n\nimport discussionClient from \"../../services/discussionServices\";\nimport \"./chat-history-statistics.css\";\nimport { NotificationManager } from \"react-notifications\";\n\nconst cryptoUtils = require(\"../../utils/crypto-utils\");\n\n/**\n * This component represents the chat history statistics window.\n * @param {*} props The global variables.\n */\nconst ChatHistoryStatistics = (props) => {\n  const [loaded, setLoaded] = useState(false);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalOutcome, setTotalOutcome] = useState(0);\n  const [totalFees, setTotalFees] = useState(0);\n  const [totalSent, setTotalSent] = useState(0);\n  const [totalReceived, setTotalReceived] = useState(0);\n\n  /**\n   * This process is called once on component loading.\n   * It fetches the statistics from the correct endpoint.\n   */\n  useEffect(() => {\n    setTotalIncome(0);\n    setTotalFees(0);\n    setTotalOutcome(0);\n    setTotalReceived(0);\n    setTotalSent(0);\n    setLoaded(false);\n    discussionClient().getDiscussionStatistics(\n      {\n        id: props.selectedDiscussion.id,\n      },\n      (err, res) => {\n        if (err) {\n          NotificationManager.error(\"Failed to fetch statistics\");\n          console.log(err);\n        }\n        if (res) {\n          if (res.amtMsatReceived) {\n            setTotalIncome(res.amtMsatReceived);\n          }\n          if (res.amtMsatSent) {\n            setTotalOutcome(res.amtMsatSent);\n          }\n          if (res.amtMsatFees) {\n            setTotalFees(res.amtMsatFees);\n          }\n          if (res.messagesSent) {\n            setTotalSent(res.messagesSent);\n          }\n          if (res.messagesReceived) {\n            setTotalReceived(res.messagesReceived);\n          }\n          setLoaded(true);\n        }\n      }\n    );\n  }, [props.selectedDiscussion.id]);\n\n  /**\n   * The chat history statistics JSX\n   */\n  return (\n    <div className=\"chatHistoryStatistics\">\n      {loaded ? (\n        <div>\n          <span\n            style={{\n              display: props.selectedDiscussion ? \"inline-block\" : \"none\",\n            }}\n          >\n            <span className=\"contentHeaderTotalAmount\">\n              <ArrowDownOutlined />\n              {`${\n                cryptoUtils.msatToCurrentCryptoUnit(props, totalIncome) || 0\n              }`}\n              <span className=\"chat-history-statistics-ArrowDownOutlined\">\n                {`${props.selectedCryptoUnit} `}\n                received\n              </span>\n            </span>\n            <br />\n            <span className=\"chat-history-statistics-contentHeaderTotalAmount\">\n              <ArrowUpOutlined />\n              {`${\n                cryptoUtils.msatToCurrentCryptoUnit(props, totalOutcome) || 0\n              }`}\n              <span className=\"chat-history-statistics-ArrowUpOutlined\">\n                {`${props.selectedCryptoUnit} `}\n                sent\n              </span>\n            </span>\n          </span>\n          <br />\n          <br />\n          Messages Sent: <b>{`${totalSent || 0}`}</b>\n          <br />\n          <br />\n          Messages Received: <b>{`${totalReceived || 0}`}</b>\n          <br />\n          <br />\n          Total Fees Paid:{\" \"}\n          <b>{`${cryptoUtils.msatToCurrentCryptoUnit(props, totalFees) || 0}${\n            props.selectedCryptoUnit\n          }`}</b>\n        </div>\n      ) : (\n        <div>Loading</div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatHistoryStatistics;\n","import Parser from 'html-react-parser';\n\nconst jdenticon = require(\"jdenticon\");\n\nlet iconCache = {};\n\nconst generateIdenticon = (text, size) => {\n  if(text in iconCache && iconCache[text] !== undefined) {\n    if(size in iconCache[text] && iconCache[text][size] !== undefined) {\n      return Parser(iconCache[text][size]);\n    }\n  }\n  const icon = jdenticon.toSvg(text, size);\n  iconCache[text] = {};\n  iconCache[text][size] = icon;\n  return Parser(icon);\n};\n\nexport default generateIdenticon;","import React from \"react\";\n\nimport { Modal } from \"antd\";\n\nimport { NotificationManager } from \"react-notifications\";\n\nimport { findAlias, findContactName } from \"../../utils/discussion-utils\";\nimport generateIdenticon from \"../../utils/identicon.js\";\n\nimport \"./user-preview.css\";\n\n/**\n * This component represents the modal for previewing a user.\n * @param {*} props The global variables.\n * @returns The JSX of the component.\n */\nconst UserPreview = (props) => {\n  return (\n    <div>\n      <Modal\n        visible={props.visible}\n        title={\n          <div>\n            <span className=\"user-preview-modal\">\n              {generateIdenticon(props.user?.address, 45)}\n            </span>\n            {`${findContactName(props, props.user?.address)} (${findAlias(\n              props,\n              props.user?.address\n            )})`}\n          </div>\n        }\n        onOk={() => {\n          props.setVisible(false);\n        }}\n        cancelButtonProps={{ style: { display: \"none\" } }}\n        onCancel={() => {\n          props.setVisible(false);\n        }}\n      >\n        <input\n          id={\"userPreviewAddress\"}\n          value={props.user?.address}\n          onChange={() => {}}\n        />\n        Address:\n        <br />\n        <span\n          className=\"user-preview-address\"\n          onClick={() => {\n            let copyText = document.getElementById(\"userPreviewAddress\");\n            copyText.select();\n            copyText.setSelectionRange(0, 99999);\n            document.execCommand(\"copy\");\n            NotificationManager.info(\"Copied to clipboard\");\n          }}\n        >\n          {props.user?.address}\n        </span>\n      </Modal>\n    </div>\n  );\n};\n\nexport default UserPreview;\n","const findUserByAddress = (props, addr) => {\n  let userLookup = props.users.find(\n    (elem) => {\n      return elem.address === addr;\n    }\n  );\n  return userLookup;\n};\n\nconst splitURI = (URI) => {\n  const res = URI.split('@');\n  if (res.length===2) {\n    return {\n      address: res[0],\n      hostport: res[1],\n      error: ''\n    };\n  } else {\n    return {\n      error: 'invalid format'\n    };\n  }\n};\n\nexport {\n  findUserByAddress,\n  splitURI\n};","import React, { useState, useEffect } from \"react\";\nimport {\n  List,\n  Divider,\n  Modal,\n  Layout,\n  Button,\n  Tooltip,\n  Dropdown,\n  Menu,\n} from \"antd\";\nimport {\n  LoadingOutlined,\n  ExclamationCircleOutlined,\n  DownCircleOutlined,\n  SafetyOutlined,\n  CloseCircleOutlined,\n  CheckOutlined,\n  EllipsisOutlined,\n} from \"@ant-design/icons\";\nimport JSONPretty from 'react-json-pretty';\nimport 'react-json-pretty/themes/monikai.css';\n\nimport MessageInfo from \"./message-info\";\nimport ChatHistoryInput from \"./chat-history-input\";\nimport ChatHistoryStatistics from \"./chat-history-statistics\";\nimport UserPreview from \"./user-preview\";\nimport generateIdenticon from \"../../utils/identicon.js\";\nimport { findUserByAddress } from \"../../utils/users-utils.js\";\nimport { payloadToDom } from \"../../payload-protocol/parsers\";\n\nimport discussionClient from \"../../services/discussionServices\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\nimport {\n  concatUserNames,\n  concatUserAddresses,\n  routesToAddresses,\n  populateChatHistoryMetadata,\n} from \"../../utils/discussion-utils\";\nimport theme from \"../../style/theme\";\nimport \"./chat-history.css\";\n\nconst { GetDiscussionHistoryResponse } = require(\"../../rpc/rpc_pb\");\nconst cryptoUtils = require(\"../../utils/crypto-utils\");\n\n/**\n * This component represents the chat history page.\n * This page contains all functionalities responsible for chatting.\n * @param {*} props The global variables.\n */\nconst ChatHistory = (props) => {\n  const messagesPerBlock = 15;\n  const [oldListHeight, setOldListHeight] = useState(0);\n  const [lastMessageSeen, setLastMessageSeen] = useState(0);\n  const [noMoreHistory, setNoMoreHistory] = useState(false);\n\n  const [anonymousActive, setAnonymousActive] = useState(false);\n\n  const [feeModalVisible, setFeeModalVisible] = useState(false);\n  const [statisticsModalVisible, setStatisticsModalVisible] = useState(false);\n  const [messageInfoModalVisible, setMessageInfoModalVisible] = useState(false);\n  const [rawMessageInfoModalVisible, setRawMessageInfoModalVisible] = useState(false);\n  const [userPreviewVisible, setUserPreviewVisible] = useState(false);\n  const [userPreviewUser, setUserPreviewUser] = useState();\n\n  const [selectedMessage, setSelectedMessage] = useState();\n\n  const [pageLoaded, setPageLoaded] = useState(false);\n\n  const [anonymousBucket, setAnonymousBucket] = useState(false);\n\n  const chatHistoryHeaderProps = {\n    anonymousBucket,\n    setAnonymousBucket,\n  };\n\n  const chatHistoryIcon = (\n    <>\n      {props.selectedDiscussion.participantsList.length > 1\n        ? generateIdenticon(\n          concatUserAddresses(props, [\n            props.selfInfo.address,\n            ...props.selectedDiscussion.participantsList,\n          ]),\n          50\n        )\n        : generateIdenticon(\n          concatUserAddresses(props, [\n            props.selectedDiscussion.participantsList,\n          ]),\n          50\n        )}\n    </>\n  );\n\n  const chatHistoryUsrName = (\n    <>\n      {anonymousBucket\n        ? \"Anonymous Messages\"\n        : concatUserNames(props, props.selectedDiscussion.participantsList)}\n    </>\n  );\n\n  /**\n   * Updates the last seen message of the currently selected discussion to the last message of the current chat history.\n   * @param {*} history The current chat history. Used to retrieve the last message's id.\n   */\n  const updateLastMessageSeen = (history) => {\n    discussionClient().updateDiscussionLastRead(\n      {\n        discussionId: props.selectedDiscussion.id,\n        lastReadMsgId: history[history.length - 1].id,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n        }\n        if (res) {\n          if (!document.hidden) {\n            setLastMessageSeen(history[history.length - 1].id);\n            props.selectedDiscussion.lastReadMsgId =\n              history[history.length - 1].id;\n          } else {\n          }\n        }\n      }\n    );\n  };\n\n  /**\n   * Calculates alignment for message text based on the current loaded chatLayout setting.\n   * @param {*} item The chat history message object.\n   * @returns The align direction.\n   */\n  const calculateTextAlign = (item) => {\n    switch (props.chatLayout) {\n    case \"normal\":\n      return findSenderName(item) === props.selfInfo.alias ? \"right\" : \"left\";\n    case \"left\":\n      return \"left\";\n    case \"right\":\n      return \"right\";\n    }\n  };\n\n  /**\n   * Calculates the chat bubble direction based on the current loaded chatLayout setting.\n   * @param {*} item The chat history message object.\n   * @returns The flex-row direction.\n   */\n  const calculateFlexRowDirection = (item) => {\n    switch (props.chatLayout) {\n    case \"normal\":\n      return findSenderName(item) === props.selfInfo.alias\n        ? \"row-reverse\"\n        : \"row\";\n    case \"left\":\n      return \"row\";\n    case \"right\":\n      return \"row-reverse\";\n    }\n    return findSenderName(item) === props.selfInfo.alias\n      ? \"row-reverse\"\n      : \"row\";\n  };\n\n  /**\n   * Calculates the message header's color to indicate unread status.\n   * @param {*} item The chat history message object.\n   * @returns The color of the header.\n   */\n  const calculateChatHistoryMessageColor = (item) => {\n    if (pageLoaded === false) {\n      return item.id > props.selectedDiscussion.lastReadMsgId &&\n        item.sender !== props.selfInfo.address\n        ? \"cyan\"\n        : \"inherit\";\n    } else {\n      return item.id > lastMessageSeen && item.sender !== props.selfInfo.address\n        ? \"cyan\"\n        : \"inherit\";\n    }\n  };\n\n  /**\n   * Calculates the display status for the message failure indicator.\n   * @param {*} item The chat history message object.\n   * @returns The display status of the indicator.\n   */\n  const calculatePartialFailureIndicatorDisplay = (item) => {\n    return item.sender === props.selfInfo.address\n      ? routesToAddresses(item.paymentRoutesList).length ===\n        props.selectedDiscussion.participantsList.length\n        ? \"none\"\n        : \"inline\"\n      : \"none\";\n  };\n\n  const atBottom = () => {\n    let elem = document.getElementById(\"chatHistoryListId\");\n    if (elem?.scrollHeight - elem?.scrollTop > elem?.clientHeight + 120) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * This function is called anytime the selected discussion changes.\n   */\n  useEffect(async () => {\n    if (props.selectedDiscussion) {\n      props.setChatHistory([]);\n      loadHistory(true, props.selectedDiscussion.id);\n      let elem = document.getElementById(\"chatHistoryListId\");\n      setAnonymousActive(false);\n      setPageLoaded(false);\n      setNoMoreHistory(false);\n      if (props.selectedDiscussion.participantsList[0] === \"\") {\n        props.setAnonymousBucket(true);\n      } else {\n        props.setAnonymousBucket(false);\n      }\n    }\n  }, [props.selectedDiscussion]);\n\n  /**\n   * This function is called anytime the current chat history changes.\n   */\n  useEffect(() => {\n    if (props.chatHistory.length !== 0) {\n      if (pageLoaded) {\n        if (atBottom()) {\n          updateChatScroll();\n          updateLastMessageSeen(props.chatHistory);\n        }\n      } else {\n        setPageLoaded(true);\n        updateLastMessageSeen(props.chatHistory);\n        setChatScroll();\n        setTimeout(function () {\n          setChatScroll();\n        }, 750);\n      }\n    }\n  }, [props.chatHistory]);\n\n  /**\n   * This function fetches the history of the currently selected discussion.\n   * It stores the response in the chatHistory variable.\n   */\n  async function loadHistory(fresh, discussionId) {\n    let reverse = true;\n    /**\n     * If lastId == 0 then discussion is either empty, or contains only\n     * one message with id == 0. In case the discussion has only one\n     * message with id == 0, we need to declare reverse = true in order\n     * for backend to normally return the response\n     */\n    if (props.selectedDiscussion.lastMsgId == 0) {\n      reverse = false;\n    }\n    let async_selectedDiscusion;\n    await props.setSelectedDiscussion((oldValue) => {\n      async_selectedDiscusion = oldValue;\n      return oldValue;\n    });\n    let chatHistory = [];\n    let previousId = !fresh ? props.chatHistory[0].id - 1 : 0;\n    if (previousId < 0) {\n      previousId = 0;\n    }\n    return await discussionClient()\n      .getDiscussionHistoryById({\n        id: props.selectedDiscussion.id,\n        pageOptions: {\n          reverse: reverse,\n          lastId: fresh ? props.selectedDiscussion.lastMsgId : previousId,\n          pageSize: fresh ? 50 : messagesPerBlock,\n        },\n      })\n      .on(\"data\", (res) => {\n        chatHistory.push(\n          GetDiscussionHistoryResponse.toObject(true, res).message\n        );\n      })\n      .on(\"end\", () => {\n        if (async_selectedDiscusion.id === discussionId) {\n          if (chatHistory.length === 0) {\n            setNoMoreHistory(true);\n          }\n          props.setChatHistory((oldHistory) => {\n            let res = [...oldHistory];\n            res.unshift(...chatHistory);\n            populateChatHistoryMetadata(res);\n            return res;\n          });\n        }\n      })\n      .on(\"error\", (e) => {\n        if (e.code == 13) {\n          setNoMoreHistory(true);\n        }\n        console.log(\"err\", e);\n      })\n      .on(\"status\", () => {});\n  }\n\n  /**\n   * This function scrolls to the bottom of the chat history with respect to animations.\n   */\n  const updateChatScroll = () => {\n    let element = document.getElementById(\"chatHistoryListId\");\n    if (element && !document.hidden) {\n      element.scroll({\n        top: element.scrollHeight,\n        behavior: props.smoothAnimations ? \"smooth\" : \"auto\",\n      });\n    }\n  };\n\n  /**\n   * This function scrolls to the bottom of the chat history without animations.\n   */\n  const setChatScroll = () => {\n    let element = document.getElementById(\"chatHistoryListId\");\n    if (element) {\n      element.scroll({\n        top: element.scrollHeight,\n        behavior: \"auto\",\n      });\n    }\n  };\n\n  /**\n   * This function returns a message object's sender's name.\n   * @param {*} item The message object.\n   */\n  const findSenderName = (item) => {\n    let lookup;\n    if (props.contacts) {\n      lookup = props.contacts.find((elem) => {\n        return elem.user.address === item.sender;\n      });\n    }\n    if (lookup) {\n      return lookup.displayName;\n    } else if (item.sender === props.selfInfo.address) {\n      return props.selfInfo.alias;\n    } else {\n      let userLookup = findUserByAddress(props, item.sender);\n      return userLookup ? userLookup.alias : \"Unknown\";\n    }\n  };\n\n  /**\n   * The JSX element for the payment info modal footer.\n   * @returns The JSX of the footer.\n   */\n  const totalFeesFooter = () => {\n    return (\n      <div>\n        {selectedMessage?.sender == props.selfInfo.address\n          ? \"Total Fees Paid:\"\n          : \"\"}\n        <b>\n          {`${cryptoUtils.msatToCurrentCryptoUnit(\n            props,\n            selectedMessage ? selectedMessage.totalFeesMsat : 0\n          )}`}\n        </b>\n        {`${props.selectedCryptoUnit}`}\n        <b>\n          {`  /  ${cryptoUtils.msatAmtToFiat(\n            props,\n            selectedMessage ? selectedMessage.totalFeesMsat : 0\n          )}`}\n        </b>\n        {` ${props.selectedFiatUnit}`}\n      </div>\n    );\n  };\n\n  /**\n   * Month index to month string.\n   */\n  const monthToStr = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sept\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  /**\n   * Returns a string representing a unix timestamp date representation\n   * @param {*} unix The unix timestamp\n   * @return {string} The date string\n   */\n  const unixToDate = (unix) => {\n    const date = new Date(unix * 1000);\n    const now = new Date();\n    let format;\n    const hours = date.getHours();\n    const minutes = \"0\" + date.getMinutes();\n    if (\n      now.getMonth() === date.getMonth() &&\n      now.getDate() === date.getDate()\n    ) {\n      format = hours + \":\" + minutes.substr(-2);\n    } else {\n      format = monthToStr[date.getMonth()] + \"-\" + date.getDate();\n      if (now.getUTCFullYear() !== date.getUTCFullYear()) {\n        format += \"-\" + date.getFullYear();\n      }\n      format += \" \" + hours + \":\" + minutes.substr(-2);\n    }\n\n    return format;\n  };\n\n  /**\n   * The chat history JSX\n   */\n  return (\n    <>\n      <div className=\"chat-history\">\n        <div\n          className=\"chat-hIstory-header\"\n          style={{\n            backgroundColor: theme.menuDarkLite,\n          }}\n        >\n          <DoubleRightOutlined\n            className=\"chatHistoryArrow\"\n            style={{\n              display: props.sideSquashed\n                ? props.sideActivated\n                  ? \"none\"\n                  : \"inherit\"\n                : \"none\",\n            }}\n            onClick={() => {\n              props.setSideActivated(true);\n            }}\n          />\n          <div className=\"chat-history-header-UserIcon\">{chatHistoryIcon}</div>\n          <div className=\"chat-history-header-UserName\">\n            {\" \"}\n            {chatHistoryUsrName}\n          </div>\n          <Dropdown\n            className=\"chat-history-dropdοwn\"\n            trigger=\"click\"\n            overlay={\n              <Menu>\n                <Menu.Item\n                  onClick={() => {\n                    setStatisticsModalVisible(true);\n                  }}\n                >\n                  Discussion Statistics\n                </Menu.Item>\n              </Menu>\n            }\n          >\n            <Button className=\"chat-history-btn\">\n              <EllipsisOutlined />\n            </Button>\n          </Dropdown>\n        </div>\n        <div className=\"chat-history-content\">\n          <Layout className=\"chat-history-layout\">\n            <Layout.Content\n              className=\"contentBody\"\n              onMouseDown={(e) => {\n                if (window.innerWidth > window.innerHeight) {\n                  e.preventDefault();\n                  document.getElementById(\"messageInputArea\")?.focus();\n                }\n              }}\n            >\n              <div\n                className=\"chatHistoryList\"\n                id=\"chatHistoryListId\"\n                style={{\n                  backgroundColor:\n                    anonymousActive || props.anonymousBucket\n                      ? \"rgb(35, 35, 35)\"\n                      : \"rgb(45, 45, 65)\",\n                }}\n              >\n                <div\n                  className=\"chat-history-arrowMore\"\n                  style={{\n                    left: props.sideSquashed ? \"calc(50%)\" : \"calc(50% + 50px)\",\n                    bottom: atBottom() ? \"-1000px\" : \"50px\",\n                    opacity: atBottom() ? \"0\" : \"100\",\n                  }}\n                >\n                  <DownCircleOutlined\n                    style={{\n                      color: props.chatHistory.length\n                        ? props.chatHistory[props.chatHistory.length - 1].id ===\n                          lastMessageSeen\n                          ? \"white\"\n                          : \"cyan\"\n                        : \"white\",\n                    }}\n                    onClick={() => {\n                      updateChatScroll();\n                      if (props.chatHistory.length !== 0) {\n                        updateLastMessageSeen(props.chatHistory);\n                      }\n                    }}\n                  />\n                </div>\n                <div>\n                  <Button\n                    className=\"chat-history-DownCircleOutlined-button\"\n                    style={{\n                      display:\n                        props.chatHistory.length >= 10 && !noMoreHistory\n                          ? \"inherit\"\n                          : \"none\",\n                    }}\n                    onClick={() => {\n                      let elem = document.getElementById(\"chatHistoryListId\");\n                      setOldListHeight(elem.scrollHeight);\n                      loadHistory(false, props.selectedDiscussion.id);\n                    }}\n                  >\n                    Load More Messages\n                  </Button>\n                  <List\n                    dataSource={props.chatHistory}\n                    locale={{\n                      emptyText: (\n                        <div>\n                          <LoadingOutlined\n                            className=\"chat-history-loadingOutlined\"\n                            style={{\n                              display: pageLoaded ? \"none\" : \"inherit\",\n                            }}\n                            spin\n                          />\n                          <h2\n                            style={{\n                              display: pageLoaded ? \"inherit\" : \"none\",\n                            }}\n                          >\n                            {props.anonymousBucket\n                              ? \"No anonymous messages received\"\n                              : \"Send your first message!\"}\n                          </h2>\n                        </div>\n                      ),\n                    }}\n                    renderItem={(item) => {\n                      return (\n                        <List.Item className=\"chat-history-listItem\">\n                          <div\n                            className=\"chatHistoryFlexWrapper\"\n                            style={{\n                              flexDirection: calculateFlexRowDirection(item),\n                              textAlign: calculateTextAlign(item),\n                            }}\n                          >\n                            <div\n                              className=\"chatHistoryFlexWrapperAfter\"\n                              style={{\n                                display: props.chatIdenticons\n                                  ? \"inherit\"\n                                  : \"none\",\n                                opacity: item[\"merge\"] ? \"0\" : \"1\",\n                              }}\n                              onClick={() => {\n                                setUserPreviewUser(\n                                  findUserByAddress(props, item.sender)\n                                );\n                                setUserPreviewVisible(true);\n                              }}\n                            >\n                              {generateIdenticon(item.sender, 25)}\n                            </div>\n                            <div\n                              className=\"chatHistoryMessageWrapper\"\n                              style={{\n                                marginTop: item[\"merge\"] ? \"0px\" : \"5px\",\n                              }}\n                            >\n                              <div\n                                style={{\n                                  display:\n                                    item[\"merge\"] === true &&\n                                    item.payload &&\n                                    item.amtMsat < 15000\n                                      ? \"none\"\n                                      : \"flex\",\n                                  flexDirection:\n                                    calculateFlexRowDirection(item),\n                                  fontSize: \"13px\",\n                                }}\n                              >\n                                <div className=\"chatHistoryMessageWrapperDiv\">\n                                  <b\n                                    className=\"chat-history-interlocutorsName\"\n                                    style={{\n                                      color:\n                                        calculateChatHistoryMessageColor(item),\n                                    }}\n                                    onClick={() => {\n                                      setUserPreviewUser(\n                                        findUserByAddress(props, item.sender)\n                                      );\n                                      setUserPreviewVisible(true);\n                                    }}\n                                  >\n                                    {findSenderName(item) !==\n                                    props.selfInfo.alias\n                                      ? findSenderName(item)\n                                      : \"You\"}\n                                  </b>\n                                </div>\n                                <Divider type=\"vertical\" />\n                                <div className=\"chatHistoryMessageWrapperDivider\">\n                                  {unixToDate(item.sentTimestamp.seconds)}\n                                </div>\n                                <Divider type=\"vertical\" />\n                                <span className=\"chatHistoryCost\">\n                                  <span\n                                    className=\"chat-history-spanAfterDivider\"\n                                    style={{\n                                      color:\n                                        findSenderName(item) !==\n                                        props.selfInfo.alias\n                                          ? \"green\"\n                                          : \"red\",\n                                      paddingLeft: item.payload ? \"0px\" : \"5px\",\n                                    }}\n                                    onClick={() => {\n                                      setSelectedMessage(item);\n                                      setFeeModalVisible(true);\n                                    }}\n                                  >\n                                    {`${cryptoUtils.msatToCurrentCryptoUnit(\n                                      props,\n                                      parseInt(item.amtMsat) +\n                                        parseInt(item.totalFeesMsat)\n                                    )}`}\n                                  </span>\n                                  <span>{props.selectedCryptoUnit}</span>\n                                  <span\n                                    className=\"chat-history-padding\"\n                                    style={{\n                                      display: item.payload\n                                        ? \"none\"\n                                        : \"inherit\",\n                                    }}\n                                  >\n                                    {findSenderName(item) !==\n                                    props.selfInfo.alias\n                                      ? \"from\"\n                                      : \"to\"}\n                                    <span className=\"chat-history-padding\">\n                                      {props.selectedDiscussion.participantsList\n                                        .length > 1\n                                        ? findSenderName(item) !==\n                                          props.selfInfo.alias\n                                          ? findSenderName(item)\n                                          : \"everyone\"\n                                        : concatUserNames(props, [\n                                          props.selectedDiscussion\n                                            .participantsList[0],\n                                        ])}\n                                    </span>\n                                  </span>\n                                </span>\n                                <Divider type=\"vertical\" />\n                                <span\n                                  style={{\n                                    color: item.senderVerified\n                                      ? \"green\"\n                                      : \"red\",\n                                  }}\n                                >\n                                  <Tooltip\n                                    title={\n                                      item.senderVerified\n                                        ? \"Verified Message\"\n                                        : \"Unverified Message\"\n                                    }\n                                  >\n                                    {item.senderVerified ? (\n                                      item.sender === props.selfInfo.address ? (\n                                        <CheckOutlined />\n                                      ) : (\n                                        <SafetyOutlined />\n                                      )\n                                    ) : (\n                                      <CloseCircleOutlined />\n                                    )}\n                                  </Tooltip>\n                                </span>\n                                <span\n                                  className=\"chat-history-setSelectedMessage\"\n                                  style={{\n                                    display:\n                                      calculatePartialFailureIndicatorDisplay(\n                                        item\n                                      ),\n                                  }}\n                                  onClick={() => {\n                                    setSelectedMessage(item);\n                                    setFeeModalVisible(true);\n                                  }}\n                                >\n                                  <Tooltip title=\"Some users did not receive the message / payment\">\n                                    <ExclamationCircleOutlined />\n                                  </Tooltip>\n                                </span>\n                              </div>\n                              <div\n                                className=\"chatHistoryMessage\"\n                                style={{\n                                  backgroundColor:\n                                    findSenderName(item) ===\n                                    props.selfInfo.alias\n                                      ? props.myMessageColor\n                                      : props.otherMessageColor,\n                                  display: item.payload\n                                    ? \"inline-block\"\n                                    : \"none\",\n                                  maxWidth:\n                                    props.chatLayout === \"normal\"\n                                      ? \"60%\"\n                                      : \"80%\",\n                                }}\n                              >\n                                {payloadToDom(\n                                  props,\n                                  item.payload,\n                                  item.sender === props.selfInfo.address,\n                                  item.amtMsat\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </List.Item>\n                      );\n                    }}\n                  />\n                </div>\n              </div>\n            </Layout.Content>\n            <footer\n              className=\"chat-history-footer\"\n              style={{\n                backgroundColor: theme.menuDarkLite,\n                display:\n                  props.selectedPage === \"chatHistory\" && !props.anonymousBucket\n                    ? \"block\"\n                    : \"none\",\n              }}\n            >\n              <ChatHistoryInput\n                {...props}\n                updateLastMessageSeen={updateLastMessageSeen}\n                updateChatScroll={updateChatScroll}\n                anonymousActive={anonymousActive}\n                setAnonymousActive={setAnonymousActive}\n              />\n            </footer>\n          </Layout>\n\n          <Modal\n            visible={!!feeModalVisible}\n            title={\n              selectedMessage?.sender == props.selfInfo.address ? (\n                <div className=\"chat-history-feeModal\">\n                  <p className=\"chat-history-feeModal-text\">\n                    Received by{\" \"}\n                    {concatUserNames(\n                      props,\n                      routesToAddresses(selectedMessage?.paymentRoutesList)\n                    )}\n                  </p>\n                  <Button\n                    className=\"chat-history-feeModal-button\"\n                    type=\"default\"\n                    onClick={() => {\n                      setRawMessageInfoModalVisible(true);\n                    }}\n                  >\n                    Raw Message\n                  </Button>\n                </div>\n              ) : (\n                <div className=\"chat-history-feeModal\">\n                  <p className=\"chat-history-feeModal-text\">Received by you</p>\n                  <Button\n                    className=\"chat-history-feeModal-button\"\n                    type=\"secondary\"\n                    onClick={() => {\n                      setRawMessageInfoModalVisible(true);\n                    }}\n                  >\n                    Raw Message\n                  </Button>\n                </div>\n              )\n            }\n            footer={[\n              <span key=\"\" className=\"chat-history-footer-span\">\n                {`Total Amount ${\n                  selectedMessage\n                    ? selectedMessage.sender === props.selfInfo.address\n                      ? \"Sent: \"\n                      : \"Received: \"\n                    : \"\"\n                }`}\n                <b>\n                  {`${cryptoUtils.msatToCurrentCryptoUnit(\n                    props,\n                    selectedMessage ? selectedMessage.amtMsat : 0\n                  )}`}\n                </b>\n                {`${props.selectedCryptoUnit}`}\n                <b>\n                  {`  /  ${cryptoUtils.msatAmtToFiat(\n                    props,\n                    selectedMessage ? selectedMessage.amtMsat : 0\n                  )}`}\n                </b>\n                {` ${props.selectedFiatUnit}`}\n                <br />\n                {selectedMessage?.sender === props.selfInfo.address\n                  ? totalFeesFooter()\n                  : \"\"}\n              </span>,\n              <Button\n                key=\"ok\"\n                onClick={() => {\n                  setFeeModalVisible(false);\n                }}\n              >\n                OK\n              </Button>,\n            ]}\n            onOk={() => {\n              setFeeModalVisible(false);\n            }}\n            onCancel={() => {\n              setFeeModalVisible(false);\n            }}\n            cancelButtonProps={{ style: { display: \"none\" } }}\n          >\n            {selectedMessage?.sender === props.selfInfo.address ? (\n              <MessageInfo {...props} selectedMessage={selectedMessage} />\n            ) : (\n              \"You can not retrieve payment information for received messages\"\n            )}\n          </Modal>\n          <Modal\n            title={\"Message information\"}\n            visible={rawMessageInfoModalVisible}\n            onOk={() => {\n              setRawMessageInfoModalVisible(false);\n            }}\n            onCancel={() => {\n              setRawMessageInfoModalVisible(false);\n            }}\n          >\n            Raw data of the arc message\n            <JSONPretty id=\"json-pretty\" data={selectedMessage ? JSON.parse(selectedMessage.payload) : {}}></JSONPretty>\n          </Modal>\n          <UserPreview\n            {...props}\n            visible={userPreviewVisible}\n            setVisible={setUserPreviewVisible}\n            user={userPreviewUser}\n          />\n          <Modal\n            title={\"Discussion Statistics\"}\n            visible={statisticsModalVisible}\n            onOk={() => {\n              setStatisticsModalVisible(false);\n            }}\n            onCancel={() => {\n              setStatisticsModalVisible(false);\n            }}\n            cancelButtonProps={{ style: { display: \"none\" } }}\n          >\n            <ChatHistoryStatistics {...props} />\n          </Modal>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ChatHistory;\n","const loadAutomaticImageLoadingSetting = (setAutomaticImageLoading) => {\n  let res = window.localStorage.getItem('automaticImageLoadingSetting');\n  setAutomaticImageLoading(res !== 'false');\n};\n\nconst saveAutomaticImageLoadingSetting = (setAutomaticImageLoading, value) => {\n  window.localStorage.setItem('automaticImageLoadingSetting', value);\n  setAutomaticImageLoading(value);\n};\n\nconst loadSmoothAnimationsSetting = (setSmoothAnimations) => {\n  let res = window.localStorage.getItem('smoothAnimationsSetting');\n  setSmoothAnimations(res !== 'false');\n};\n\nconst saveSmoothAnimationsSetting = (setSmoothAnimations, value) => {\n  window.localStorage.setItem('smoothAnimationsSetting', value);\n  setSmoothAnimations(value);\n};\n\nconst loadSelectedCryptoUnit = (setSelectedCryptoUnit) => {\n  let res = window.localStorage.getItem('selectedCryptoUnitSetting');\n  if (res === 'sat' || res === 'msat' || res === 'mBTC') {\n    setSelectedCryptoUnit(res);\n  } else {\n    setSelectedCryptoUnit('sat');\n  }\n};\n\nconst saveSelectedCryptoUnit = (setSelectedCryptoUnit, value) => {\n  window.localStorage.setItem('selectedCryptoUnitSetting', value);\n  setSelectedCryptoUnit(value);\n};\n\nconst loadSelectedFiatUnit = (setSelectedFiatUnit) => {\n  let res = window.localStorage.getItem('selectedFiatUnitSetting');\n  if (res === 'EUR' || res === 'USD') {\n    setSelectedFiatUnit(res);\n  } else {\n    setSelectedFiatUnit('EUR');\n  }\n};\n\nconst saveSelectedFiatUnit = (setSelectedFiatUnit, value) => {\n  window.localStorage.setItem('selectedFiatUnitSetting', value);\n  setSelectedFiatUnit(value);\n};\n\nconst loadChatIdenticonsSetting = (setChatIdenticons) => {\n  let res = window.localStorage.getItem('chatIdenticonsSetting');\n  setChatIdenticons(res !== 'false');\n};\n\nconst saveChatIdenticonsSetting = (setChatIdenticons, value) => {\n  window.localStorage.setItem('chatIdenticonsSetting', value);\n  setChatIdenticons(value);\n};\n\nconst loadChatLayoutSetting = (setChatLayout) => {\n  let res = window.localStorage.getItem('chatLayoutSetting');\n  if (res === 'normal' || res === 'left' || res === 'right') {\n    setChatLayout(res);\n  } else {\n    setChatLayout('normal');\n  }\n};\n\nconst saveChatLayoutSetting = (setChatLayout, value) => {\n  window.localStorage.setItem('chatLayoutSetting', value);\n  setChatLayout(value);\n};\n\nconst loadMyMessageColor = (setMyMessageColor) => {\n  let res = window.localStorage.getItem('myMessageColorSetting');\n  if(res !== 'undefined' && res !== undefined && res !== null) {\n    setMyMessageColor(res);\n  } else {\n    setMyMessageColor('darkslategrey');\n  }\n};\n\nconst saveMyMessageColor = (setMyMessageColor, value) => {\n  window.localStorage.setItem('myMessageColorSetting', value);\n  setMyMessageColor(value);\n};\n\nconst loadOtherMessageColor = (setOtherMessageColor) => {\n  let res = window.localStorage.getItem('otherMessageColorSetting');\n  if(res !== 'undefined' && res !== undefined && res !== null) {\n    setOtherMessageColor(res);\n  } else {\n    setOtherMessageColor('sienna');\n  }\n};\n\nconst saveOtherMessageColor = (setOtherMessageColor, value) => {\n  window.localStorage.setItem('otherMessageColorSetting', value);\n  setOtherMessageColor(value);\n};\n\nconst loadDeveloperLogsSetting = (setDeveloperLogs) => {\n  let res = window.localStorage.getItem('developerLogsSetting');\n  setDeveloperLogs(res === 'true');\n  if(res !== 'true') {\n    console.log('Production mode');\n    console.log = function() {};\n  }\n};\n\nconst saveDeveloperLogsSetting = (setDeveloperLogs, value) => {\n  window.localStorage.setItem('developerLogsSetting', value);\n  setDeveloperLogs(value);\n};\n\n\nexport {\n  loadAutomaticImageLoadingSetting,\n  loadSmoothAnimationsSetting,\n  loadSelectedCryptoUnit,\n  loadSelectedFiatUnit,\n  loadChatIdenticonsSetting,\n  loadChatLayoutSetting,\n  loadMyMessageColor,\n  loadOtherMessageColor,\n  loadDeveloperLogsSetting,\n  saveAutomaticImageLoadingSetting,\n  saveSmoothAnimationsSetting,\n  saveSelectedCryptoUnit,\n  saveSelectedFiatUnit,\n  saveChatIdenticonsSetting,\n  saveChatLayoutSetting,\n  saveMyMessageColor,\n  saveOtherMessageColor,\n  saveDeveloperLogsSetting\n};","import React, { useState } from \"react\";\nimport { Button, Form, Divider, Switch, Select, Collapse } from \"antd\";\nimport { GithubPicker } from \"react-color\";\nimport \"./user-settings.css\";\nimport theme from \"../../style/theme\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\nimport {\n  saveAutomaticImageLoadingSetting,\n  saveSmoothAnimationsSetting,\n  saveSelectedCryptoUnit,\n  saveSelectedFiatUnit,\n  saveChatIdenticonsSetting,\n  saveChatLayoutSetting,\n  saveMyMessageColor,\n  saveOtherMessageColor,\n  saveDeveloperLogsSetting,\n} from \"../../utils/settings\";\n\nconst messageColorsArray = [\n  \"black\",\n  \"darkslategray\",\n  \"brown\",\n  \"darkblue\",\n  \"darkgreen\",\n  \"darkslateblue\",\n  \"darkslategrey\",\n  \"indigo\",\n  \"olivedrab\",\n  \"sienna\",\n  \"saddlebrown\",\n  \"teal\",\n  \"steelblue\",\n  \"seagreen\",\n  \"#232425\",\n  \"#245559\",\n  \"#552424\"\n];\n\n/**\n * This component represents the user settings page, containing user and connection information.\n * @param {*} props The global variables.\n */\nconst UserSettings = (props) => {\n  // Current account related variables\n  const [url] = useState(window.localStorage.getItem(\"url\"));\n  /**\n   * The user settings page JSX.\n   */\n  return (\n    <>\n      <div className=\"user-settings\">\n        <div\n          className=\"user-settings-header\"\n          style={{\n            backgroundColor: theme.menuDarkLite,\n          }}\n        >\n          <DoubleRightOutlined\n            className=\"chatHistoryExpandForMobile\"\n            style={{\n              display: props.sideSquashed\n                ? props.sideActivated\n                  ? \"none\"\n                  : \"inherit\"\n                : \"none\",\n            }}\n            onClick={() => {\n              props.setSideActivated(true);\n            }}\n          />\n          <div className=\"user-settings-header-text\">Settings</div>\n        </div>\n        <div className=\"user-settings-main\">\n          <Form className=\"user-settings-form\">\n            <Collapse>\n              <Collapse.Panel header=\"View Settings\">\n                <Form.Item>\n                  <Switch\n                    checked={!!props.automaticImageLoading}\n                    className=\"user-settings-collapse\"\n                    onChange={(value) => {\n                      saveAutomaticImageLoadingSetting(props.setAutomaticImageLoading, value);\n                    }}\n                  />\n                  Allow automatic loading of externally linked images\n                </Form.Item>\n                <Form.Item>\n                  <Switch\n                    checked={!!props.smoothAnimations}\n                    className=\"user-settings-collapse\"\n                    onChange={(value) => {\n                      saveSmoothAnimationsSetting(props.setSmoothAnimations, value);\n                    }}\n                  />\n                  Enable smooth animations and transitions\n                </Form.Item>\n                <Form.Item>\n                  <Switch\n                    checked={!!props.chatIdenticons}\n                    className=\"user-settings-collapse\"\n                    onChange={(value) => {\n                      saveChatIdenticonsSetting(props.setChatIdenticons, value);\n                    }}\n                  />\n                  Show user icons in chat messages\n                </Form.Item>\n                <Form.Item>\n                  <Select\n                    defaultValue={`${props.chatLayout}`}\n                    className=\"user-settings-formSelect\"\n                    onChange={(e) => {\n                      saveChatLayoutSetting(props.setChatLayout, e);\n                    }}\n                  >\n                    <Select.Option value=\"normal\">Normal</Select.Option>\n                    <Select.Option value=\"left\">Left Side</Select.Option>\n                    <Select.Option value=\"right\">Right Side</Select.Option>\n                  </Select>\n                  Messages Layout\n                </Form.Item>\n\n                My Messages Color:\n                <Form.Item>\n                  <GithubPicker\n                    triangle=\"hide\"\n                    colors={messageColorsArray}\n                    color={props.myMessageColor}\n                    onChangeComplete={(color) => {\n                      saveMyMessageColor(props.setMyMessageColor, color.hex);\n                    }}\n                  />\n                  <Button\n                    onClick={() => {\n                      saveMyMessageColor(props.setMyMessageColor, \"rgba(0, 0, 0, 0.0)\");\n                    }}\n                  >\n                    Transparent\n                  </Button>\n                </Form.Item>\n                Other Messages Color:\n                <Form.Item>\n                  <GithubPicker\n                    className=\"user-settings-github\"\n                    triangle=\"hide\"\n                    colors={messageColorsArray}\n                    color={props.myMessageColor}\n                    onChangeComplete={(color) => {\n                      saveOtherMessageColor(props.setOtherMessageColor, color.hex);\n                    }}\n                  />\n                  <Button\n                    onClick={() => {\n                      saveOtherMessageColor(props.setOtherMessageColor, \"rgba(0, 0, 0, 0.0)\");\n                    }}\n                  >\n                    Transparent\n                  </Button>\n                </Form.Item>\n                <Form.Item>\n                  <Switch\n                    checked={!!props.developerLogs}\n                    className=\"user-settings-collapse\"\n                    onChange={(value) => {\n                      saveDeveloperLogsSetting(props.setDeveloperLogs, value);\n                    }}\n                  />\n                  Developer Logs (Page refresh required)\n                </Form.Item>\n              </Collapse.Panel>\n              <Collapse.Panel header=\"Crypto Settings\">\n                <Form.Item>\n                  <Select\n                    defaultValue={`${props.selectedCryptoUnit}`}\n                    className=\"user-settings-formSelect\"\n                    onChange={(e) => {\n                      saveSelectedCryptoUnit(props.setSelectedCryptoUnit, e);\n                    }}\n                  >\n                    <Select.Option value=\"mBTC\">mBTC</Select.Option>\n                    <Select.Option value=\"sat\">sat</Select.Option>\n                    <Select.Option value=\"msat\">msat</Select.Option>\n                  </Select>\n                  Select crypto unit to display\n                </Form.Item>\n                <Form.Item>\n                  <Select\n                    defaultValue={`${props.selectedFiatUnit}`}\n                    className=\"user-settings-formSelect\"\n                    onChange={(e) => {\n                      setSelectedFiatUnit(props.setSelectedFiatUnit, e);\n                    }}\n                  >\n                    <Select.Option value=\"EUR\">EUR</Select.Option>\n                    <Select.Option value=\"USD\">USD</Select.Option>\n                  </Select>\n                  Select fiat unit to display\n                </Form.Item>\n              </Collapse.Panel>\n              <Collapse.Panel header=\"Account Info\">\n                <b>\n                  <Divider orientation=\"left\">\n                    <h2>Self Info</h2>\n                  </Divider>\n                </b>\n                <Form.Item label=\"Your Alias is:\">\n                  {props.selfInfo ? props.selfInfo.alias : \"Not Found\"}\n                </Form.Item>\n                <Form.Item label=\"Your Address is:\">\n                  {props.selfInfo ? props.selfInfo.address : \"Not Found\"}\n                </Form.Item>\n                <b>\n                  <Divider orientation=\"left\">\n                    <h2>Backend Info</h2>\n                  </Divider>\n                </b>\n                <Form.Item label=\"Address:\">{url}</Form.Item>\n                <Form.Item label=\"Version:\">{props.backendVersion}</Form.Item>\n              </Collapse.Panel>\n            </Collapse>\n          </Form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UserSettings;\n","import apiUrl from \"../config/api-url\";\nimport authCreds from \"../config/auth-creds\";\n\nconst { OpenChannelRequest, OpenChannelResponse } = require(\"../rpc/rpc_pb\");\nconst { ChannelServiceClient } = require(\"../rpc/rpc_grpc_web_pb.js\");\n\nconst rpcClient = new ChannelServiceClient(apiUrl(), {});\n\nconst client = new Object();\n\nclient.openChannel = (req, callback) => {\n  const request = new OpenChannelRequest();\n  request.setAddress(req.address ? req.address : \"\");\n  request.setAmtMsat(req.amtMsat ? req.amtMsat : \"\");\n  request.setPushAmtMsat(req.pushAmtMsat ? req.pushAmtMsat : \"\");\n  request.setMinInputConfs(req.minInputConfs ? req.minInputConfs : \"\");\n  request.setTargetConfirmationBlock(\n    req.targetConfirmationBlock ? req.targetConfirmationBlock : \"\"\n  );\n  return rpcClient.openChannel(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? OpenChannelResponse.toObject(res, res) : undefined)\n  );\n};\n\nconst channelClient = () => {\n  return client;\n};\n\nexport default channelClient;\n","import apiUrl from \"../config/api-url\";\nimport authCreds from \"../config/auth-creds\";\n\nconst {\n  VersionRequest,\n  Version,\n  SelfInfoRequest,\n  SelfInfoResponse,\n  SelfBalanceRequest,\n  SelfBalanceResponse,\n  GetNodesRequest,\n  NodeInfoResponse,\n  SearchNodeByAddressRequest,\n  SearchNodeByAliasRequest,\n  ConnectNodeRequest,\n  ConnectNodeResponse,\n} = require(\"../rpc/rpc_pb\");\nconst { NodeInfoServiceClient } = require(\"../rpc/rpc_grpc_web_pb.js\");\n\nconst rpcClient = new NodeInfoServiceClient(apiUrl(), {});\n\nconst client = new Object();\n\nclient.getVersion = (req, meta, callback) => {\n  const request = new VersionRequest();\n  return rpcClient.getVersion(\n    request,\n    { ...authCreds(), ...meta },\n    (err, res) => callback(err, res ? Version.toObject(true, res) : undefined)\n  );\n};\n\nclient.getSelfInfo = (req, meta, callback) => {\n  const request = new SelfInfoRequest();\n  return rpcClient.getSelfInfo(\n    request,\n    { ...authCreds(), ...meta },\n    (err, res) =>\n      callback(err, res ? SelfInfoResponse.toObject(true, res) : undefined)\n  );\n};\n\nclient.getSelfBalance = (req, callback) => {\n  const request = new SelfBalanceRequest();\n  return rpcClient.getSelfBalance(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? SelfBalanceResponse.toObject(true, res) : undefined)\n  );\n};\n\nclient.getNodes = (req, callback) => {\n  const request = new GetNodesRequest();\n  return rpcClient.getNodes(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? NodeInfoResponse.toObject(true, res) : undefined)\n  );\n};\n\nclient.searchNodeByAddress = (req, callback) => {\n  const request = new SearchNodeByAddressRequest();\n  request.setAddress(req.address);\n  return rpcClient.searchNodeByAddress(\n    request,\n    { ...authCreds() },\n    (err, res) =>\n      callback(err, res ? NodeInfoResponse.toObject(true, res) : undefined)\n  );\n};\n\nclient.searchNodeByAlias = (req, callback) => {\n  const request = new SearchNodeByAliasRequest();\n  request.setAlias(req.alias);\n  return rpcClient.searchNodeByAlias(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? NodeInfoResponse.toObject(true, res) : undefined)\n  );\n};\n\nclient.connectNode = (req, callback) => {\n  const request = new ConnectNodeRequest();\n  request.setAddress(req.address);\n  request.setHostport(req.hostport);\n  return rpcClient.connectNode(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? ConnectNodeResponse.toObject(true, res) : undefined)\n  );\n};\n\nconst nodeInfoClient = () => {\n  return client;\n};\n\nexport default nodeInfoClient;\n","import React, { useState } from \"react\";\n\nimport { Form, Divider, Modal, Input, Tabs } from \"antd\";\n\nimport { splitURI } from \"../../utils/users-utils\";\n\nimport channelClient from \"../../services/channelServices\";\nimport nodeInfoClient from \"../../services/nodeInfoServices\";\n\nimport { NotificationManager } from \"react-notifications\";\n\nimport \"./open-channel.css\";\n\nconst cryptoUtils = require(\"../../utils/crypto-utils\");\n\n/**\n * This component represents the modal for openning channels.\n * @param {*} props The global variables.\n * @returns The JSX of the modal.\n */\nconst OpenChannel = (props) => {\n  // Modal related variables\n  const [mode, setMode] = useState(\"basic\");\n  const [lightningAddress, setLightningAddress] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [pushAmount, setPushAmount] = useState(0);\n  const [minimumInputConfirmations, setMinimumInputConfirmations] = useState(1);\n  const [targetConfirmationBlocks, setTargetConfirmationBlocks] = useState(3);\n\n  /**\n   * Opens a channel to the specific address with current selected options.\n   * @param {*} address\n   */\n  const openChannel = (address) => {\n    const amtMsat = cryptoUtils.currentCryptoAmtToMsat(props, amount);\n    const pushAmtMsat = cryptoUtils.currentCryptoAmtToMsat(props, pushAmount);\n    channelClient().openChannel(\n      {\n        address: address,\n        amtMsat: amtMsat,\n        pushAmtMsat: pushAmtMsat,\n        minInputConfs: minimumInputConfirmations,\n        targetConfirmationBlocks: targetConfirmationBlocks,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n          NotificationManager.error(err.message);\n        }\n        if (res) {\n          console.log(res);\n          setLightningAddress(\"\");\n          setAmount(0);\n          setPushAmount(0);\n          setMinimumInputConfirmations(1);\n          setTargetConfirmationBlocks(3);\n          props.setVisible(false);\n          NotificationManager.success(\"Channel pending to open\");\n        }\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Modal\n        title=\"Open Channel\"\n        visible={props.visible}\n        okText=\"Open\"\n        onCancel={() => {\n          props.setVisible(false);\n        }}\n        onOk={async () => {\n          console.log(mode);\n          console.log(lightningAddress);\n          console.log(amount);\n          console.log(pushAmount);\n          console.log(minimumInputConfirmations);\n          console.log(targetConfirmationBlocks);\n          const split = splitURI(lightningAddress);\n          const address = split.address;\n          const hostport = split.hostport;\n          await nodeInfoClient().connectNode(\n            {\n              address: address,\n              hostport: hostport,\n            },\n            (err, res) => {\n              if (err) {\n                console.log(err);\n                NotificationManager.error(err.message);\n              }\n              if (res) {\n                console.log(res);\n                NotificationManager.success(\"Connected to Peer\");\n                openChannel(address);\n              }\n            }\n          );\n        }}\n      >\n        <Tabs\n          defaultActiveKey=\"1\"\n          onChange={(e) => {\n            switch (e) {\n            case \"1\":\n              setMode(\"basic\");\n              break;\n            case \"2\":\n              setMode(\"advanced\");\n              break;\n            }\n          }}\n        >\n          <Tabs.TabPane key=\"1\" tab=\"Basic\">\n            <Form layout=\"vertical\">\n              <Form.Item>\n                <div className=\"open-channel-item\">\n                  <Divider\n                    orientation=\"left\"\n                    className=\"open-channel-item-text\"\n                  >\n                    Node URI\n                  </Divider>\n                  <Input\n                    value={lightningAddress}\n                    onChange={(e) => {\n                      setLightningAddress(e.target.value);\n                    }}\n                    className=\"open-channel-item-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item>\n                <div className=\"open-channel-item\">\n                  <Divider\n                    orientation=\"left\"\n                    className=\"open-channel-item-text\"\n                  >\n                    Amount ({props.selectedCryptoUnit})\n                  </Divider>\n                  <Input\n                    value={amount.toString()}\n                    onChange={(e) => {\n                      setAmount(parseFloat(e.target.value));\n                    }}\n                    className=\"open-channel-item-input\"\n                  />\n                </div>\n              </Form.Item>\n            </Form>\n          </Tabs.TabPane>\n          <Tabs.TabPane key=\"2\" tab=\"Advanced\">\n            <Form layout=\"vertical\">\n              <Form.Item>\n                <div className=\"open-channel-item\">\n                  <Divider\n                    orientation=\"left\"\n                    className=\"open-channel-item-text\"\n                  >\n                    Node URI\n                  </Divider>\n                  <Input\n                    value={lightningAddress}\n                    onChange={(e) => {\n                      setLightningAddress(e.target.value);\n                    }}\n                    className=\"open-channel-item-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item>\n                <div className=\"open-channel-item\">\n                  <Divider\n                    orientation=\"left\"\n                    className=\"open-channel-item-text\"\n                  >\n                    Amount ({props.selectedCryptoUnit})\n                  </Divider>\n                  <Input\n                    value={amount.toString()}\n                    onChange={(e) => {\n                      setAmount(parseFloat(e.target.value));\n                    }}\n                    className=\"open-channel-item-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item>\n                <div className=\"open-channel-item\">\n                  <Divider\n                    orientation=\"left\"\n                    className=\"open-channel-item-text\"\n                  >\n                    Push Amount\n                  </Divider>\n                  <Input\n                    value={pushAmount.toString()}\n                    onChange={(e) => {\n                      setPushAmount(parseFloat(e.target.value));\n                    }}\n                    className=\"open-channel-item-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item>\n                <div className=\"open-channel-item\">\n                  <Divider\n                    orientation=\"left\"\n                    className=\"open-channel-item-text\"\n                  >\n                    Minimum Input Confirmations\n                  </Divider>\n                  <Input\n                    value={minimumInputConfirmations.toString()}\n                    onChange={(e) => {\n                      setMinimumInputConfirmations(parseFloat(e.target.value));\n                    }}\n                    className=\"open-channel-item-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item>\n                <div className=\"open-channel-item\">\n                  <Divider\n                    orientation=\"left\"\n                    className=\"open-channel-item-text\"\n                  >\n                    Target Confirmation Blocks\n                  </Divider>\n                  <Input\n                    value={targetConfirmationBlocks.toString()}\n                    onChange={(e) => {\n                      setTargetConfirmationBlocks(parseFloat(e.target.value));\n                    }}\n                    className=\"open-channel-item-input\"\n                  />\n                </div>\n              </Form.Item>\n            </Form>\n          </Tabs.TabPane>\n        </Tabs>\n      </Modal>\n    </div>\n  );\n};\n\nexport default OpenChannel;\n","import React, { useState } from \"react\";\n\nimport { Form, Divider, Modal, Input } from \"antd\";\n\nimport { splitURI } from \"../../utils/users-utils\";\nimport nodeInfoClient from \"../../services/nodeInfoServices\";\n\nimport { NotificationManager } from \"react-notifications\";\n\nimport \"./chat-history.css\";\nimport \"./open-channel.css\";\n\n/**\n * This component represents the modal responsible for connecting to other peers on the network.\n * @param {*} props The global variables\n * @returns\n */\nconst ConnectPeer = (props) => {\n  const [lightningAddress, setLightningAddress] = useState(\"\");\n  return (\n    <div>\n      <Modal\n        title=\"Connect to Peer\"\n        visible={props.visible}\n        okText=\"Connect\"\n        onCancel={() => {\n          props.setVisible(false);\n        }}\n        onOk={() => {\n          console.log(lightningAddress);\n          const params = splitURI(lightningAddress);\n          if (params.error === \"\") {\n            nodeInfoClient().connectNode(\n              {\n                address: params[\"address\"],\n                hostport: params[\"hostport\"],\n              },\n              (err, res) => {\n                if (err) {\n                  console.log(err);\n                  NotificationManager.error(\"Failed to connect to peer\");\n                }\n                if (res) {\n                  console.log(res);\n                  NotificationManager.success(\"Connected to peer\");\n                  props.setVisible(false);\n                  setLightningAddress(\"\");\n                }\n              }\n            );\n          } else {\n            NotificationManager.error(\"Invalid URI format\");\n          }\n        }}\n      >\n        <Form layout=\"vertical\">\n          <Form.Item>\n            <div className=\"open-channel-item\">\n              <Divider orientation=\"left\" className=\"open-channel-item-text\">\n                Node URI\n              </Divider>\n              <Input\n                value={lightningAddress}\n                onChange={(e) => {\n                  setLightningAddress(e.target.value);\n                }}\n                className=\"open-channel-item-input\"\n              />\n            </div>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ConnectPeer;\n","import React, { useEffect, useState } from \"react\";\nimport { Form, Divider, Collapse, Button } from \"antd\";\n\nimport OpenChannel from \"./open-channel\";\nimport ConnectPeer from \"./connect-peer\";\nimport nodeInfoClient from \"../../services/nodeInfoServices\";\n\nimport \"./user-funds.css\";\nimport theme from \"../../style/theme\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\n/**\n * This component represents the user funds page. It contains information about on-chain and off-chain balances.\n */\nconst UserFunds = (props) => {\n  // Wallet related variables\n  const [walletConfirmedBalance, setWalletConfirmedBalance] = useState(0);\n  const [walletUnconfirmedBalance, setWalletUnconfirmedBalance] = useState(0);\n  const [channelTotalBalance, setChannelTotalBalance] = useState(0);\n  const [pendingChannelBalance, setPendingChannelBalance] = useState(0);\n  const [channelRemoteBalance, setChannelRemoteBalance] = useState(0);\n\n  const [connectPeerModalVisible, setConnectPeerModalVisible] = useState(false);\n  const [openChannelModalVisible, setOpenChannelModalVisible] = useState(false);\n\n  /**\n   * This function is called once when the component loads.\n   * It fetches the self balance information from the corresponding endpoint.\n   */\n  useEffect(() => {\n    nodeInfoClient().getSelfBalance({}, (err, res) => {\n      if (err) {\n        console.log(err);\n        NotificationManager.error(err.message);\n      }\n      if (res) {\n        if (res.walletConfirmedSat) {\n          setWalletConfirmedBalance(Number(`${res.walletConfirmedSat}`));\n        }\n        if (res.walletUnconfirmedSat) {\n          setWalletUnconfirmedBalance(Number(`${res.walletUnconfirmedSat}`));\n        }\n        if (res.channelLocalMsat) {\n          setChannelTotalBalance(\n            Number(`${Math.floor(res.channelLocalMsat / 1000)}`)\n          );\n        }\n        if (res.pendingOpenLocalMsat) {\n          setPendingChannelBalance(\n            Number(`${Math.floor(res.pendingOpenLocalMsat / 1000)}`)\n          );\n        }\n        if (res.channelRemoteMsat) {\n          setChannelRemoteBalance(\n            Number(`${Math.floor(res.channelRemoteMsat / 1000)}`)\n          );\n        }\n      }\n    });\n  }, []);\n\n  /**\n   * The user funds page JSX.\n   */\n  return (\n    <div className=\"user-funds\">\n      <div\n        className=\"user-funds-header\"\n        style={{\n          backgroundColor: theme.menuDarkLite,\n        }}\n      >\n        <DoubleRightOutlined\n          className=\"chatHistoryExpandForMobile\"\n          style={{\n            display: props.sideSquashed\n              ? props.sideActivated\n                ? \"none\"\n                : \"inherit\"\n              : \"none\",\n          }}\n          onClick={() => {\n            props.setSideActivated(true);\n          }}\n        />\n        <div className=\"user-funds-header-text\">Funds</div>\n      </div>\n      <div className=\"users-funds-main\">\n        <Collapse>\n          <Collapse.Panel header=\"Channels\">\n            <Button\n              onClick={() => {\n                setOpenChannelModalVisible(true);\n              }}\n            >\n              Open Channel\n            </Button>\n          </Collapse.Panel>\n          <Collapse.Panel header=\"Peers\">\n            <Button\n              onClick={() => {\n                setConnectPeerModalVisible(true);\n              }}\n            >\n              Connect to Peer\n            </Button>\n          </Collapse.Panel>\n        </Collapse>\n        <Form className=\"user-funds-form\" layout=\"vertical\">\n          <b>\n            <Divider orientation=\"left\">\n              <h2>On-chain Funds</h2>\n            </Divider>\n          </b>\n          <Form.Item label=\"Wallet Confirmed Balance\">\n            <b>{walletConfirmedBalance} sat</b>\n          </Form.Item>\n          <Form.Item label=\"Wallet Unconfirmed Balance\">\n            <b>{walletUnconfirmedBalance} sat</b>\n          </Form.Item>\n          <b>\n            <Divider orientation=\"left\">\n              <h2>Off-chain Funds</h2>\n            </Divider>\n          </b>\n          <Form.Item label=\"Total Channel balance\">\n            <b>{channelTotalBalance} sat</b>\n          </Form.Item>\n          <Form.Item label=\"Pending Channel Balance\">\n            <b>{pendingChannelBalance} sat</b>\n          </Form.Item>\n        </Form>\n        <OpenChannel\n          {...props}\n          visible={openChannelModalVisible}\n          setVisible={setOpenChannelModalVisible}\n        />\n        <ConnectPeer\n          {...props}\n          visible={connectPeerModalVisible}\n          setVisible={setConnectPeerModalVisible}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default UserFunds;\n","import apiUrl from \"../config/api-url\";\nimport authCreds from \"../config/auth-creds\";\n\nconst {\n  GetContactsRequest,\n  GetContactsResponse,\n  AddContactRequest,\n  AddContactResponse,\n  RemoveContactByIDRequest,\n  RemoveContactResponse,\n  RemoveContactByAddressRequest,\n  ContactInfo,\n  NodeInfo,\n} = require(\"../rpc/rpc_pb\");\nconst { ContactServiceClient } = require(\"../rpc/rpc_grpc_web_pb.js\");\n\nconst rpcClient = new ContactServiceClient(apiUrl(), {});\n\nconst client = new Object();\n\nclient.getContacts = (req, callback) => {\n  const request = new GetContactsRequest();\n  return rpcClient.getContacts(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? GetContactsResponse.toObject(res, res) : undefined)\n  );\n};\n\nclient.addContact = (req, callback) => {\n  const request = new AddContactRequest();\n  const contact = new ContactInfo();\n  const node = new NodeInfo();\n  node.setAlias(req.contact.node.alias);\n  node.setAddress(req.contact.node.address);\n  contact.setNode(node);\n  contact.setId(req.contact.id);\n  contact.setDisplayName(req.contact.displayName);\n  request.setContact(contact);\n  return rpcClient.addContact(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? AddContactResponse.toObject(res, res) : undefined)\n  );\n};\n\nclient.removeContactByID = (req, callback) => {\n  const request = new RemoveContactByIDRequest();\n  request.setId(req.id);\n  return rpcClient.removeContactByID(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? RemoveContactResponse.toObject(res, res) : undefined)\n  );\n};\n\nclient.removeContactByAddress = (req, callback) => {\n  const request = new RemoveContactByAddressRequest();\n  request.setAddress(req.address);\n  return rpcClient.removeContactByAddress(\n    request,\n    { ...authCreds() },\n    (err, res) =>\n      callback(err, res ? RemoveContactResponse.toObject(res, res) : undefined)\n  );\n};\n\nconst contactClient = () => {\n  return client;\n};\n\nexport default contactClient;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Input, List, Modal } from \"antd\";\nimport {\n  SearchOutlined,\n  UserAddOutlined,\n  UserDeleteOutlined,\n  MessageOutlined,\n  LoadingOutlined,\n} from \"@ant-design/icons\";\nimport { NotificationManager } from \"react-notifications\";\n\nimport contactClient from \"../../services/contactServices\";\nimport nodeInfoClient from \"../../services/nodeInfoServices\";\nimport discussionClient from \"../../services/discussionServices\";\n\nimport \"./search-users.css\";\nimport theme from \"../../style/theme\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\n/**\n * This component represents the user searching page.\n * @param {*} props The global variables.\n */\nconst SearchUsers = (props) => {\n  // User searching related variables\n  const [aliasToSearch, setaliasToSearch] = useState(\"\");\n  const [addressToSearch, setAddressToSearch] = useState(\"\");\n  const [searchedAlias, setSearchedAlias] = useState();\n  const [searchedAddress, setSearchedAddress] = useState();\n  const [userSelected, setUserSelected] = useState();\n  const [friendlyName, setFriendlyName] = useState(\"\");\n  const [contactAddModalActive, setContactAddModalActive] = useState(false);\n  const [contactRemoveModalActive, setContactRemoveModalActive] =\n    useState(false);\n  const [searchAliasLoading, setSearchAliasLoading] = useState(false);\n  const [searchAliasEmptyText, setSearchAliasEmptyText] = useState('Search Users by Alias');\n  const [searchAddressLoading, setSearchAddressLoading] = useState(false);\n  const [searchAddressEmptyText, setSearchAddressEmptyText] = useState('Search Users by Alias');\n\n  const [enteredAlias, setEnteredAlias] = useState(\"\");\n  const [searchAliasTouched, setSearchAliasTouched] = useState(false);\n  const [aliasFormValid, setAliasFormValid] = useState(false);\n\n  const [enteredAddress, setEnteredAddress] = useState(\"\");\n  const [searchAddressTouched, setSearchAddressTouched] = useState(false);\n  const [addressFormValid, setAddressFormValid] = useState(false);\n\n\n  const enteredAliasIsValid = () => {\n    return enteredAlias.length >= 3;\n  };\n  const aliasInputIsInvalid = () => {\n    return !enteredAliasIsValid() && searchAliasTouched;\n  };\n\n  const enteredAddressIsValid = () => {\n    return enteredAddress.length >= 4;\n  };\n  const addressInputIsInvalid = () => {\n    return !enteredAddressIsValid() && searchAddressTouched;\n  };\n\n  useEffect(() => {\n    if (enteredAliasIsValid() && aliasFormValid == false) {\n      setAliasFormValid(true);\n    } else if (!enteredAliasIsValid() && aliasFormValid == true) {\n      setAliasFormValid(false);\n    }\n  }, [enteredAlias]);\n\n  useEffect(() => {\n    if (enteredAddressIsValid() && addressFormValid == false) {\n      setAddressFormValid(true);\n    } else if (!enteredAddressIsValid() && addressFormValid == true) {\n      setAddressFormValid(false);\n    }\n  }, [enteredAddress]);\n  /**\n   * Creates a new contact based on selected user and (optional) entered friendly name.\n   */\n  const createContact = () => {\n    let req = {\n      contact: {\n        node: {\n          alias: userSelected ? userSelected.alias : \"unknown\",\n          address: userSelected ? userSelected.address : \"unknown\",\n        },\n        id: 20,\n        displayName: friendlyName !== undefined ? friendlyName : \"\",\n      },\n    };\n    const parsedContact = {\n      user: req.contact.node,\n      id: req.contact.id,\n      displayName: req.contact.displayName,\n    };\n    contactClient().addContact(req, (err, res) => {\n      if (err) {\n        console.log(err);\n        NotificationManager.warning(\"Failed to add contact\");\n      }\n      if (res) {\n        console.log(res);\n        if (props.contacts) {\n          props.setContacts(props.contacts.concat([parsedContact]));\n        } else {\n          props.setContacts([parsedContact]);\n        }\n        NotificationManager.info(\"Contact Added\");\n      }\n      let disc = props.discussions.find((elem) => {\n        return elem.participantsList[0] === userSelected.address;\n      });\n      if (disc === undefined) {\n        console.log(\"Not in discussion, creating...\");\n        discussionClient().addDiscussion(\n          {\n            discussion: {\n              participants: [userSelected.address],\n            },\n          },\n          (err, res) => {\n            if (err) {\n              console.log(err);\n            }\n            if (res) {\n              console.log(res);\n              props.setDiscussions((oldDiscussions) => {\n                return oldDiscussions.concat(res.discussion);\n              });\n            }\n          }\n        );\n      }\n      setContactAddModalActive(false);\n    });\n  };\n\n  /**\n   * Deletes the selected contact.\n   */\n  const deleteContact = () => {\n    contactClient().removeContactByAddress(\n      {\n        address: userSelected.address,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n          NotificationManager.warning(\"Failed to remove contact\");\n        }\n        if (res) {\n          NotificationManager.success(\"Removed contact\");\n        }\n      }\n    );\n    props.setContacts(\n      props.contacts.filter((item) => {\n        return item.user.address !== userSelected.address;\n      })\n    );\n    setContactRemoveModalActive(false);\n  };\n\n  /**\n   * Searches users based on entered alias.\n   */\n  const searchUsersByAlias = () => {\n    setSearchAliasLoading(true);\n    setSearchAliasEmptyText('Loading');\n    nodeInfoClient().searchNodeByAlias(\n      {\n        alias: aliasToSearch,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n          NotificationManager.warning(err.message);\n        }\n        if (res) {\n          setSearchedAlias(res.nodesList);\n        }\n        setSearchAliasEmptyText('No results');\n        setSearchAliasLoading(false);\n      }\n    );\n  };\n\n  /**\n   * Searches users based on entered addresses.\n   */\n  const searchUsersByAddress = () => {\n    setSearchAddressLoading(true);\n    setSearchAddressEmptyText('Loading');\n    nodeInfoClient().searchNodeByAddress(\n      {\n        address: addressToSearch,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n          NotificationManager.warning(err.message);\n        }\n        if (res) {\n          console.log(res);\n          setSearchedAddress(res.nodesList);\n        }\n        setSearchAddressEmptyText('No results');\n        setSearchAddressLoading(false);\n      }\n    );\n  };\n\n  /**\n   * Validating if the user entered more than 4 characters and touched the inputs\n   */\n\n  const aliasInputChangeHandler = (event) => {\n    setEnteredAlias(event.target.value);\n    setaliasToSearch(event.target.value);\n  };\n\n  const aliasInputBlurHandler = (event) => {\n    setSearchAliasTouched(true);\n  };\n\n  const aliasFormSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setSearchAliasTouched(true);\n\n    if (enteredAlias.length < 3) {\n      return;\n    }\n\n    setSearchAliasTouched(false);\n  };\n\n  const addressInputChangeHandler = (event) => {\n    setEnteredAddress(event.target.value);\n    setAddressToSearch(event.target.value);\n  };\n\n  const addressInputBlurHandler = (event) => {\n    setSearchAddressTouched(true);\n  };\n\n  const addressFormSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setSearchAddressTouched(true);\n\n    setSearchAddressTouched(false);\n  };\n\n  /**\n   * The search users page JSX.\n   */\n  return (\n    <>\n      <div className=\"search-users\">\n        <div\n          className=\"search-users-header\"\n          style={{\n            backgroundColor: theme.menuDarkLite,\n          }}\n        >\n          <div className=\"chatHistoryExpandForMobile\">\n            <DoubleRightOutlined\n              style={{\n                display: props.sideSquashed\n                  ? props.sideActivated\n                    ? \"none\"\n                    : \"inherit\"\n                  : \"none\",\n              }}\n              onClick={() => {\n                props.setSideActivated(true);\n              }}\n            />\n          </div>\n          <div className=\"search-users-header-text\">\n            Search Users on the Network\n          </div>\n        </div>\n        <div className=\"search-users-contents\">\n          <h3>Search Users {`(${props.users?.length} found)`}</h3>\n          <form onSubmit={aliasFormSubmissionHandler}>\n            <div className=\"search-wrapper\">\n              <div className=\"users-search\">\n                <Input\n                  title=\"Search by alias\"\n                  className=\"search-users-input\"\n                  placeholder=\"Enter Alias\"\n                  onChange={aliasInputChangeHandler}\n                  onBlur={aliasInputBlurHandler}\n                  value={enteredAlias}\n                  onKeyDown={\n                    aliasFormValid ? (\n                      (e) => {\n                        return e.key === \"Enter\"\n                          ? e.shiftKey\n                            ? undefined\n                            : searchUsersByAlias()\n                          : undefined;\n                      }\n                    ) : () => (\n                      <p className=\"error-validation\">Minimum 3 characters</p>\n                    )\n                  }\n                />\n                <Button\n                  className=\"search-users-button\"\n                  disabled={!aliasFormValid}\n                  onClick={() => {\n                    searchUsersByAlias();\n                  }}\n                >\n                  {searchAliasLoading ? (\n                    <LoadingOutlined spin />\n                  ) : (\n                    <SearchOutlined />\n                  )}\n                </Button>\n              </div>\n              {aliasInputIsInvalid() && (\n                <p className=\"error-validation\">Minimum 3 characters</p>\n              )}\n              <List\n                locale={{\n                  emptyText: searchAliasEmptyText,\n                }}\n                className=\"search-users-description\"\n                placeholder=\"\"\n                dataSource={searchedAlias || undefined}\n                itemLayout=\"horizontal\"\n                renderItem={(item) => {\n                  let inContacts;\n                  if (props.contacts) {\n                    inContacts = props.contacts.find((elem) => {\n                      return elem.user.address === item.address;\n                    });\n                  }\n                  let inDiscussion =\n                    props.discussions.length !== 0\n                      ? props.discussions.find((elem) => {\n                        return elem.participantsList.includes(item.address);\n                      })\n                      : false;\n                  return (\n                    <List.Item className=\"search-users-container\">\n                      <div className=\"search-users-containerDv\">\n                        {item.alias}\n                      </div>\n                      Address:\n                      <div className=\"search-users-containerAddress\">\n                        {` ${item.address}`}\n                      </div>\n                      <br />\n                      <div className=\"search-users-container-icons\">\n                        <Button\n                          onClick={() => {\n                            if (inDiscussion) {\n                              console.log(\"already in discussion\");\n                              props.setSelectedDiscussion(inDiscussion);\n                              props.setSelectedPage(\"chatHistory\");\n                            } else {\n                              console.log(\"creating discussion:\", item.address);\n                              discussionClient().addDiscussion(\n                                {\n                                  discussion: {\n                                    participants: [item.address],\n                                    options: {\n                                      anonymous: false,\n                                    },\n                                  },\n                                },\n                                (err, res) => {\n                                  if (err) {\n                                    console.log(err);\n                                    NotificationManager.warning(\n                                      \"Failed to add discussion\"\n                                    );\n                                  }\n                                  if (res) {\n                                    console.log(res);\n                                    props.setDiscussions((oldDiscussions) => {\n                                      return oldDiscussions.concat(\n                                        res.discussion\n                                      );\n                                    });\n                                    props.setSelectedDiscussion(res.discussion);\n                                    props.setSelectedPage(\"chatHistory\");\n                                  }\n                                }\n                              );\n                            }\n                          }}\n                        >\n                          <MessageOutlined />\n                        </Button>\n                        <Button\n                          className=\"search-users-button\"\n                          onClick={() => {\n                            setUserSelected(item);\n                            if (inContacts) {\n                              setContactRemoveModalActive(true);\n                            } else {\n                              setContactAddModalActive(true);\n                            }\n                          }}\n                        >\n                          {inContacts ? (\n                            <UserDeleteOutlined className=\"search-users-userDeleteOutlined\" />\n                          ) : (\n                            <UserAddOutlined className=\"search-users-userAddOutlined\" />\n                          )}\n                        </Button>\n                      </div>\n                    </List.Item>\n                  );\n                }}\n              />\n            </div>\n          </form>\n          <form onSubmit={addressFormSubmissionHandler}>\n            <div className=\"search-wrapper\">\n              <div className=\"users-search\">\n                <Input\n                  placeholder=\"Enter Address\"\n                  title=\"Search by address\"\n                  onChange={addressInputChangeHandler}\n                  onBlur={addressInputBlurHandler}\n                  onKeyDown={\n                    addressFormValid ? (\n                      (e) => {\n                        return e.key === \"Enter\"\n                          ? e.shiftKey\n                            ? undefined\n                            : searchUsersByAddress()\n                          : undefined;\n                      }\n                    ) : () => (\n                      <p className=\"error-validation\">Minimum 4 characters</p>\n                    )\n                  }\n                  className=\"search-users-input\"\n                />\n                <Button\n                  className=\"search-users-button\"\n                  onClick={() => {\n                    searchUsersByAddress();\n                  }}\n                  disabled={!addressFormValid}\n                >\n                  {searchAddressLoading ? (\n                    <LoadingOutlined spin />\n                  ) : (\n                    <SearchOutlined />\n                  )}\n                </Button>\n              </div>\n              {addressInputIsInvalid() && (\n                <p className=\"error-validation\">Minimum 4 characters</p>\n              )}\n              <List\n                locale={{\n                  emptyText: searchAddressEmptyText,\n                }}\n                className=\"search-users-description\"\n                placeholder=\"\"\n                dataSource={searchedAddress || undefined}\n                itemLayout=\"horizontal\"\n                renderItem={(item) => {\n                  let inContacts;\n                  if (props.contacts) {\n                    inContacts = props.contacts.find((elem) => {\n                      return elem.user.address === item.address;\n                    });\n                  }\n                  let inDiscussion =\n                    props.discussions.length !== 0\n                      ? props.discussions.find((elem) => {\n                        return elem.participantsList.includes(item.address);\n                      })\n                      : false;\n                  return (\n                    <List.Item className=\"userSearchContainer\">\n                      <div className=\"search-users-containerDv\">\n                        {item.alias}\n                      </div>\n                      Address:\n                      <div className=\"search-users-Address\">{` ${item.address}`}</div>\n                      <br />\n                      <div className=\"search-users-button\">\n                        <Button\n                          onClick={() => {\n                            if (inDiscussion) {\n                              console.log(\"already in discussion\");\n                              props.setSelectedDiscussion(inDiscussion);\n                              props.setSelectedPage(\"chatHistory\");\n                            } else {\n                              console.log(\"creating discussion:\", item.address);\n                              discussionClient().addDiscussion(\n                                {\n                                  discussion: {\n                                    participants: [item.address],\n                                    options: {\n                                      anonymous: false,\n                                    },\n                                  },\n                                },\n                                (err, res) => {\n                                  if (err) {\n                                    console.log(err);\n                                    NotificationManager.warning(\n                                      \"Failed to add discussion\"\n                                    );\n                                  }\n                                  if (res) {\n                                    console.log(res);\n                                    props.setDiscussions((oldDiscussions) => {\n                                      return oldDiscussions.concat(\n                                        res.discussion\n                                      );\n                                    });\n                                    props.setSelectedDiscussion(res.discussion);\n                                    props.setSelectedPage(\"chatHistory\");\n                                  }\n                                }\n                              );\n                            }\n                          }}\n                        >\n                          <MessageOutlined />\n                        </Button>\n                        <Button\n                          className=\"search-users-button\"\n                          onClick={() => {\n                            setUserSelected(item);\n                            if (inContacts) {\n                              setContactRemoveModalActive(true);\n                            } else {\n                              setContactAddModalActive(true);\n                            }\n                          }}\n                        >\n                          {inContacts ? (\n                            <UserDeleteOutlined className=\"search-users-userDeleteOutlined\" />\n                          ) : (\n                            <UserAddOutlined className=\"search-users-userAddOutlined\" />\n                          )}\n                        </Button>\n                      </div>\n                    </List.Item>\n                  );\n                }}\n              />\n              <Modal\n                visible={!!contactAddModalActive}\n                title=\"Enter Friendly name\"\n                onOk={() => {\n                  createContact();\n                }}\n                onCancel={() => {\n                  setContactAddModalActive(false);\n                }}\n                okButtonProps={{ type: \"default\" }}\n              >\n                You are adding\n                {` ${userSelected ? userSelected.alias : \"Unknown\"} `}\n                to contacts.\n                <Input\n                  className=\"search-users-inputModal\"\n                  onChange={(e) => {\n                    setFriendlyName(e.target.value);\n                  }}\n                  placeholder=\"Friendly Name\"\n                />\n              </Modal>\n              <Modal\n                visible={!!contactRemoveModalActive}\n                title=\"Deleting Contact\"\n                onOk={() => {\n                  deleteContact();\n                }}\n                onCancel={() => {\n                  setContactRemoveModalActive(false);\n                }}\n                okButtonProps={{ type: \"default\" }}\n              >\n                You are removing\n                {` ${userSelected ? userSelected.alias : \"Unknown\"} `}\n                from contacts.\n              </Modal>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SearchUsers;\n","import React, { useState } from \"react\";\nimport { Button, List, Modal } from \"antd\";\nimport { UserDeleteOutlined, MessageOutlined } from \"@ant-design/icons\";\nimport { NotificationManager } from \"react-notifications\";\n\nimport contactClient from \"../../services/contactServices\";\nimport discussionClient from \"../../services/discussionServices\";\nimport \"./contacts.css\";\nimport theme from \"../../style/theme\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\n/**\n * This component represents the contacts page.\n * This page manages the user's contacts.\n * @param {*} props The global variables.\n */\nconst Contacts = (props) => {\n  const [contactRemoveModalActive, setContactRemoveModalActive] =\n    useState(false);\n  const [userSelected, setUserSelected] = useState();\n\n  /**\n   * Deletes the currently selected user (userSelected) from contacts.\n   */\n  const deleteContact = () => {\n    contactClient().removeContactByAddress(\n      {\n        address: userSelected.address,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n          NotificationManager.warning(\"Failed to remove contact\");\n        }\n        if (res) {\n          NotificationManager.success(\"Removed contact\");\n        }\n      }\n    );\n    props.setContacts(\n      props.contacts.filter((item) => {\n        return item.user.address !== userSelected.address;\n      })\n    );\n    setContactRemoveModalActive(false);\n  };\n\n  /**\n   * The contacts page JSX.\n   */\n  return (\n    <>\n      <div className=\"contacts\">\n        <div\n          className=\"contacts-header\"\n          style={{\n            backgroundColor: theme.menuDarkLite,\n          }}\n          onClick={() => {\n            if (props.sideActivated === true) {\n              props.setSideActivated(false);\n            }\n          }}\n        >\n          <DoubleRightOutlined\n            className=\"chatHistoryExpandForMobile\"\n            style={{\n              display: props.sideSquashed\n                ? props.sideActivated\n                  ? \"none\"\n                  : \"inherit\"\n                : \"none\",\n            }}\n            onClick={() => {\n              props.setSideActivated(true);\n            }}\n          />\n          <div className=\"contacts-header-text\">Contacts</div>\n        </div>\n        <div\n          className=\"contacts-body\"\n          onClick={() => {\n            props.setSideActivated(false);\n          }}\n        >\n          <List\n            locale={{\n              emptyText: \"No Contacts\",\n            }}\n            className=\"contacts-list\"\n            placeholder=\"\"\n            dataSource={props.contacts || undefined}\n            itemLayout=\"horizontal\"\n            renderItem={(item) => {\n              let inDiscussion =\n                props.discussions.length !== 0\n                  ? props.discussions.find((elem) => {\n                    return (\n                      elem.participantsList.includes(item.user.address) &&\n                        elem.participantsList.length === 1\n                    );\n                  })\n                  : false;\n              return (\n                <List.Item className=\"userSearchContainer\">\n                  <div className=\"userSearchContainerAfter\">\n                    {`${item.displayName ? item.displayName : \"\"} (${\n                      item.user.alias\n                    })`}\n                  </div>\n                  Address:\n                  <div className=\"userSearchContainerAddress\">\n                    {` ${item.user.address}`}\n                  </div>\n                  <br />\n                  <Button\n                    className=\"userSearchContainerButton\"\n                    onClick={() => {\n                      setUserSelected(item.user);\n                      setContactRemoveModalActive(true);\n                    }}\n                  >\n                    {<UserDeleteOutlined className=\"userDeleteOutlined\" />}\n                  </Button>\n                  <Button\n                    className=\"userDeleteOutlinedButton\"\n                    onClick={() => {\n                      if (inDiscussion) {\n                        console.log(\"already in discussion\");\n                        props.setSelectedDiscussion(inDiscussion);\n                        props.setSelectedPage(\"chatHistory\");\n                      } else {\n                        console.log(\"creating discussion:\", item.user.address);\n                        discussionClient().addDiscussion(\n                          {\n                            discussion: {\n                              participants: [item.user.address],\n                              options: {\n                                anonymous: false,\n                              },\n                            },\n                          },\n                          (err, res) => {\n                            if (err) {\n                              console.log(err);\n                              NotificationManager.warning(\n                                \"Failed to add discussion\"\n                              );\n                            }\n                            if (res) {\n                              console.log(res);\n                              props.setDiscussions((oldDiscussions) => {\n                                return oldDiscussions.concat(res.discussion);\n                              });\n                              props.setSelectedDiscussion(res.discussion);\n                              props.setSelectedPage(\"chatHistory\");\n                            }\n                          }\n                        );\n                      }\n                    }}\n                  >\n                    <MessageOutlined />\n                  </Button>\n                </List.Item>\n              );\n            }}\n          />\n          <Modal\n            visible={!!contactRemoveModalActive}\n            title=\"Deleting Contact\"\n            onOk={() => {\n              deleteContact();\n            }}\n            onCancel={() => {\n              setContactRemoveModalActive(false);\n            }}\n            okButtonProps={{ type: \"default\" }}\n          >\n            You are removing\n            {` ${userSelected ? userSelected.alias : \"Unknown\"} `}\n            from contacts.\n          </Modal>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Contacts;\n","export default __webpack_public_path__ + \"static/media/arc-logo.b26a22a5.png\";","export default __webpack_public_path__ + \"static/media/programize_logo.8a1b915d.png\";","import React from \"react\";\n\nimport arcLogo from \"../../media/arc-logo.png\";\nimport programizeLogo from \"../../media/programize_logo.png\";\nimport \"./logo.css\";\nimport theme from \"../../style/theme\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\n/**\n * This component represents the static arc logo page.\n * It is the default page when application starts up, or the default page in case of erroneous page selection.\n */\nconst Logo = (props) => {\n  return (\n    <>\n      <div className=\"welcomePage\">\n        <div\n          className=\"welcomePage-header\"\n          style={{\n            backgroundColor: theme.menuDarkLite,\n          }}\n        >\n          <DoubleRightOutlined\n            className=\"chatHistoryExpandForMobile\"\n            style={{\n              display: props.sideSquashed\n                ? props.sideActivated\n                  ? \"none\"\n                  : \"inherit\"\n                : \"none\",\n            }}\n            onClick={() => {\n              props.setSideActivated(true);\n            }}\n          />\n          <div className=\"welcomePage-header-text\">\n            Messages and payments combined!\n          </div>\n        </div>\n        <div className=\"welcomePage-logo\">\n          <img src={arcLogo} className=\"interactiveLogoC13n\" />\n          <img src={programizeLogo} className=\"interactiveLogoProgramize\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Logo;\n","import nodeInfoClient from \"../services/nodeInfoServices\";\n/**\n * The FE application version.\n */\nconst version = \"0.0.2\";\n\n/**\n * Acquires the returned backend version.\n * @param {*} setBackendVersion The setter of the state variable representing the version (used to acquire the value asynchronously).\n */\nconst getBackendVersion = (setBackendVersion) => {\n  nodeInfoClient.getVersion({}, (err, res) => {\n    if (err) {\n      return setBackendVersion(\"invalid\");\n    }\n    if (res) {\n      if (res.version) {\n        return setBackendVersion(res.version);\n      } else {\n        return setBackendVersion(\"invalid\");\n      }\n    }\n  });\n};\n\nexport { version, getBackendVersion };\n","/**\n   * This function adds an account to the local storage.\n   * @param {*} account Object containing account information\n   */\nconst addToAccounts = (props, account) => {\n  let res = props.accounts.filter((elem) => {\n    return elem.url !== account.url;\n  });\n  props.setAccounts((oldAccounts) => {\n    res.push(account);\n    saveAccounts(res);\n    return res;\n  });\n};\n\n/**\n   * This function removes an account from the local storage.\n   * @param {*} account Object containing account information\n   */\nconst removeFromAccounts = (props, account) => {\n  let res = props.accounts.filter((elem) => {\n    return elem.url !== account.url;\n  });\n  props.setAccounts(res);\n  saveAccounts(res);\n};\n\n/**\n   * This function loads the accounts saves in local storage.\n   */\nconst loadAccounts = (props) => {\n  let res = window.localStorage.getItem('accounts');\n  if (res) {\n    props.setAccounts(JSON.parse(res));\n  }\n};\n\n/**\n   * This function saves the accounts array in local storage.\n   * @param {*} accountsArray The accounts array.\n   */\nconst saveAccounts = (accountsArray) => {\n  console.log(\"Savving to accounts\", accountsArray);\n  window.localStorage.setItem('accounts', JSON.stringify(accountsArray));\n};\n\nexport {\n  addToAccounts,\n  removeFromAccounts,\n  loadAccounts,\n  saveAccounts\n};","import { List, Modal, Button, Form, Input } from \"antd\";\nimport { DeleteOutlined, LoginOutlined } from \"@ant-design/icons\";\nimport React, { useState, useEffect } from \"react\";\nimport { NotificationManager } from \"react-notifications\";\n\nimport nodeInfoClient from \"../services/nodeInfoServices\";\nimport { version } from \"../config/version\";\n\nimport { addToAccounts, removeFromAccounts } from \"../utils/accounts-utils\";\n\nimport sleep from \"../utils/system\";\n\nimport \"./accounts.css\";\nimport arcLogo from \"../media/arc-logo.png\";\nimport generateIdenticon from \"../utils/identicon\";\n\nconst { Version } = require(\"../rpc/rpc_pb.js\");\n\n/**\n * This component represents the account selection screen.\n * @param {*} props The global variables.\n */\nconst Accounts = (props) => {\n  // Modal related variables\n  const [addAccountModalVisible, setAddAccountModalVisible] = useState(false);\n  const [deleteAccountModalVisible, setDeleteAccountModalVisible] =\n    useState(false);\n  const [credentialsModalVisible, setCredentialsModalVisible] = useState(false);\n  const [usernameToUse, setUsernameToUse] = useState(\"\");\n  const [passwordToUse, setPasswordToUse] = useState(\"\");\n  const [urlToAdd, setUrlToAdd] = useState(\"\");\n  const [selectedAccount, setSelectedAccount] = useState();\n\n  /**\n   * This function is called once when the component loads.\n   * It checks for previously selected account in order to connect automatically on the same account.\n   */\n  useEffect(() => {\n    if (props.loadAccount === 0) {\n      let url = window.localStorage.getItem(\"url\");\n      if (url !== \"\" && url !== \"undefined\" && url !== null) {\n        console.log(\"Selected:\", url);\n        props.setSelectedPage(\"connectionScreen\");\n        let deadline = new Date();\n        deadline.setSeconds(deadline.getSeconds() + 1);\n        nodeInfoClient().getVersion(\n          {},\n          { deadline: deadline.getTime() },\n          (err, res) => {\n            if (err) {\n              console.log(err);\n              if (Date.now() < deadline) {\n                NotificationManager.error(\n                  \"Could not reach c13n backend\"\n                );\n              } else {\n                NotificationManager.error(err.message);\n              }\n              window.localStorage.setItem(\"url\", \"\");\n              window.localStorage.setItem(\"httpUsername\", \"\");\n              window.localStorage.setItem(\"httpPassword\", \"\");\n              props.setSelectedPage(\"accounts\");\n            }\n            if (res) {\n              if (res.version) {\n                props.setSelectedPage(\"logo\");\n                props.setBackendVersion(res.version);\n                console.log(res);\n                let backendMajor = res.version.split(\".\")[0];\n                let guiMajor = version.split(\".\")[0];\n                if (backendMajor !== guiMajor) {\n                  props.setSelectedPage(\"versionError\");\n                } else {\n                  props.setLoadAccount(1);\n                }\n              } else {\n                console.log(res);\n                NotificationManager.error(\"Unknown backend error!\");\n                window.localStorage.setItem(\"url\", \"\");\n                window.localStorage.setItem(\"httpUsername\", \"\");\n                window.localStorage.setItem(\"httpPassword\", \"\");\n                props.setSelectedPage(\"accounts\");\n              }\n            }\n          }\n        );\n      }\n    }\n  }, []);\n\n  /**\n   * Performs a login with current credentials.\n   */\n  const credentialsModalLogin = (account) => {\n    if (usernameToUse && passwordToUse) {\n      console.log(\"Logging:\", account);\n      window.localStorage.setItem(\"httpUsername\", usernameToUse);\n      window.localStorage.setItem(\"httpPassword\", passwordToUse);\n      window.localStorage.setItem(\"url\", account.url);\n      setTimeout(\n        () => {\n          window.location.reload(true);\n        },\n        500);\n      setCredentialsModalVisible(false);\n    }\n  };\n\n  const addAccountHandler = () => {\n    if ((urlToAdd !== \"\") && (!!usernameToUse)) {\n      addToAccounts(props, { url: urlToAdd, username: usernameToUse, address: \"\", lastActive: 0 });\n      setSelectedAccount({ url: urlToAdd, address: \"\", lastActive: 0 });\n      setUrlToAdd(\"\");\n      setAddAccountModalVisible(false);\n      credentialsModalLogin({\n        url: urlToAdd,\n        address: \"\",\n        lastActive: 0,\n      });\n    }\n  };\n\n  /**\n   * The accounts page JSX.\n   */\n  return (\n    <div className=\"login-page\">\n      <div className=\"login-page-logo-container\">\n        <img src={arcLogo} className=\"login-page-logo\" />\n      </div>\n      <h3 className=\"login-page-select\">Select a c13n Node</h3>\n      <List\n        className=\"login-page-accountsList\"\n        locale={{\n          emptyText: \"No Accounts\",\n        }}\n        dataSource={props.accounts.sort(function (a, b) {\n          return b.lastActive - a.lastActive;\n        })}\n        renderItem={(item) => {\n          return (\n            <List.Item className=\"accountsListItem\">\n              <Form className=\"accountsForm\">\n                <Form.Item\n                  className=\"accountsFormItem\"\n                  onClick={() => {\n                    if (item.url !== \"\") {\n                      setSelectedAccount(item);\n                      setUsernameToUse(item.username);\n                      setCredentialsModalVisible(true);\n                      setTimeout(\n                        () => {\n                          document.getElementById(\"credentialsPasswordInput\").focus();\n                        },\n                        500\n                      );\n                    }\n                  }}\n                >\n                  {generateIdenticon(item.address, 30)}\n                  {item.url !== \"\" ? (\n                    item.url\n                  ) : (\n                    <span className=\"accountsFormItemError\">\n                      No URL provided\n                    </span>\n                  )}\n                </Form.Item>\n              </Form>\n              <div className=\"accountsButtons\">\n                <Button\n                  className=\"accountsButton\"\n                  onClick={() => {\n                    setSelectedAccount(item);\n                    setDeleteAccountModalVisible(true);\n                  }}\n                >\n                  <DeleteOutlined />\n                </Button>\n              </div>\n            </List.Item>\n          );\n        }}\n      />\n      <Button\n        className=\"login-page-addButton\"\n        onClick={() => {\n          setAddAccountModalVisible(true);\n          setUsernameToUse(\"\");\n          setTimeout(\n            () => {\n              document.getElementById(\"addAccountNodeInput\").focus();\n            },\n            500\n          );\n        }}\n      >\n        <div className=\"login-page-addButton-Text\">+ Add New Node</div>\n      </Button>\n      <Modal\n        visible={!!addAccountModalVisible}\n        onOk={addAccountHandler}\n        onCancel={() => {\n          setAddAccountModalVisible(false);\n        }}\n        okButtonProps={{ type: \"default\" }}\n      >\n        <div className=\"login-page-modal-logo-container\">\n          <img src={arcLogo} className=\"login-page-modal-logo\" />\n        </div>\n        <Input\n          id=\"addAccountNodeInput\"\n          placeholder=\"Node Address\"\n          value={urlToAdd}\n          className=\"accountsInput\"\n          onChange={(e) => {\n            setUrlToAdd(e.target.value);\n          }}\n        />\n        <Input\n          placeholder=\"Username\"\n          className=\"accountsInputCred\"\n          value={usernameToUse}\n          onChange={(e) => {\n            setUsernameToUse(e.target.value);\n          }}\n        />\n        <Input\n          placeholder=\"Password\"\n          className=\"accountsInputCred\"\n          type=\"password\"\n          value={passwordToUse}\n          onChange={(e) => {\n            setPasswordToUse(e.target.value);\n          }}\n          onKeyDown={(e) => {\n            return e.key === \"Enter\"\n              ? e.shiftKey\n                ? undefined\n                : addAccountHandler()\n              : undefined;\n          }}\n        />\n      </Modal>\n      <Modal\n        visible={!!deleteAccountModalVisible}\n        onOk={() => {\n          removeFromAccounts(props, selectedAccount);\n          setDeleteAccountModalVisible(false);\n        }}\n        onCancel={() => {\n          setDeleteAccountModalVisible(false);\n        }}\n        okButtonProps={{ type: \"default\" }}\n      >\n        Delete Account?\n      </Modal>\n      <Modal\n        visible={!!credentialsModalVisible}\n        onOk={() => {\n          credentialsModalLogin(selectedAccount);\n        }}\n        onCancel={() => {\n          setCredentialsModalVisible(false);\n        }}\n        okButtonProps={{ type: \"default\" }}\n        cancelButtonProps={{ style: { display: \"none\" } }}\n      >\n        <div className=\"login-page-modal-logo-container\">\n          <img src={arcLogo} className=\"login-page-modal-logo\" />\n        </div>\n        <Input\n          placeholder=\"Username\"\n          className=\"accountsInputCred\"\n          value={usernameToUse}\n          onChange={(e) => {\n            setUsernameToUse(e.target.value);\n          }}\n        />\n        <Input\n          id=\"credentialsPasswordInput\"\n          placeholder=\"Password\"\n          className=\"accountsInputCred\"\n          type=\"password\"\n          value={passwordToUse}\n          onChange={(e) => {\n            setPasswordToUse(e.target.value);\n          }}\n          onKeyDown={(e) => {\n            return e.key === \"Enter\"\n              ? e.shiftKey\n                ? undefined\n                : credentialsModalLogin(selectedAccount)\n              : undefined;\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Accounts;\n","import React from \"react\";\n\nimport { Button, Form } from \"antd\";\n\nimport { version } from \"../../config/version\";\n\nimport \"./version-error.css\";\n\nconst formLayout = {\n  labelCol: { span: 10 },\n  wrapperCol: { span: 10 },\n};\n/**\n * This component represents the error screen for incompatible BE/FE version.\n * @param {} props The global variables.\n * @returns The JSX of the error screen.\n */\nconst VersionScreen = (props) => {\n  return (\n    <div className=\"version-error-versionScreen\">\n      <h3>Incompatible Backend version</h3>\n      <Form {...formLayout}>\n        <Form.Item label=\"Backend Version\">{props.backendVersion}</Form.Item>\n        <Form.Item label=\"GUI Version\">{version}</Form.Item>\n      </Form>\n      <Button\n        onClick={() => {\n          window.localStorage.setItem(\"url\", \"\");\n          window.location.reload(true);\n        }}\n        className=\"version-error-button\"\n      >\n        Choose another C13N backend\n      </Button>\n    </div>\n  );\n};\n\nexport default VersionScreen;\n","import React from \"react\";\n\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nimport \"./connection-screen.css\";\n\n/**\n * This component represents the connection screen.\n * @returns The connection screen JSX.\n */\nconst ConnectionScreen = () => {\n  return (\n    <div className=\"connection-screen-dv\">\n      <h2>Connecting</h2>\n      <LoadingOutlined spin />\n    </div>\n  );\n};\n\nexport default ConnectionScreen;\n","import React, { useState } from \"react\";\nimport { Button, Input, List, Modal } from \"antd\";\nimport {\n  SearchOutlined,\n  LoadingOutlined,\n  PlusOutlined,\n  MinusOutlined,\n  CheckOutlined,\n} from \"@ant-design/icons\";\nimport { NotificationManager } from \"react-notifications\";\n\nimport nodeInfoClient from \"../../services/nodeInfoServices\";\nimport discussionClient from \"../../services/discussionServices\";\nimport \"./group-chat.css\";\nimport theme from \"../../style/theme\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\n/**\n * This component represents the contacts page.\n * This page manages the user's contacts.\n * @param {*} props The global variables.\n */\nconst GroupChat = (props) => {\n  const [aliasToSearch, setAliasToSearch] = useState(\"\");\n  const [searchedAlias, setSearchedAlias] = useState();\n  const [searchLoading, setSearchLoading] = useState(false);\n\n  const [searchGroupTouched, setSearchGroupTouched] = useState(false);\n\n  const enteredGroupIsValid = aliasToSearch.length >= 3;\n  const groupInputIsInvalid = !enteredGroupIsValid && searchGroupTouched;\n\n  const [groupModalVisible, setGroupModalVisible] = useState(false);\n\n  /**\n   * Check if given user belongs in the participant list.\n   * @param {*} user The user object.\n   * @returns Found status.\n   */\n  const isInParticipants = (user) => {\n    let res = props.selectedParticipants.find((elem) => {\n      if (elem.address == user.address) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    return res;\n  };\n\n  /**\n   * Creates the formed group discussion.\n   */\n  const createGroupDiscussion = () => {\n    if (props.selectedParticipants.length > 1) {\n      let addr_list = [];\n      props.selectedParticipants.forEach((elem) => {\n        addr_list.push(elem.address);\n      });\n      console.log(addr_list);\n      discussionClient().addDiscussion(\n        {\n          discussion: {\n            participants: addr_list,\n            options: {\n              anonymous: false,\n            },\n          },\n        },\n        (err, res) => {\n          if (err) {\n            console.log(err);\n            NotificationManager.warning(\"Failed to add discussion\");\n          }\n          if (res) {\n            console.log(res);\n            NotificationManager.success(\"Created group discussion\");\n            props.setDiscussions((oldDiscussions) => {\n              return oldDiscussions.concat(res.discussion);\n            });\n            props.setSelectedDiscussion(res.discussion);\n            props.setSelectedPage(\"chatHistory\");\n          }\n        }\n      );\n      props.setSelectedParticipants([]);\n    } else {\n      NotificationManager.error(\"Not enough participants\");\n    }\n  };\n\n  /**\n   * Searches users based on entered alias.\n   */\n  const searchUsersByAlias = () => {\n    setSearchLoading(true);\n    nodeInfoClient().searchNodeByAlias(\n      {\n        alias: aliasToSearch,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n          NotificationManager.warning(err.message);\n        }\n        if (res) {\n          setSearchedAlias(res.nodesList);\n        }\n        setSearchLoading(false);\n      }\n    );\n  };\n\n  const groupBlurHandler = (event) => {\n    setSearchGroupTouched(true);\n  };\n\n  let groupFormIsValid = false;\n\n  if (enteredGroupIsValid) {\n    groupFormIsValid = true;\n  }\n\n  const groupFormSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setSearchGroupTouched(true);\n\n    if (aliasToSearch.length < 3) {\n      return;\n    }\n\n    setAliasToSearch(\"\");\n    setSearchGroupTouched(false);\n  };\n\n  /**\n   * The group chat page JSX.\n   */\n  return (\n    <>\n      <div className=\"group-chat\">\n        <div\n          className=\"group-chat-header\"\n          style={{\n            backgroundColor: theme.menuDarkLite,\n          }}\n        >\n          <DoubleRightOutlined\n            className=\"chatHistoryExpandForMobile\"\n            style={{\n              display: props.sideSquashed\n                ? props.sideActivated\n                  ? \"none\"\n                  : \"inherit\"\n                : \"none\",\n            }}\n            onClick={() => {\n              props.setSideActivated(true);\n            }}\n          />\n          <div className=\"group-chat-header-text\">\n            Search Users on the Network\n          </div>\n        </div>\n        <div className=\"group-chat-main\">\n          <Button\n            onClick={() => {\n              setGroupModalVisible(true);\n            }}\n          >\n            Preview Group\n          </Button>\n          <br />\n          <form onSubmit={groupFormSubmissionHandler}>\n            <div className=\"group-chat-searchAlias-wrapper\">\n              <div className=\"group-chat-search\">\n                <Input\n                  title=\"Search by alias\"\n                  placeholder=\"Enter Alias\"\n                  onBlur={groupBlurHandler}\n                  value={aliasToSearch}\n                  onChange={(e) => {\n                    setAliasToSearch(e.target.value);\n                  }}\n                  onKeyDown={\n                    groupFormIsValid\n                      ? (e) => {\n                        return e.key === \"Enter\"\n                          ? e.shiftKey\n                            ? undefined\n                            : searchUsersByAlias()\n                          : undefined;\n                      }\n                      : () => (\n                        <p className=\"error-validation\">\n                            Minimum 3 characters\n                        </p>\n                      )\n                  }\n                  className=\"group-chat-input\"\n                />\n                <Button\n                  disabled={!groupFormIsValid}\n                  className=\"group-search-button\"\n                  onClick={() => {\n                    searchUsersByAlias();\n                  }}\n                >\n                  {searchLoading ? (\n                    <LoadingOutlined spin />\n                  ) : (\n                    <SearchOutlined />\n                  )}\n                </Button>\n              </div>\n              {groupInputIsInvalid && (\n                <p className=\"error-validation\">Minimum 3 characters</p>\n              )}\n              <List\n                locale={{\n                  emptyText: \"Search Users by Alias\",\n                }}\n                className=\"usersList\"\n                placeholder=\"\"\n                dataSource={searchedAlias || undefined}\n                itemLayout=\"horizontal\"\n                renderItem={(item) => {\n                  let inContacts;\n                  if (props.contacts) {\n                    inContacts = props.contacts.find((elem) => {\n                      return elem.user.address === item.address;\n                    });\n                  }\n                  let inDiscussion =\n                    props.discussions.length !== 0\n                      ? props.discussions.find((elem) => {\n                        return elem.participantsList.includes(item.address);\n                      })\n                      : false;\n                  return (\n                    <List.Item className=\"userSearchContainer\">\n                      <div className=\"userSearchContainerDv\">{item.alias}</div>\n                      Address:\n                      <div className=\"group-chat-address\">{` ${item.address}`}</div>\n                      <br />\n                      <div className=\"group-chat-addressDv\">\n                        <Button\n                          onClick={(e) => {\n                            props.setSelectedParticipants((oldParticipants) => {\n                              let filtered = oldParticipants.filter((elem) => {\n                                if (item.address === elem.address) {\n                                  return 0;\n                                } else {\n                                  return 1;\n                                }\n                              });\n                              filtered.push(item);\n                              return filtered;\n                            });\n                          }}\n                        >\n                          {isInParticipants(item) ? (\n                            <CheckOutlined />\n                          ) : (\n                            <PlusOutlined />\n                          )}\n                        </Button>\n                      </div>\n                    </List.Item>\n                  );\n                }}\n              />\n            </div>\n          </form>\n          <Modal\n            visible={!!groupModalVisible}\n            okText=\"Create\"\n            onOk={() => {\n              createGroupDiscussion();\n              setGroupModalVisible(false);\n            }}\n            onCancel={() => {\n              setGroupModalVisible(false);\n            }}\n          >\n            <div>\n              <List\n                locale={{\n                  emptyText: \"No Participants Added\",\n                }}\n                className=\"usersList\"\n                placeholder=\"\"\n                dataSource={props.selectedParticipants || undefined}\n                itemLayout=\"horizontal\"\n                renderItem={(item) => {\n                  return (\n                    <List.Item className=\"userSearchContainer\">\n                      <div className=\"group-chat-containerDv\">{item.alias}</div>\n                      Address:\n                      <div className=\"group-chat-containerDv-address\">\n                        {` ${item.address}`}\n                      </div>\n                      <Button\n                        onClick={() => {\n                          props.setSelectedParticipants((oldParticipants) => {\n                            let filtered = oldParticipants.filter((elem) => {\n                              if (item.address === elem.address) {\n                                return 0;\n                              } else {\n                                return 1;\n                              }\n                            });\n                            return filtered;\n                          });\n                        }}\n                      >\n                        <MinusOutlined />\n                      </Button>\n                    </List.Item>\n                  );\n                }}\n              />\n            </div>\n          </Modal>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default GroupChat;\n","import React, { useState } from \"react\";\n\nimport ChatHistory from \"./content-pages/chat-history\";\nimport UserSettings from \"./content-pages/user-settings\";\nimport UserFunds from \"./content-pages/user-funds\";\nimport SearchUsers from \"./content-pages/search-users\";\nimport Contacts from \"./content-pages/contacts\";\nimport Logo from \"./content-pages/logo\";\nimport Accounts from \"./accounts\";\nimport VersionScreen from \"./content-pages/version-error\";\nimport ConnectionScreen from \"./content-pages/connection-screen\";\nimport GroupChat from \"./content-pages/group-chat\";\n\nimport \"./contents.css\";\n/**\n * This component represents the main area of the application.\n * It returns the corresponding page based on props.selectedPage.\n *\n * @param {*} props The global variables.\n */\nconst Contents = (props) => {\n  // Variable to indicate if current discussion is the anonymous received messages discussion\n  const [\n    anonymousBucket,\n    setAnonymousBucket\n  ] = useState(false);\n\n  const contentsProps = {\n    anonymousBucket,\n    setAnonymousBucket,\n  };\n\n  /**\n   * This function returns the corresponding page for the currently selected page.\n   * The returned page is loaded in the body of this component.\n   */\n  const getContentPage = () => {\n    let page;\n    switch (props.selectedPage) {\n    case \"chatHistory\":\n      page = <ChatHistory {...props} {...contentsProps} />;\n      break;\n    case \"userSettings\":\n      page = <UserSettings {...props} />;\n      break;\n    case \"searchUsers\":\n      page = <SearchUsers {...props} />;\n      break;\n    case \"contacts\":\n      page = <Contacts {...props} />;\n      break;\n    case \"logo\":\n      page = <Logo {...props} />;\n      break;\n    case \"accounts\":\n      page = <Accounts {...props} />;\n      break;\n    case \"userFunds\":\n      page = <UserFunds {...props} />;\n      break;\n    case \"versionError\":\n      page = <VersionScreen {...props} />;\n      break;\n    case \"connectionScreen\":\n      page = <ConnectionScreen />;\n      break;\n    case \"groupChat\":\n      page = <GroupChat {...props} />;\n    }\n    return page;\n  };\n\n  /**\n   * The contents page JSX.\n   */\n  return (\n    <div\n      className=\"content-body\"\n      onClick={() => {\n        if (props.sideActivated === true) {\n          props.setSideActivated(false);\n        }\n      }}\n    >\n      {getContentPage()}\n    </div>\n  );\n};\n\nexport default Contents;\n","export default __webpack_public_path__ + \"static/media/arc-logo-short.95d27a0b.png\";","import React, { useState } from \"react\";\nimport { List, Button, Input, Radio, Menu, Dropdown, Modal } from \"antd\";\nimport {\n  SearchOutlined,\n  LoadingOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\n\nimport discussionClient from \"../services/discussionServices\";\n\nimport { version } from \"../config/version\";\nimport generateIdenticon from \"../utils/identicon.js\";\nimport { findUserByAddress } from \"../utils/users-utils.js\";\nimport arcLogo from \"../media/arc-logo-short.png\";\n\nimport { NotificationManager } from \"react-notifications\";\n\nimport theme from \"../style/theme\";\n\nimport {\n  concatUserAddresses,\n  concatUserNames,\n} from \"../utils/discussion-utils\";\n\nimport \"./side.css\";\n\nconst cryptoUtils = require(\"../utils/crypto-utils\");\n\n/**\n * This component represents the left side panel of the application.\n * It contains the user's info and options on the top left area, as\n * well as the discussions panel.\n * @param {*} props The global variables.\n */\nconst Side = (props) => {\n  // Discussion Filtering Variables\n  const [stringToSearch, SetStringToSearch] = useState(\"\");\n  const [selectedSearchOption, setSelectedSearchOption] = useState(\"Name\");\n  const [selectedSideDiscussion, setSelectedSideDiscussion] = useState();\n\n  const [deleteDiscussionModalActive, setDeleteDiscussionModalActive] =\n    useState(false);\n\n  /**\n   * Calculates if there exist unread messages in a given discussion.\n   * @param {*} item The discussion object.\n   * @returns The unread status.\n   */\n  const calculateUnreadStatus = (item) => {\n    return item.lastReadMsgId !== item.lastMsgId;\n  };\n\n  /**\n   * Calculates the number of discussions that contain unread messages in order to update the tab title.\n   */\n  const titleNotificationChecker = () => {\n    if (props.discussions) {\n      let messageCounter = 0;\n      const res = props.discussions.forEach((disc) => {\n        if (disc.lastMsgId !== disc.lastReadMsgId) {\n          messageCounter++;\n        }\n      });\n      if (messageCounter == 0) {\n        document.title = \"arc\";\n      } else {\n        document.title = `*(${messageCounter}) arc`;\n      }\n    }\n  };\n\n  /**\n   * Calculates the discussions that pass the currently selected filter options.\n   * @returns The discussions array.\n   */\n  const discussionsToShow = () => {\n    titleNotificationChecker();\n    if (props.discussions) {\n      const res = props.discussions\n        .filter((item) => {\n          let name = concatUserNames(props, item.participantsList);\n          let address = concatUserAddresses(props, item.participantsList);\n          if (selectedSearchOption === \"Name\") {\n            return name.toLowerCase().includes(stringToSearch.toLowerCase());\n          }\n          if (selectedSearchOption === \"Address\") {\n            return address.toLowerCase().includes(stringToSearch.toLowerCase());\n          }\n        })\n        .sort((a, b) => {\n          return a.lastMsgId > b.lastMsgId ? -1 : 1;\n        });\n      return res;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * The side panel JSX.\n   */\n  return (\n    <div\n      className={`sidePanel ${\n        props.sideSquashed\n          ? props.sideActivated\n            ? \"sidePanel-mobile\"\n            : \"\"\n          : \"\"\n      } `}\n    >\n      <Dropdown\n        trigger=\"hover\"\n        overlay={\n          <Menu>\n            <Menu.Item\n              onClick={() => {\n                props.setSelectedDiscussion();\n                props.setSelectedPage(\"userSettings\");\n                props.setSideActivated(false);\n              }}\n            >\n              Settings\n            </Menu.Item>\n            <Menu.Item\n              onClick={() => {\n                props.updateCurrentFunds();\n                props.setSelectedDiscussion();\n                props.setSelectedPage(\"userFunds\");\n                props.setSideActivated(false);\n              }}\n            >\n              Funds\n            </Menu.Item>\n            <Menu.Item\n              className=\"fullscreen\"\n              onClick={() => {\n                document.body.requestFullscreen();\n              }}\n            >\n              Go Fullscreen\n            </Menu.Item>\n            <Menu.Item\n              onClick={() => {\n                props.setFundsInitVisible(true);\n                props.setFundsInitDisabled(false);\n              }}\n            >\n              Show Welcome Dialog\n            </Menu.Item>\n            <Menu.Item\n              onClick={() => {\n                props.setLoadAccount(0);\n                window.localStorage.removeItem(\"url\");\n                window.localStorage.removeItem(\"httpUsername\");\n                window.localStorage.removeItem(\"httpPassword\", \"\");\n                window.location.reload(true);\n              }}\n            >\n              Disconnect\n            </Menu.Item>\n          </Menu>\n        }\n      >\n        <div\n          className=\"side-user-info\"\n          style={{\n            color: props.backendStatus ? \"white\" : \"gray\",\n          }}\n        >\n          <div className=\"side-user-info-icon\">\n            {props.backendStatus && props.selfInfo.address ? (\n              generateIdenticon(props.selfInfo.address, 60)\n            ) : (\n              <LoadingOutlined spin />\n            )}\n          </div>\n          <span className=\"side-user-info-name\">\n            <span\n              className=\"side-user-info-name-text\"\n              style={{\n                color: props.msgStreamActive ? \"inherit\" : \"gray\",\n              }}\n            >\n              {props.selfInfo ? props.selfInfo.alias : \"You\"}\n            </span>\n            <span className=\"side-user-info-name-navigationDots\">...</span>\n          </span>\n          <div id=\"currentFundsWrapper\" className=\"currentFundsWrapper\">\n            <span id=\"currentFundsWrapperChange\">\n              {cryptoUtils.parseLastFundChange(props)}\n            </span>\n            <span className=\"currentFundsWrapperChangeLogo\">\n              {props.selectedCryptoUnit && props.lastFundChange !== 0\n                ? props.selectedCryptoUnit\n                : \"\"}\n            </span>\n            <div className=\"currentFundsWrapperSatoshis\">\n              {` ${cryptoUtils.parseCurrentFunds(props)}`}\n            </div>\n            <span className=\"currentFundsWrapperSatoshisLogo\">\n              {props.selectedCryptoUnit ? props.selectedCryptoUnit : \"\"}\n            </span>\n            <div className=\"currentFundsWrapperEuro\">\n              {cryptoUtils.parseCurrentFiatAmount(props)}\n            </div>\n            <span className=\"currentFundsWrapperEuroLogo\">\n              {props.selectedFiatUnit}\n            </span>\n          </div>\n        </div>\n      </Dropdown>\n      <div className=\"side-buttons-wrapper\">\n        <Button\n          className=\"side-button-homePage\"\n          onClick={() => {\n            props.changePage(\"contacts\", \"hide\");\n          }}\n        >\n          <div className=\"side-button-homePage-c13nLogo-wrapper\">\n            <img src={arcLogo} className=\"side-button-homePage-c13nLogo\" />\n          </div>\n\n          <div className=\"side-button-homePage-text\">Home</div>\n        </Button>\n        <Button\n          className=\"side-button-searchUsers\"\n          onClick={() => {\n            props.changePage(\"searchUsers\", \"hide\");\n          }}\n        >\n          <div className=\"side-button-searchUsers-searchLogo-wrapper\">\n            {\" \"}\n            <SearchOutlined className=\"side-button-searchUsers-searchLogo\" />\n          </div>\n\n          <div className=\"side-button-searchUsers-text\">Search</div>\n        </Button>\n        <Button\n          className=\"side-button-groupChat\"\n          onClick={() => {\n            props.changePage(\"groupChat\", \"hide\");\n          }}\n        >\n          <div className=\"side-button-groupChat-groupsearchlogo-wrapper\">\n            <PlusOutlined className=\"side-button-groupChat-groupsearchlogo\" />\n          </div>\n          <div className=\"side-button-groupChat-text\">Group Discussion</div>\n        </Button>\n      </div>\n      <div\n        className=\"side-contacts-wrapper\"\n        style={{\n          backgroundColor: theme.menuDark,\n        }}\n      >\n        <List\n          className=\"discussionsList\"\n          style={{\n            scrollbarColor: `${theme.menuNormal} ${theme.menuDark}`,\n            // maxHeight: 'min(50vh, 750px)',\n          }}\n          locale={{\n            emptyText: \"No Discussions\",\n          }}\n          dataSource={discussionsToShow()}\n          itemLayout=\"horizontal\"\n          renderItem={(item) => {\n            const userLookup = findUserByAddress(\n              props,\n              item.participantsList[0]\n            );\n            return (\n              <List.Item\n                className=\"userContainer\"\n                style={{\n                  backgroundColor:\n                    props.selectedDiscussion === item ? theme.menuNormal : \"\",\n                }}\n              >\n                <div\n                  className=\"SideListItem\"\n                  onClick={() => {\n                    props.changePage(\"chatHistory\", \"hide\");\n                    props.setSelectedDiscussion(item);\n                  }}\n                >\n                  {item.participantsList.length > 1\n                    ? generateIdenticon(\n                      concatUserAddresses(props, [\n                        props.selfInfo.address,\n                        ...item.participantsList,\n                      ]),\n                      30\n                    )\n                    : generateIdenticon(\n                      concatUserAddresses(props, [item.participantsList]),\n                      30\n                    )}\n                </div>\n                <div\n                  className=\"sideContactUserWrapper\"\n                  onClick={() => {\n                    props.changePage(\"chatHistory\", \"hide\");\n                    props.setSelectedDiscussion(item);\n                  }}\n                >\n                  <b\n                    className=\"sideContactUserWrapperB\"\n                    style={{\n                      color: calculateUnreadStatus(item) ? \"cyan\" : \"inherit\",\n                    }}\n                  >\n                    {concatUserNames(props, item.participantsList).length > 0\n                      ? concatUserNames(props, item.participantsList)\n                      : \"Anonymous\"}\n                  </b>\n                  <br />\n                  <div className=\"sideContactUserWrapperDiv\">\n                    {item.participantsList.length == 1\n                      ? userLookup\n                        ? `${userLookup.address.substring(\n                          0,\n                          5\n                        )}...${userLookup.address.substring(61, 66)}`\n                        : \"\"\n                      : \"Group Discussion\"}\n                  </div>\n                </div>\n\n                <Dropdown\n                  trigger=\"click\"\n                  overlay={\n                    <Menu>\n                      <Menu.Item disabled>Rename</Menu.Item>\n                      <Menu.Item\n                        onClick={() => {\n                          setDeleteDiscussionModalActive(true);\n                        }}\n                      >\n                        Delete\n                      </Menu.Item>\n                    </Menu>\n                  }\n                >\n                  <div\n                    className=\"sideDropdown\"\n                    onClick={() => {\n                      setSelectedSideDiscussion(item);\n                    }}\n                  >\n                    <div>...</div>\n                  </div>\n                </Dropdown>\n              </List.Item>\n            );\n          }}\n        />\n        <div className=\"side-filter\">\n          <Input\n            placeholder=\"Filter...\"\n            className=\"side-input-filter\"\n            onChange={(e) => {\n              SetStringToSearch(e.target.value);\n            }}\n          />\n          <Radio.Group\n            onChange={(e) => {\n              setSelectedSearchOption(e.target.value);\n            }}\n            value={selectedSearchOption}\n            optionType=\"button\"\n            size=\"small\"\n          >\n            <Radio.Button value=\"Name\" className=\"side-input-filter\">\n              Name\n            </Radio.Button>\n            <Radio.Button value=\"Address\" className=\"side-input-filter\">\n              Address\n            </Radio.Button>\n          </Radio.Group>\n        </div>\n        <div className=\"side-input-version\">\n          {`Version ${version} | ${props.chainInfo?.chain} ${props.chainInfo?.network}`}\n        </div>\n      </div>\n      <Modal\n        visible={!!deleteDiscussionModalActive}\n        onOk={() => {\n          discussionClient().removeDiscussion(\n            {\n              id: selectedSideDiscussion.id,\n            },\n            (err, res) => {\n              if (err) {\n                NotificationManager.error(\"Failed to delete discussion\");\n                console.log(err);\n              }\n              if (res) {\n                NotificationManager.success(\"Deleted discussion\");\n                props.setSelectedPage(\"logo\");\n                props.setDiscussions((oldDiscussions) => {\n                  let res = oldDiscussions.filter((elem) => {\n                    return elem.id !== selectedSideDiscussion.id;\n                  });\n                  return res;\n                });\n              }\n            }\n          );\n          setDeleteDiscussionModalActive(false);\n        }}\n        onCancel={() => {\n          setDeleteDiscussionModalActive(false);\n        }}\n        okButtonProps={{ type: \"default\" }}\n      >\n        <h3>Delete discussion?</h3>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Side;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Button, Modal, Tabs, Slider, Input, Form, Divider, Select } from \"antd\";\n\nimport { splitURI } from \"../../utils/users-utils\";\n\nimport channelClient from \"../../services/channelServices\";\nimport nodeInfoClient from \"../../services/nodeInfoServices\";\n\nimport { NotificationManager } from \"react-notifications\";\nimport \"./funds-initialization.css\";\n\n/**\n * This component represents the modal responsible for showing the dialog to help you bootstrap your wallet and lightning channels.\n * @param {*} props The global variables.\n * @returns The Modal JSX.\n */\nconst FundsInitialization = (props) => {\n\n  const mainnetNodes = [\n    {\n      value: \"WalletOfSatoshi.com\",\n      address: \"035e4ff418fc8b5554c5d9eea66396c227bd429a3251c8cbc711002ba215bfc226\",\n      uri: \"035e4ff418fc8b5554c5d9eea66396c227bd429a3251c8cbc711002ba215bfc226@170.75.163.209:9735\"\n    },\n    {\n      value: \"ACINQ\",\n      address: \"03864ef025fde8fb587d989186ce6a4a186895ee44a926bfc370e2c366597a3f8f\",\n      uri: \"03864ef025fde8fb587d989186ce6a4a186895ee44a926bfc370e2c366597a3f8f@3.33.236.230:9735\"\n    },\n    {\n      value: \"LNBIG.com\",\n      address: \"034ea80f8b148c750463546bd999bf7321a0e6dfc60aaf84bd0400a2e8d376c0d5\",\n      uri: \"034ea80f8b148c750463546bd999bf7321a0e6dfc60aaf84bd0400a2e8d376c0d5@46.229.165.151:9735\"\n    },\n    {\n      value: \"CoinGate\",\n      address: \"0242a4ae0c5bef18048fbecf995094b74bfb0f7391418d71ed394784373f41e4f3\",\n      uri: \"0242a4ae0c5bef18048fbecf995094b74bfb0f7391418d71ed394784373f41e4f3@3.124.63.44:9735\"\n    },\n    {\n      value: \"Boltz\",\n      address: \"026165850492521f4ac8abd9bd8088123446d126f648ca35e60f88177dc149ceb2\",\n      uri: \"026165850492521f4ac8abd9bd8088123446d126f648ca35e60f88177dc149ceb2@104.196.200.39:9735\"\n    }\n  ];\n\n  const testnetNodes = [\n    {\n      value: \"aranguren.org\",\n      address: \"038863cf8ab91046230f561cd5b386cbff8309fa02e3f0c3ed161a3aeb64a643b9\",\n      uri: \"038863cf8ab91046230f561cd5b386cbff8309fa02e3f0c3ed161a3aeb64a643b9@203.132.94.196:9735\"\n    },\n    {\n      value: \"Coingate\",\n      address: \"0277622bf4c497475960bf91bd3c673a4cb4e9b589cebfde9700c197b3989cc1b8\",\n      uri: \"0277622bf4c497475960bf91bd3c673a4cb4e9b589cebfde9700c197b3989cc1b8@35.158.243.90:9735\"\n    }\n  ];\n\n  const defaultAmount = 50000;\n  const defaultPushAmount = Math.floor(50000 * 0.03);\n  const minChannelAmount = 20000;\n\n  const [key, setKey] = useState(\"1\");\n  const [loading, setLoading] = useState(false);\n\n  const [mode, setMode] = useState(\"auto\");\n  const [lightningAddress, setLightningAddress] = useState(\"\");\n  const [amount, setAmount] = useState(defaultAmount);\n  const [pushAmount, setPushAmount] = useState(defaultPushAmount);\n  const [minimumInputConfirmations, setMinimumInputConfirmations] = useState(1);\n  const [targetConfirmationBlocks, setTargetConfirmationBlocks] = useState(3);\n\n  /**\n   * Dynamically updates the push amount depending on current selected channel amount.\n   */\n  useEffect(() => {\n    setPushAmount(Math.floor(amount * 0.03));\n  }, [amount]);\n\n  /**\n   * Returns the address for channel openning depending on user selected options on the modal.\n   * @returns The string representing the address.\n   */\n  const getAddress = () => {\n    switch (mode) {\n    case \"auto\":\n      return props.chainInfo?.network === \"testnet\" ? lightningAddress : lightningAddress;\n    case \"basic\":\n      return lightningAddress;\n    case \"advanced\":\n      return lightningAddress;\n    }\n  };\n\n  /**\n   * Opens a channel with selected address and options.\n   * @param {*} address The address to open a channel with.\n   */\n  const openChannel = (address) => {\n    console.log(\"Openning channel to\", address, \", with selected amount \", amount);\n    const amtMsat = amount * 1000;\n    const pushAmtMsat = pushAmount * 1000;\n    channelClient().openChannel(\n      {\n        address: address,\n        amtMsat: amtMsat,\n        pushAmtMsat: pushAmtMsat,\n        minInputConfs: minimumInputConfirmations,\n        targetConfirmationBlocks: targetConfirmationBlocks,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n          setLoading(false);\n          NotificationManager.error(err.message);\n        }\n        if (res) {\n          console.log(res);\n          setLightningAddress(\"\");\n          setAmount(defaultAmount);\n          setPushAmount(defaultPushAmount);\n          setMinimumInputConfirmations(1);\n          setTargetConfirmationBlocks(3);\n          props.setVisible(false);\n          setLoading(false);\n          NotificationManager.success(\"Channel pending to open\");\n        }\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Modal\n        title=\"Welcome to arc\"\n        visible={props.visible}\n        okText={key === \"1\" ? \"Next\" : \"Open Channel\"}\n        cancelText={\"Don't show again\"}\n        onCancel={() => {\n          props.setVisible(false);\n        }}\n        cancelButtonProps={{\n          onClick: () => {\n            props.setDisabled(true);\n            props.setVisible(false);\n          },\n        }}\n        okButtonProps={{\n          disabled: loading,\n        }}\n        onOk={() => {\n          if (key === \"1\") {\n            setKey(\"2\");\n          } else {\n            setLoading(true);\n            const addr = getAddress();\n            const split = splitURI(addr);\n            const address = split.address;\n            const hostport = split.hostport;\n            console.log(\"Connecting to peer \", address, \":\", hostport);\n            nodeInfoClient().connectNode(\n              {\n                address: address,\n                hostport: hostport,\n              },\n              (err, res) => {\n                if (err) {\n                  console.log(err);\n                  NotificationManager.error(err.message);\n                  setLoading(false);\n                }\n                if (res) {\n                  console.log(res);\n                  NotificationManager.success(\"Connected to peer\");\n                  openChannel(address);\n                }\n              }\n            );\n          }\n        }}\n      >\n        <Tabs\n          key={key}\n          defaultActiveKey={key}\n          onChange={(e) => {\n            setKey(e);\n          }}\n        >\n          <Tabs.TabPane tab=\"Buy Bitcoin\" key=\"1\">\n            Before anything else, you must add some bitcoin to your wallet.\n            <br />\n            <br />\n            <b>Step 1: Generate a receiving address</b>\n            <br />\n            Login to your{\" \"} wallet, go to the <b>On-chain</b> section and generate a wallet address.\n            <br />\n            <br />\n            <b>Step 2: Get some bitcoin.</b>\n            <br />\n            You can use the generated address to receive money from the bitcoin network.\n            If you want to buy bitcoin, use your address in one of the following services.\n            <br />\n            {props.chainInfo?.network === \"mainnet\" ? (\n              <span>\n                <a href=\"https://buy.moonpay.com\" target=\"_blank\">\n                  MoonPay\n                </a>\n                <br />\n                <a href=\"https://www.kraken.com\" target=\"_blank\">\n                  Kraken\n                </a>\n              </span>\n            ) : (\n              <span>\n                <a href=\"https://testnet-faucet.mempool.co/\" target=\"_blank\">\n                  Mempool Faucet\n                </a>\n                <br />\n                <a href=\"https://bitcoinfaucet.uo1.net/\" target=\"_blank\">\n                  Uo1 Faucet\n                </a>\n              </span>\n            )}\n            <br />\n            <br />\n            You will see the funds almost immediately but you will be able to\n            use them after 10-30 minutes.\n          </Tabs.TabPane>\n\n          <Tabs.TabPane tab=\"Open Channel\" key=\"2\">\n            To enable instant messages and low-fee transactions you need to use\n            some of your funds to open a <b>Lightning Payment Channel</b>.\n            <br />\n            <br />\n            It is implemented using multi-signature Bitcoin\n            transactions that share control over the commited bitcoin between\n            you and that node. This relationship offers everyone security and\n            privacy for both messages and payments.\n            <br />\n            <br />\n            The funds dedicated to a channel still belong to you and you are\n            able to spend them instantly and with very low fees.\n            <br />\n            <br />\n            <Button\n              type=\"secondary\"\n              className=\"funds-initialization-btn\"\n              style={{\n                borderBottom:\n                  mode === \"auto\" ? \"1px solid white\" : \"1px solid gray\",\n                fontWeight: mode === \"auto\" ? \"bold\" : \"normal\",\n              }}\n              onClick={() => {\n                setMode(\"auto\");\n              }}\n            >\n              Connect to famous node\n            </Button>\n            <Button\n              type=\"secondary\"\n              className=\"funds-initialization-btn\"\n              style={{\n                borderBottom:\n                  mode !== \"auto\" ? \"1px solid white\" : \"1px solid gray\",\n                fontWeight: mode !== \"auto\" ? \"bold\" : \"normal\",\n              }}\n              onClick={() => {\n                setMode(\"basic\");\n              }}\n            >\n              Connect manually\n            </Button>\n            <Tabs\n              style={{\n                display:\n                  key === \"2\" ? (mode !== \"auto\" ? \"inherit\" : \"none\") : \"none\",\n              }}\n              defaultActiveKey=\"1\"\n              onChange={(e) => {\n                switch (e) {\n                case \"1\":\n                  setMode(\"basic\");\n                  break;\n                case \"2\":\n                  setMode(\"advanced\");\n                  break;\n                }\n              }}\n            >\n              <Tabs.TabPane key=\"1\" tab=\"Basic\" />\n              <Tabs.TabPane key=\"2\" tab=\"Advanced\" />\n            </Tabs>\n            <Form\n              style={{\n                display: key === \"2\" ? \"inherit\" : \"none\",\n              }}\n              layout=\"vertical\"\n            >\n              <Form.Item\n                style={{\n                  display: mode !== \"auto\" ? \"inherit\" : \"none\",\n                }}\n              >\n                <div className=\"funds-initialization-info\">\n                  <Divider\n                    className=\"funds-initialization-info-divider\"\n                    orientation=\"left\"\n                  >\n                    Node URI\n                  </Divider>\n                  <Input\n                    className=\"funds-initialization-info-input\"\n                    value={lightningAddress}\n                    onChange={(e) => {\n                      setLightningAddress(e.target.value);\n                    }}\n                    className=\"funds-initialization-info-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item\n                style={{\n                  display: (mode == \"auto\") ? \"inherit\" : \"none\",\n                }}\n              >\n                <div className=\"funds-initialization-info\">\n                  <Divider\n                    className=\"funds-initialization-info-divider\"\n                    orientation=\"left\"\n                  >\n                    Node\n                  </Divider>\n                  <Select\n                    options={props.chainInfo?.network === \"testnet\" ? testnetNodes : mainnetNodes }\n                    onChange={(value) => {\n                      let node;\n                      switch(props.chainInfo?.network){\n                      case \"testnet\":\n                        node = testnetNodes.find((e) => e.value == value);\n                        setLightningAddress(node.uri);\n                        break;\n                      case \"mainnet\":\n                        node = mainnetNodes.find((e) => e.value == value);\n                        setLightningAddress(node.uri);\n                        break;\n                      }\n                    }}\n                  />\n                </div>\n              </Form.Item>\n\n              <Form.Item>\n                <div className=\"funds-initialization-amount\">\n                  <Divider\n                    className=\"funds-initialization-amount-divider\"\n                    orientation=\"left\"\n                  >\n                    Amount (sat)\n                  </Divider>\n                  <span\n                    style={{\n                      display: props.balance?.walletConfirmedSat\n                        ? props.balance?.walletConfirmedSat < minChannelAmount\n                          ? \"inherit\"\n                          : \"none\"\n                        : \"none\",\n                      color: \"red\",\n                      fontSize: \"13px\"\n                    }}\n                  >\n                    Not enough funds, minimum required 20000sat, you have {props.balance?.walletConfirmedSat}sat on-chain\n                  </span>\n                  <Slider\n                    className=\"funds-initialization-amount-slider\"\n                    min={minChannelAmount}\n                    max={props.balance?.walletConfirmedSat}\n                    defaultValue={defaultAmount}\n                    onChange={(e) => {\n                      setAmount(e);\n                    }}\n                  />\n                  <Input\n                    value={amount}\n                    onChange={(e) => {\n                      setAmount(parseFloat(e.target.value));\n                    }}\n                    className=\"funds-initialization-amount-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item\n                style={{\n                  display: mode === \"advanced\" ? \"inherit\" : \"none\",\n                }}\n              >\n                <div className=\"funds-initialization-info\">\n                  <Divider\n                    className=\"funds-initialization-info-divider\"\n                    orientation=\"left\"\n                  >\n                    Push Amount (sat)\n                  </Divider>\n                  <Input\n                    value={pushAmount.toString()}\n                    onChange={(e) => {\n                      setPushAmount(parseFloat(e.target.value));\n                    }}\n                    className=\"funds-initialization-info-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item\n                style={{\n                  display: mode === \"advanced\" ? \"inherit\" : \"none\",\n                }}\n              >\n                <div className=\"funds-initialization-info\">\n                  <Divider\n                    className=\"funds-initialization-info-divider\"\n                    orientation=\"left\"\n                  >\n                    Minimum Input Confirmations\n                  </Divider>\n                  <Input\n                    value={minimumInputConfirmations.toString()}\n                    onChange={(e) => {\n                      setMinimumInputConfirmations(parseFloat(e.target.value));\n                    }}\n                    className=\"funds-initialization-info-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item\n                style={{\n                  display: mode === \"advanced\" ? \"inherit\" : \"none\",\n                }}\n              >\n                <div className=\"funds-initialization-info\">\n                  <Divider\n                    className=\"funds-initialization-info-divider\"\n                    orientation=\"left\"\n                  >\n                    Target Confirmation Blocks\n                  </Divider>\n                  <Input\n                    value={targetConfirmationBlocks.toString()}\n                    onChange={(e) => {\n                      setTargetConfirmationBlocks(parseFloat(e.target.value));\n                    }}\n                    className=\"funds-initialization-info-input\"\n                  />\n                </div>\n              </Form.Item>\n            </Form>\n          </Tabs.TabPane>\n        </Tabs>\n        <span\n          className=\"funds-initialization-suggested\"\n          style={{\n            display: mode === \"advanced\" ? \"inline\" : \"none\",\n          }}\n        >\n          (suggested)\n        </span>\n      </Modal>\n    </div>\n  );\n};\n\nexport default FundsInitialization;\n","const https = require('https');\n\nconst getExchangeRates = (setExchangeRates) => {\n  let data = '';\n  https.get('https://api.coinbase.com/v2/exchange-rates?currency=BTC', (resp) => {\n    resp.on('data', (chunk) => {\n      data += chunk;\n    });\n    resp.on('end', () => {\n      let res = JSON.parse(data);\n      setExchangeRates(res.data.rates);\n    });\n  }).on('error', (err) => {\n    console.error(err);\n  });\n};\n\nexport default getExchangeRates;\n","export default __webpack_public_path__ + \"static/media/notification.1187a1b6.mp3\";","import React, { useState, useEffect } from \"react\";\nimport {\n  NotificationManager,\n  NotificationContainer,\n} from \"react-notifications\";\nimport WindowSizeListener from \"react-window-size-listener\";\n\nimport Contents from \"./contents\";\nimport Side from \"./side\";\nimport FundsInitialization from \"./content-pages/funds-initialization\";\n\nimport contactClient from \"../services/contactServices\";\nimport discussionClient from \"../services/discussionServices\";\nimport nodeInfoClient from \"../services/nodeInfoServices\";\nimport messageClient from \"../services/messageServices\";\n\nimport getExchangeRates from \"../utils/fiat-rates\";\nimport sleep from \"../utils/system\";\nimport { addToAccounts, loadAccounts } from \"../utils/accounts-utils\";\nimport {\n  loadAutomaticImageLoadingSetting,\n  loadSmoothAnimationsSetting,\n  loadSelectedCryptoUnit,\n  loadSelectedFiatUnit,\n  loadChatIdenticonsSetting,\n  loadChatLayoutSetting,\n  loadMyMessageColor,\n  loadOtherMessageColor,\n  loadDeveloperLogsSetting,\n} from \"../utils/settings\";\n\nimport { appendToChatHistory } from \"../utils/discussion-utils\";\n\nimport arcLogo from \"../media/arc-logo.png\";\nimport notificationAudio from \"../media/notification.mp3\";\n\nimport { concatUserNames } from \"../utils/discussion-utils\";\nimport channelClient from \"../services/channelServices\";\nimport \"./main.css\";\n\nconst { GetDiscussionsResponse } = require(\"../rpc/rpc_pb\");\nconst { SubscribeMessageResponse } = require(\"../rpc/rpc_pb\");\n\nconst cryptoUtils = require(\"../utils/crypto-utils\");\n\n/**\n * Root component of the application. Must be nested inside a notification\n * manager wrapper for notifications to work.\n */\n\nconst Main = () => {\n  // Connection Variables\n  const [initialConnection, setInitialConnection] = useState(true);\n  const [backendStatus, setBackendStatus] = useState(false);\n  const [msgRxUp, setMsgRxUp] = useState(0);\n  const [msgStreamActive, setMsgStreamActive] = useState(false);\n  const [backendVersion, setBackendVersion] = useState(\"\");\n\n  // Node Variables\n  const [selfInfo, setSelfInfo] = useState();\n  const [chainInfo, setChainInfo] = useState();\n  const [contacts, setContacts] = useState();\n  const [users, setUsers] = useState([]);\n  const [currentFunds, setCurrentFunds] = useState(-1);\n  const [lastFundChange, setLastFundChange] = useState(0);\n\n  // Discussion Variables\n  const [discussions, setDiscussions] = useState([]);\n  const [selectedDiscussion, setSelectedDiscussion] = useState();\n  const [chatHistory, setChatHistory] = useState([]);\n  const [selectedParticipants, setSelectedParticipants] = useState([]);\n\n  // Account Variables\n  const [accounts, setAccounts] = useState([]);\n  const [loadAccount, setLoadAccount] = useState(0);\n\n  // View Variables\n  const [selectedPage, setSelectedPage] = useState(\"accounts\");\n  const [sideSquashed, setSideSquashed] = useState(false);\n  const [sideActivated, setSideActivated] = useState(false);\n\n  // Settings Variables\n  const [automaticImageLoading, setAutomaticImageLoading] = useState(false);\n  const [smoothAnimations, setSmoothAnimations] = useState(false);\n  const [selectedCryptoUnit, setSelectedCryptoUnit] = useState();\n  const [selectedFiatUnit, setSelectedFiatUnit] = useState();\n  const [chatLayout, setChatLayout] = useState();\n  const [chatIdenticons, setChatIdenticons] = useState();\n  const [myMessageColor, setMyMessageColor] = useState();\n  const [otherMessageColor, setOtherMessageColor] = useState();\n  const [developerLogs, setDeveloperLogs] = useState();\n\n  // Crypto Variables\n  const [exchangeRates, setExchangeRates] = useState();\n\n  // Funds Initialization Variables\n  const [fundsInitVisible, setFundsInitVisible] = useState(false);\n  const [fundsInitDisabled, setFundsInitDisabled] = useState(false);\n  const [balance, setBalance] = useState();\n\n  /**\n   * This function loads the static data of the currently active account.\n   */\n  const fetchAccountData = () => {\n    fetchUsers();\n    fetchContacts();\n    fetchDiscussions();\n  };\n\n  /**\n   * Loads the application settings from local storage.\n   */\n  const loadSettings = () => {\n    loadAutomaticImageLoadingSetting(setAutomaticImageLoading);\n    loadSmoothAnimationsSetting(setSmoothAnimations);\n    loadSelectedCryptoUnit(setSelectedCryptoUnit);\n    loadSelectedFiatUnit(setSelectedFiatUnit);\n    loadChatIdenticonsSetting(setChatIdenticons);\n    loadChatLayoutSetting(setChatLayout);\n    loadMyMessageColor(setMyMessageColor);\n    loadOtherMessageColor(setOtherMessageColor);\n    loadDeveloperLogsSetting(setDeveloperLogs);\n  };\n\n  /**\n   * Changes the active contents page.\n   * @param {*} pageName Name of the page.\n   * @param {*} sideMenuAction Side bar behavior (if set to 'hide' it will automatically close the side bar on the mobile view).\n   */\n  const changePage = (pageName, sideMenuAction) => {\n    setSelectedDiscussion();\n    setSelectedPage(pageName);\n    if (sideMenuAction === \"hide\") {\n      setSideActivated(false);\n    }\n  };\n\n  /**\n   * Calculates if the welcome dialog for funds initialization should be displayed.\n   */\n  const calculateFundsInitialization = () => {\n    let modalDisabled;\n    setFundsInitDisabled((oldValue) => {\n      modalDisabled = oldValue;\n      return oldValue;\n    });\n    nodeInfoClient().getSelfBalance({}, (err, res) => {\n      if (err) {\n        console.log(err);\n      }\n      if (res) {\n        setBalance(res);\n        const channelZero =\n          res.channelLocalMsat === 0 && res.pendingOpenLocalMsat === 0;\n        if (channelZero && !modalDisabled) {\n          setFundsInitVisible(true);\n        }\n      }\n    });\n  };\n\n  /**\n   * Updates current funds and triggers the balance change indicator.\n   */\n  const updateCurrentFunds = () => {\n    nodeInfoClient().getSelfBalance({}, (err, res) => {\n      if (err) {\n        console.log(err);\n      }\n      if (res) {\n        if (res.channelLocalMsat) {\n          const newAmount = Math.floor(res.channelLocalMsat / 1000);\n          let oldAmount = currentFunds;\n          setCurrentFunds((oldFunds) => {\n            oldAmount = oldFunds;\n            return newAmount;\n          });\n          let fundColor;\n          if (oldAmount === -1) {\n            fundColor = \"white\";\n          } else if (newAmount > oldAmount) {\n            fundColor = \"#00FF00\";\n          } else if (newAmount < oldAmount) {\n            fundColor = \"#FF0000\";\n          } else if (newAmount === oldAmount) {\n            fundColor = \"white\";\n          }\n          let fundsWrapper = document.getElementById(\"currentFundsWrapper\");\n          setTimeout(function () {\n            fundsWrapper.style.transition = \"0s\";\n            fundsWrapper.style.color = fundColor;\n          }, 1);\n          setTimeout(function () {\n            fundsWrapper.style.transition = smoothAnimations ? \"0.4s\" : \"0s\";\n            fundsWrapper.style.color = \"white\";\n          }, 200);\n          setTimeout(function () {\n            setLastFundChange(0);\n          }, 4000);\n        }\n      }\n    });\n  };\n\n  const mainProps = {\n    users,\n    setUsers,\n    selfInfo,\n    setSelfInfo,\n    selectedDiscussion,\n    setSelectedDiscussion,\n    contacts,\n    setContacts,\n    chatHistory,\n    setChatHistory,\n    selectedPage,\n    setSelectedPage,\n    backendStatus,\n    setBackendStatus,\n    discussions,\n    setDiscussions,\n    accounts,\n    setAccounts,\n    fetchAccountData,\n    loadAccount,\n    setLoadAccount,\n    sideSquashed,\n    setSideSquashed,\n    sideActivated,\n    setSideActivated,\n    automaticImageLoading,\n    setAutomaticImageLoading,\n    currentFunds,\n    updateCurrentFunds,\n    lastFundChange,\n    setLastFundChange,\n    smoothAnimations,\n    setSmoothAnimations,\n    selectedCryptoUnit,\n    setSelectedCryptoUnit,\n    selectedFiatUnit,\n    setSelectedFiatUnit,\n    exchangeRates,\n    backendVersion,\n    setBackendVersion,\n    chatLayout,\n    setChatLayout,\n    chatIdenticons,\n    setChatIdenticons,\n    myMessageColor,\n    setMyMessageColor,\n    otherMessageColor,\n    setOtherMessageColor,\n    selectedParticipants,\n    setSelectedParticipants,\n    msgStreamActive,\n    developerLogs,\n    setDeveloperLogs,\n    changePage,\n    chainInfo,\n    balance,\n    setFundsInitVisible,\n    setFundsInitDisabled,\n  };\n\n  /**\n   * This function runs asynchronously and checks for backend connection status based on fixed interval.\n   */\n  async function upStatusChecker() {\n    while (true) {\n      let deadline = new Date();\n      deadline.setSeconds(deadline.getSeconds() + 4);\n      nodeInfoClient().getSelfInfo(\n        {},\n        { deadline: deadline.getTime() },\n        (err, res) => {\n          if (err) {\n            console.log(err);\n            setBackendStatus(false);\n            NotificationManager.error(\"Server unreachable\");\n          }\n          if (res) {\n            let initial = true;\n            setInitialConnection((old) => {\n              initial = old;\n              return old;\n            });\n            let oldStatus = true;\n            setBackendStatus((old) => {\n              oldStatus = old;\n              return old;\n            });\n            if (initial) {\n              setChainInfo(res.chainsList[0]);\n              setSelfInfo(res.info);\n              addToAccounts(mainProps, {\n                url: localStorage.getItem(\"url\"),\n                username: localStorage.getItem(\"httpUsername\"),\n                address: res.info.address,\n                lastActive: Date.now(),\n              });\n              setBackendStatus(true);\n            } else {\n              if (oldStatus === false) {\n                window.location.reload(true);\n              }\n            }\n            setInitialConnection(false);\n          }\n        }\n      );\n      calculateFundsInitialization();\n      await sleep(8000);\n    }\n  }\n\n  /**\n   * This function fetches the users from backend.\n   */\n  const fetchUsers = () => {\n    console.log(\"Fetching Nodes...\");\n    nodeInfoClient().getNodes({}, (err, res) => {\n      if (err) {\n        console.log(err);\n        NotificationManager.error(\"Failed to fetch network\");\n      }\n      if (res) {\n        setUsers(res.nodesList);\n      }\n      console.log(\"Done Fetching Nodes...\");\n    });\n  };\n\n  /**\n   * This function fetches the contacts from backend.\n   */\n  const fetchContacts = () => {\n    contactClient().getContacts({}, (err, res) => {\n      if (err) {\n        console.log(err);\n        NotificationManager.error(\"Failed to fetch contacts\");\n      }\n      if (res) {\n        const parsedContacts = res.contactsList.map((item) => {\n          return {\n            user: item.node,\n            id: item.id,\n            displayName: item.displayName,\n          };\n        });\n        setContacts(parsedContacts);\n      }\n    });\n  };\n\n  /**\n   * This function fetches the discussions from the backend.\n   */\n  async function fetchDiscussions() {\n    let discussionsArray = [];\n    await discussionClient()\n      .getDiscussions({})\n      .on(\"data\", (res) => {\n        discussionsArray.push(\n          GetDiscussionsResponse.toObject(true, res).discussion\n        );\n      })\n      .on(\"end\", () => {\n        console.log(\"Got Discussions:\", discussionsArray);\n        setDiscussions(discussionsArray);\n      })\n      .on(\"error\", (e) => {\n        console.log(\"err\", e);\n      })\n      .on(\"status\", () => {});\n  }\n\n  const initializeExchangeRates = async () => {\n    getExchangeRates(setExchangeRates);\n  };\n\n  /**\n   * This function sets up the async functions that require a selected account.\n   */\n  useEffect(() => {\n    if (loadAccount !== 0) {\n      upStatusChecker();\n      loadSettings();\n      updateCurrentFunds();\n      initializeExchangeRates();\n      setInterval(() => {\n        getExchangeRates(setExchangeRates);\n      }, 300000);\n    }\n  }, [loadAccount]);\n\n  /**\n   * This function is called once when component loads.\n   * It loads the saved accounts from local storage to feed them to accounts page.\n   */\n  useEffect(() => {\n    loadAccounts(mainProps);\n    if (window.innerWidth < 520) {\n      setSideSquashed(true);\n    }\n  }, []);\n\n  /**\n   * Initializes account data and activates message subscription stream when backend status is active.\n   */\n  useEffect(() => {\n    if (backendStatus == true && loadAccount == 1) {\n      fetchAccountData();\n      setMsgRxUp(true);\n    }\n  }, [backendStatus]);\n\n  /**\n   * This function sets up an RX stream to listen for incoming messages.\n   * It is triggered by changes on variable 'msgRxUp', when it is false, it sets up\n   * the stream and switches it to true.\n   */\n  useEffect(async () => {\n    let streamValue;\n    await setMsgStreamActive((oldValue) => {\n      streamValue = oldValue;\n      return oldValue;\n    });\n    if (!streamValue && loadAccount == 1) {\n      console.log(\"Subscribing to messages...\");\n      let startTime = new Date();\n      let deadline = new Date();\n      deadline.setHours(deadline.getHours() + 2400);\n      await sleep(1000);\n      setMsgStreamActive(true);\n      messageClient()\n        .subscribeMessages({}, { deadline: deadline.getTime() })\n        .on(\"data\", (resp) => {\n          try {\n            const res = SubscribeMessageResponse.toObject(resp, resp);\n            setUsers((oldUsers) => {\n              mainProps[\"users\"] = oldUsers;\n              return oldUsers;\n            });\n            updateCurrentFunds();\n            setLastFundChange(`+${Number(res.receivedMessage.amtMsat / 1000)}`);\n            let curPage;\n            setSelectedPage((oldPage) => {\n              curPage = oldPage;\n              return oldPage;\n            });\n            if (curPage !== \"accounts\") {\n              console.log(\"Received: \", res);\n              let alias;\n              let discussion;\n\n              // Attempt to find what discussion the received message is part of\n              setDiscussions((oldDiscussions) => {\n                discussion = oldDiscussions.find((elem) => {\n                  return elem.id === res.receivedMessage.discussionId;\n                });\n                if (discussion === undefined) {\n                  fetchDiscussions();\n                }\n                return oldDiscussions;\n              });\n\n              // Look up the user who sent the message\n              setUsers((oldUsers) => {\n                let aliasLookup = oldUsers.find((elem) => {\n                  return elem.address === res.receivedMessage.sender;\n                });\n                if (aliasLookup) {\n                  alias = aliasLookup.alias;\n                } else {\n                  alias = \"Unknown\";\n                }\n                return oldUsers;\n              });\n\n              let directlyToRoom = false;\n\n              setSelectedDiscussion((oldSelectedDiscussion) => {\n                if (oldSelectedDiscussion) {\n                  if (\n                    oldSelectedDiscussion.id ===\n                    res.receivedMessage.discussionId\n                  ) {\n                    directlyToRoom = true;\n                  }\n                }\n                return oldSelectedDiscussion;\n              });\n\n              if (directlyToRoom) {\n                appendToChatHistory(mainProps, res.receivedMessage);\n              }\n\n              if (!document.hasFocus()) {\n                let audio = new Audio(notificationAudio);\n                audio.play();\n                let message = {};\n                try {\n                  message = JSON.parse(res.receivedMessage.payload);\n                } catch (e) {\n                  message.content = res.receivedMessage.payload;\n                }\n                new Notification(\n                  `${\n                    concatUserNames(mainProps, [res.receivedMessage.sender]) ||\n                    \"Unknown\"\n                  }: ${\n                    !message.content\n                      ? `Sent you ${cryptoUtils.msatToCurrentCryptoUnit(\n                        mainProps,\n                        res.receivedMessage.amtMsat\n                      )}${selectedCryptoUnit}`\n                      : message.content.length < 30\n                        ? message.content\n                        : message.content.substring(0, 25) + \"...\"\n                  }`,\n                  {\n                    icon: arcLogo,\n                  }\n                );\n              }\n\n              if (discussion) {\n                discussion.lastMsgId = res.receivedMessage.id;\n                if (!directlyToRoom) {\n                  NotificationManager.info(\n                    `${\n                      res.receivedMessage.payload === \"\"\n                        ? `Sent you ${cryptoUtils.msatToCurrentCryptoUnit(\n                          mainProps,\n                          res.receivedMessage.amtMsat\n                        )}${selectedCryptoUnit}`\n                        : res.receivedMessage.payload.length < 20\n                          ? res.receivedMessage.payload\n                          : res.receivedMessage.payload.substring(0, 15) + \"...\"\n                    }`,\n                    `${alias || \"Unknown\"}:`,\n                    4000,\n                    () => {\n                      setSelectedPage(\"chatHistory\");\n                      setSelectedDiscussion(discussion);\n                    }\n                  );\n                }\n              } else {\n                NotificationManager.info(\"\", \"New Discussion!\", 4000);\n              }\n            }\n          } catch (err) {\n            console.log(\"MessageSub err: \", err);\n          }\n        })\n        .on(\"end\", () => {\n          console.log(\"MsgRx Stopped\");\n          console.log(\"MsgRxUp: \", msgRxUp);\n        })\n        .on(\"error\", (e) => {\n          setMsgStreamActive(false);\n          setMsgRxUp(Date.now());\n          console.log(\n            \"Stream was active for: \",\n            new Date().getTime() - startTime.getTime()\n          );\n          console.log(\"Stopping Async Rx Function\");\n          console.log(\"err\", e);\n        })\n        .on(\"status\", (e) => {\n          console.log(\"Subscription status\");\n        });\n    }\n  }, [msgRxUp]);\n\n  // This funciton is used in order to test that the notifications are working as expected.\n  const showTestNotification = () => {\n    NotificationManager.success(\"copied\", \"\", 1000);\n  };\n\n  /**\n   * The main page JSX.\n   */\n  return (\n    <>\n      <div\n        className=\"main-page\"\n        onClick={\n          !(\"Notification\" in window)\n            ? console.log(\"This browser does not support notifications.\")\n            : () => {\n              Notification.requestPermission();\n            }\n        }\n      >\n        <NotificationContainer\n          enterTimeout={smoothAnimations ? 200 : 0}\n          leaveTimeout={smoothAnimations ? 200 : 0}\n        />\n        <WindowSizeListener\n          onResize={(size) => {\n            let width = size.windowWidth;\n            if (selectedPage === \"chatHistory\") {\n              let element = document.getElementById(\"chatHistoryListId\");\n              if (element) {\n                element.scroll({\n                  top: element.scrollHeight,\n                  behavior: smoothAnimations ? \"smooth\" : \"auto\",\n                });\n              }\n            }\n            if (width < 620) {\n              setSideSquashed(true);\n            } else {\n              setSideSquashed(false);\n              setSideActivated(false);\n            }\n          }}\n        >\n          <Side {...mainProps} />\n          <Contents {...mainProps} />\n        </WindowSizeListener>\n        <FundsInitialization\n          {...mainProps}\n          visible={fundsInitVisible}\n          setVisible={setFundsInitVisible}\n          balance={balance}\n          setDisabled={setFundsInitDisabled}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Main;\n","import Main from \"./components/main\";\n\nfunction App() {\n  return (\n    <>\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./style/index.css\";\nimport \"../node_modules/react-notifications/dist/react-notifications.css\";\nimport \"../node_modules/antd/dist/antd.dark.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');\nvar validator_pb = require('./validator_pb.js');\ngoog.exportSymbol('proto.services.AddContactRequest', null, global);\ngoog.exportSymbol('proto.services.AddContactResponse', null, global);\ngoog.exportSymbol('proto.services.AddDiscussionRequest', null, global);\ngoog.exportSymbol('proto.services.AddDiscussionResponse', null, global);\ngoog.exportSymbol('proto.services.Chain', null, global);\ngoog.exportSymbol('proto.services.ConnectNodeRequest', null, global);\ngoog.exportSymbol('proto.services.ConnectNodeResponse', null, global);\ngoog.exportSymbol('proto.services.ContactInfo', null, global);\ngoog.exportSymbol('proto.services.DiscussionInfo', null, global);\ngoog.exportSymbol('proto.services.DiscussionOptions', null, global);\ngoog.exportSymbol('proto.services.EstimateMessageRequest', null, global);\ngoog.exportSymbol('proto.services.EstimateMessageResponse', null, global);\ngoog.exportSymbol('proto.services.GetContactsRequest', null, global);\ngoog.exportSymbol('proto.services.GetContactsResponse', null, global);\ngoog.exportSymbol('proto.services.GetDiscussionHistoryByIDRequest', null, global);\ngoog.exportSymbol('proto.services.GetDiscussionHistoryResponse', null, global);\ngoog.exportSymbol('proto.services.GetDiscussionStatisticsRequest', null, global);\ngoog.exportSymbol('proto.services.GetDiscussionStatisticsResponse', null, global);\ngoog.exportSymbol('proto.services.GetDiscussionsRequest', null, global);\ngoog.exportSymbol('proto.services.GetDiscussionsResponse', null, global);\ngoog.exportSymbol('proto.services.GetNodesRequest', null, global);\ngoog.exportSymbol('proto.services.KeySetPageOptions', null, global);\ngoog.exportSymbol('proto.services.Message', null, global);\ngoog.exportSymbol('proto.services.MessageOptions', null, global);\ngoog.exportSymbol('proto.services.NodeInfo', null, global);\ngoog.exportSymbol('proto.services.NodeInfoResponse', null, global);\ngoog.exportSymbol('proto.services.OpenChannelRequest', null, global);\ngoog.exportSymbol('proto.services.OpenChannelResponse', null, global);\ngoog.exportSymbol('proto.services.PageOptions', null, global);\ngoog.exportSymbol('proto.services.PaymentHop', null, global);\ngoog.exportSymbol('proto.services.PaymentRoute', null, global);\ngoog.exportSymbol('proto.services.RemoveContactByAddressRequest', null, global);\ngoog.exportSymbol('proto.services.RemoveContactByIDRequest', null, global);\ngoog.exportSymbol('proto.services.RemoveContactResponse', null, global);\ngoog.exportSymbol('proto.services.RemoveDiscussionRequest', null, global);\ngoog.exportSymbol('proto.services.RemoveDiscussionResponse', null, global);\ngoog.exportSymbol('proto.services.SearchNodeByAddressRequest', null, global);\ngoog.exportSymbol('proto.services.SearchNodeByAliasRequest', null, global);\ngoog.exportSymbol('proto.services.SelfBalanceRequest', null, global);\ngoog.exportSymbol('proto.services.SelfBalanceResponse', null, global);\ngoog.exportSymbol('proto.services.SelfInfoRequest', null, global);\ngoog.exportSymbol('proto.services.SelfInfoResponse', null, global);\ngoog.exportSymbol('proto.services.SendMessageRequest', null, global);\ngoog.exportSymbol('proto.services.SendMessageResponse', null, global);\ngoog.exportSymbol('proto.services.SubscribeMessageRequest', null, global);\ngoog.exportSymbol('proto.services.SubscribeMessageResponse', null, global);\ngoog.exportSymbol('proto.services.UpdateDiscussionLastReadRequest', null, global);\ngoog.exportSymbol('proto.services.UpdateDiscussionResponse', null, global);\ngoog.exportSymbol('proto.services.Version', null, global);\ngoog.exportSymbol('proto.services.VersionRequest', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.PageOptions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.PageOptions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.PageOptions.displayName = 'proto.services.PageOptions';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.PageOptions.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.PageOptions.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.PageOptions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.PageOptions.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      skipRecent: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.PageOptions}\n */\nproto.services.PageOptions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.PageOptions;\n  return proto.services.PageOptions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.PageOptions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.PageOptions}\n */\nproto.services.PageOptions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSkipRecent(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPageSize(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.PageOptions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.PageOptions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.PageOptions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.PageOptions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSkipRecent();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getPageSize();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 skip_recent = 1;\n * @return {number}\n */\nproto.services.PageOptions.prototype.getSkipRecent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PageOptions.prototype.setSkipRecent = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 page_size = 2;\n * @return {number}\n */\nproto.services.PageOptions.prototype.getPageSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PageOptions.prototype.setPageSize = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.KeySetPageOptions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.KeySetPageOptions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.KeySetPageOptions.displayName = 'proto.services.KeySetPageOptions';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.KeySetPageOptions.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.KeySetPageOptions.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.KeySetPageOptions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.KeySetPageOptions.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      lastId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      reverse: jspb.Message.getFieldWithDefault(msg, 3, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.KeySetPageOptions}\n */\nproto.services.KeySetPageOptions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.KeySetPageOptions;\n  return proto.services.KeySetPageOptions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.KeySetPageOptions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.KeySetPageOptions}\n */\nproto.services.KeySetPageOptions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLastId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPageSize(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setReverse(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.KeySetPageOptions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.KeySetPageOptions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.KeySetPageOptions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.KeySetPageOptions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLastId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getPageSize();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getReverse();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 last_id = 1;\n * @return {number}\n */\nproto.services.KeySetPageOptions.prototype.getLastId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.KeySetPageOptions.prototype.setLastId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 page_size = 2;\n * @return {number}\n */\nproto.services.KeySetPageOptions.prototype.getPageSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.KeySetPageOptions.prototype.setPageSize = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bool reverse = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.services.KeySetPageOptions.prototype.getReverse = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.services.KeySetPageOptions.prototype.setReverse = function(value) {\n  jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.VersionRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.VersionRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.VersionRequest.displayName = 'proto.services.VersionRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.VersionRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.VersionRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.VersionRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.VersionRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.VersionRequest}\n */\nproto.services.VersionRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.VersionRequest;\n  return proto.services.VersionRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.VersionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.VersionRequest}\n */\nproto.services.VersionRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.VersionRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.VersionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.VersionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.VersionRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.Version = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.Version, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.Version.displayName = 'proto.services.Version';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.Version.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.Version.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.Version} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.Version.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      version: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      commit: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      commitHash: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.Version}\n */\nproto.services.Version.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.Version;\n  return proto.services.Version.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.Version} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.Version}\n */\nproto.services.Version.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVersion(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCommit(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCommitHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.Version.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.Version.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.Version} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.Version.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getVersion();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCommit();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCommitHash();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string version = 1;\n * @return {string}\n */\nproto.services.Version.prototype.getVersion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Version.prototype.setVersion = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string commit = 2;\n * @return {string}\n */\nproto.services.Version.prototype.getCommit = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Version.prototype.setCommit = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string commit_hash = 3;\n * @return {string}\n */\nproto.services.Version.prototype.getCommitHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Version.prototype.setCommitHash = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.NodeInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.NodeInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.NodeInfo.displayName = 'proto.services.NodeInfo';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.NodeInfo.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.NodeInfo.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.NodeInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.NodeInfo.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      alias: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      address: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.NodeInfo}\n */\nproto.services.NodeInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.NodeInfo;\n  return proto.services.NodeInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.NodeInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.NodeInfo}\n */\nproto.services.NodeInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAlias(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.NodeInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.NodeInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.NodeInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.NodeInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAlias();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string alias = 1;\n * @return {string}\n */\nproto.services.NodeInfo.prototype.getAlias = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.NodeInfo.prototype.setAlias = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string address = 2;\n * @return {string}\n */\nproto.services.NodeInfo.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.NodeInfo.prototype.setAddress = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SelfInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SelfInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SelfInfoRequest.displayName = 'proto.services.SelfInfoRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SelfInfoRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SelfInfoRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SelfInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SelfInfoRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SelfInfoRequest}\n */\nproto.services.SelfInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SelfInfoRequest;\n  return proto.services.SelfInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SelfInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SelfInfoRequest}\n */\nproto.services.SelfInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SelfInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SelfInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SelfInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SelfInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.Chain = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.Chain, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.Chain.displayName = 'proto.services.Chain';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.Chain.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.Chain.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.Chain} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.Chain.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      chain: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      network: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.Chain}\n */\nproto.services.Chain.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.Chain;\n  return proto.services.Chain.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.Chain} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.Chain}\n */\nproto.services.Chain.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChain(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNetwork(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.Chain.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.Chain.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.Chain} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.Chain.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChain();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getNetwork();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string chain = 1;\n * @return {string}\n */\nproto.services.Chain.prototype.getChain = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Chain.prototype.setChain = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string network = 2;\n * @return {string}\n */\nproto.services.Chain.prototype.getNetwork = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Chain.prototype.setNetwork = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SelfInfoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.SelfInfoResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.services.SelfInfoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SelfInfoResponse.displayName = 'proto.services.SelfInfoResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.services.SelfInfoResponse.repeatedFields_ = [2];\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SelfInfoResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SelfInfoResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SelfInfoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SelfInfoResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      info: (f = msg.getInfo()) && proto.services.NodeInfo.toObject(includeInstance, f),\n      chainsList: jspb.Message.toObjectList(msg.getChainsList(),\n        proto.services.Chain.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SelfInfoResponse}\n */\nproto.services.SelfInfoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SelfInfoResponse;\n  return proto.services.SelfInfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SelfInfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SelfInfoResponse}\n */\nproto.services.SelfInfoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.NodeInfo;\n      reader.readMessage(value,proto.services.NodeInfo.deserializeBinaryFromReader);\n      msg.setInfo(value);\n      break;\n    case 2:\n      var value = new proto.services.Chain;\n      reader.readMessage(value,proto.services.Chain.deserializeBinaryFromReader);\n      msg.addChains(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SelfInfoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SelfInfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SelfInfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SelfInfoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInfo();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.NodeInfo.serializeBinaryToWriter\n    );\n  }\n  f = message.getChainsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.services.Chain.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional NodeInfo info = 1;\n * @return {?proto.services.NodeInfo}\n */\nproto.services.SelfInfoResponse.prototype.getInfo = function() {\n  return /** @type{?proto.services.NodeInfo} */ (\n    jspb.Message.getWrapperField(this, proto.services.NodeInfo, 1));\n};\n\n\n/** @param {?proto.services.NodeInfo|undefined} value */\nproto.services.SelfInfoResponse.prototype.setInfo = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.SelfInfoResponse.prototype.clearInfo = function() {\n  this.setInfo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.SelfInfoResponse.prototype.hasInfo = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated Chain chains = 2;\n * @return {!Array<!proto.services.Chain>}\n */\nproto.services.SelfInfoResponse.prototype.getChainsList = function() {\n  return /** @type{!Array<!proto.services.Chain>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.services.Chain, 2));\n};\n\n\n/** @param {!Array<!proto.services.Chain>} value */\nproto.services.SelfInfoResponse.prototype.setChainsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.services.Chain=} opt_value\n * @param {number=} opt_index\n * @return {!proto.services.Chain}\n */\nproto.services.SelfInfoResponse.prototype.addChains = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.services.Chain, opt_index);\n};\n\n\nproto.services.SelfInfoResponse.prototype.clearChainsList = function() {\n  this.setChainsList([]);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SelfBalanceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SelfBalanceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SelfBalanceRequest.displayName = 'proto.services.SelfBalanceRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SelfBalanceRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SelfBalanceRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SelfBalanceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SelfBalanceRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SelfBalanceRequest}\n */\nproto.services.SelfBalanceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SelfBalanceRequest;\n  return proto.services.SelfBalanceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SelfBalanceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SelfBalanceRequest}\n */\nproto.services.SelfBalanceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SelfBalanceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SelfBalanceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SelfBalanceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SelfBalanceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SelfBalanceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SelfBalanceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SelfBalanceResponse.displayName = 'proto.services.SelfBalanceResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SelfBalanceResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SelfBalanceResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SelfBalanceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SelfBalanceResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      walletConfirmedSat: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      walletUnconfirmedSat: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      channelLocalMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      channelRemoteMsat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      pendingOpenLocalMsat: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      pendingOpenRemoteMsat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n      unsettledLocalMsat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n      unsettledRemoteMsat: jspb.Message.getFieldWithDefault(msg, 8, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SelfBalanceResponse}\n */\nproto.services.SelfBalanceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SelfBalanceResponse;\n  return proto.services.SelfBalanceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SelfBalanceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SelfBalanceResponse}\n */\nproto.services.SelfBalanceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setWalletConfirmedSat(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setWalletUnconfirmedSat(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setChannelLocalMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setChannelRemoteMsat(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPendingOpenLocalMsat(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPendingOpenRemoteMsat(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setUnsettledLocalMsat(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setUnsettledRemoteMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SelfBalanceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SelfBalanceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SelfBalanceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SelfBalanceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getWalletConfirmedSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getWalletUnconfirmedSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getChannelLocalMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getChannelRemoteMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getPendingOpenLocalMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getPendingOpenRemoteMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getUnsettledLocalMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getUnsettledRemoteMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 wallet_confirmed_sat = 1;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getWalletConfirmedSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setWalletConfirmedSat = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 wallet_unconfirmed_sat = 2;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getWalletUnconfirmedSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setWalletUnconfirmedSat = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint64 channel_local_msat = 3;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getChannelLocalMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setChannelLocalMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional uint64 channel_remote_msat = 4;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getChannelRemoteMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setChannelRemoteMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional uint64 pending_open_local_msat = 5;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getPendingOpenLocalMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setPendingOpenLocalMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional uint64 pending_open_remote_msat = 6;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getPendingOpenRemoteMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setPendingOpenRemoteMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional uint64 unsettled_local_msat = 7;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getUnsettledLocalMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setUnsettledLocalMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional uint64 unsettled_remote_msat = 8;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getUnsettledRemoteMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setUnsettledRemoteMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetNodesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetNodesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetNodesRequest.displayName = 'proto.services.GetNodesRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetNodesRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetNodesRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetNodesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetNodesRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetNodesRequest}\n */\nproto.services.GetNodesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetNodesRequest;\n  return proto.services.GetNodesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetNodesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetNodesRequest}\n */\nproto.services.GetNodesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetNodesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetNodesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetNodesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetNodesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SearchNodeByAddressRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SearchNodeByAddressRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SearchNodeByAddressRequest.displayName = 'proto.services.SearchNodeByAddressRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SearchNodeByAddressRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SearchNodeByAddressRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SearchNodeByAddressRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SearchNodeByAddressRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SearchNodeByAddressRequest}\n */\nproto.services.SearchNodeByAddressRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SearchNodeByAddressRequest;\n  return proto.services.SearchNodeByAddressRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SearchNodeByAddressRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SearchNodeByAddressRequest}\n */\nproto.services.SearchNodeByAddressRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SearchNodeByAddressRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SearchNodeByAddressRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SearchNodeByAddressRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SearchNodeByAddressRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.services.SearchNodeByAddressRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.SearchNodeByAddressRequest.prototype.setAddress = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SearchNodeByAliasRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SearchNodeByAliasRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SearchNodeByAliasRequest.displayName = 'proto.services.SearchNodeByAliasRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SearchNodeByAliasRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SearchNodeByAliasRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SearchNodeByAliasRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SearchNodeByAliasRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      alias: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SearchNodeByAliasRequest}\n */\nproto.services.SearchNodeByAliasRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SearchNodeByAliasRequest;\n  return proto.services.SearchNodeByAliasRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SearchNodeByAliasRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SearchNodeByAliasRequest}\n */\nproto.services.SearchNodeByAliasRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAlias(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SearchNodeByAliasRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SearchNodeByAliasRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SearchNodeByAliasRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SearchNodeByAliasRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAlias();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string alias = 1;\n * @return {string}\n */\nproto.services.SearchNodeByAliasRequest.prototype.getAlias = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.SearchNodeByAliasRequest.prototype.setAlias = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.NodeInfoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.NodeInfoResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.services.NodeInfoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.NodeInfoResponse.displayName = 'proto.services.NodeInfoResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.services.NodeInfoResponse.repeatedFields_ = [1];\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.NodeInfoResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.NodeInfoResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.NodeInfoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.NodeInfoResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      nodesList: jspb.Message.toObjectList(msg.getNodesList(),\n        proto.services.NodeInfo.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.NodeInfoResponse}\n */\nproto.services.NodeInfoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.NodeInfoResponse;\n  return proto.services.NodeInfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.NodeInfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.NodeInfoResponse}\n */\nproto.services.NodeInfoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.NodeInfo;\n      reader.readMessage(value,proto.services.NodeInfo.deserializeBinaryFromReader);\n      msg.addNodes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.NodeInfoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.NodeInfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.NodeInfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.NodeInfoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNodesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.services.NodeInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated NodeInfo nodes = 1;\n * @return {!Array<!proto.services.NodeInfo>}\n */\nproto.services.NodeInfoResponse.prototype.getNodesList = function() {\n  return /** @type{!Array<!proto.services.NodeInfo>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.services.NodeInfo, 1));\n};\n\n\n/** @param {!Array<!proto.services.NodeInfo>} value */\nproto.services.NodeInfoResponse.prototype.setNodesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.services.NodeInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.services.NodeInfo}\n */\nproto.services.NodeInfoResponse.prototype.addNodes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.NodeInfo, opt_index);\n};\n\n\nproto.services.NodeInfoResponse.prototype.clearNodesList = function() {\n  this.setNodesList([]);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.ConnectNodeRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.ConnectNodeRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.ConnectNodeRequest.displayName = 'proto.services.ConnectNodeRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.ConnectNodeRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.ConnectNodeRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.ConnectNodeRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.ConnectNodeRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      address: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      hostport: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.ConnectNodeRequest}\n */\nproto.services.ConnectNodeRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.ConnectNodeRequest;\n  return proto.services.ConnectNodeRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.ConnectNodeRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.ConnectNodeRequest}\n */\nproto.services.ConnectNodeRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHostport(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.ConnectNodeRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.ConnectNodeRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.ConnectNodeRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.ConnectNodeRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getHostport();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.services.ConnectNodeRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.ConnectNodeRequest.prototype.setAddress = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string hostport = 2;\n * @return {string}\n */\nproto.services.ConnectNodeRequest.prototype.getHostport = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.ConnectNodeRequest.prototype.setHostport = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.ConnectNodeResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.ConnectNodeResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.ConnectNodeResponse.displayName = 'proto.services.ConnectNodeResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.ConnectNodeResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.ConnectNodeResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.ConnectNodeResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.ConnectNodeResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.ConnectNodeResponse}\n */\nproto.services.ConnectNodeResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.ConnectNodeResponse;\n  return proto.services.ConnectNodeResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.ConnectNodeResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.ConnectNodeResponse}\n */\nproto.services.ConnectNodeResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.ConnectNodeResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.ConnectNodeResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.ConnectNodeResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.ConnectNodeResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.OpenChannelRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.OpenChannelRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.OpenChannelRequest.displayName = 'proto.services.OpenChannelRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.OpenChannelRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.OpenChannelRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.OpenChannelRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.OpenChannelRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      address: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      amtMsat: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      pushAmtMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      minInputConfs: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      targetConfirmationBlock: jspb.Message.getFieldWithDefault(msg, 5, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.OpenChannelRequest}\n */\nproto.services.OpenChannelRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.OpenChannelRequest;\n  return proto.services.OpenChannelRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.OpenChannelRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.OpenChannelRequest}\n */\nproto.services.OpenChannelRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtMsat(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPushAmtMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setMinInputConfs(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTargetConfirmationBlock(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.OpenChannelRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.OpenChannelRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.OpenChannelRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.OpenChannelRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getPushAmtMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getMinInputConfs();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getTargetConfirmationBlock();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.services.OpenChannelRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.OpenChannelRequest.prototype.setAddress = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional uint64 amt_msat = 2;\n * @return {number}\n */\nproto.services.OpenChannelRequest.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.OpenChannelRequest.prototype.setAmtMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint64 push_amt_msat = 3;\n * @return {number}\n */\nproto.services.OpenChannelRequest.prototype.getPushAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.OpenChannelRequest.prototype.setPushAmtMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int32 min_input_confs = 4;\n * @return {number}\n */\nproto.services.OpenChannelRequest.prototype.getMinInputConfs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.services.OpenChannelRequest.prototype.setMinInputConfs = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional uint32 target_confirmation_block = 5;\n * @return {number}\n */\nproto.services.OpenChannelRequest.prototype.getTargetConfirmationBlock = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.services.OpenChannelRequest.prototype.setTargetConfirmationBlock = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.OpenChannelResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.OpenChannelResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.OpenChannelResponse.displayName = 'proto.services.OpenChannelResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.OpenChannelResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.OpenChannelResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.OpenChannelResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.OpenChannelResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      fundingTxid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      outputIndex: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.OpenChannelResponse}\n */\nproto.services.OpenChannelResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.OpenChannelResponse;\n  return proto.services.OpenChannelResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.OpenChannelResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.OpenChannelResponse}\n */\nproto.services.OpenChannelResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFundingTxid(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setOutputIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.OpenChannelResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.OpenChannelResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.OpenChannelResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.OpenChannelResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFundingTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getOutputIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string funding_txid = 1;\n * @return {string}\n */\nproto.services.OpenChannelResponse.prototype.getFundingTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.OpenChannelResponse.prototype.setFundingTxid = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional uint32 output_index = 2;\n * @return {number}\n */\nproto.services.OpenChannelResponse.prototype.getOutputIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.OpenChannelResponse.prototype.setOutputIndex = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.ContactInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.ContactInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.ContactInfo.displayName = 'proto.services.ContactInfo';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.ContactInfo.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.ContactInfo.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.ContactInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.ContactInfo.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      node: (f = msg.getNode()) && proto.services.NodeInfo.toObject(includeInstance, f),\n      id: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      displayName: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.ContactInfo}\n */\nproto.services.ContactInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.ContactInfo;\n  return proto.services.ContactInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.ContactInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.ContactInfo}\n */\nproto.services.ContactInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.NodeInfo;\n      reader.readMessage(value,proto.services.NodeInfo.deserializeBinaryFromReader);\n      msg.setNode(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDisplayName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.ContactInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.ContactInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.ContactInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.ContactInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNode();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.NodeInfo.serializeBinaryToWriter\n    );\n  }\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getDisplayName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional NodeInfo node = 1;\n * @return {?proto.services.NodeInfo}\n */\nproto.services.ContactInfo.prototype.getNode = function() {\n  return /** @type{?proto.services.NodeInfo} */ (\n    jspb.Message.getWrapperField(this, proto.services.NodeInfo, 1));\n};\n\n\n/** @param {?proto.services.NodeInfo|undefined} value */\nproto.services.ContactInfo.prototype.setNode = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.ContactInfo.prototype.clearNode = function() {\n  this.setNode(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.ContactInfo.prototype.hasNode = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional uint64 id = 2;\n * @return {number}\n */\nproto.services.ContactInfo.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.ContactInfo.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string display_name = 3;\n * @return {string}\n */\nproto.services.ContactInfo.prototype.getDisplayName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.ContactInfo.prototype.setDisplayName = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetContactsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetContactsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetContactsRequest.displayName = 'proto.services.GetContactsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetContactsRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetContactsRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetContactsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetContactsRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetContactsRequest}\n */\nproto.services.GetContactsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetContactsRequest;\n  return proto.services.GetContactsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetContactsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetContactsRequest}\n */\nproto.services.GetContactsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetContactsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetContactsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetContactsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetContactsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetContactsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.GetContactsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.services.GetContactsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetContactsResponse.displayName = 'proto.services.GetContactsResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.services.GetContactsResponse.repeatedFields_ = [1];\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetContactsResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetContactsResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetContactsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetContactsResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      contactsList: jspb.Message.toObjectList(msg.getContactsList(),\n        proto.services.ContactInfo.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetContactsResponse}\n */\nproto.services.GetContactsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetContactsResponse;\n  return proto.services.GetContactsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetContactsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetContactsResponse}\n */\nproto.services.GetContactsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.ContactInfo;\n      reader.readMessage(value,proto.services.ContactInfo.deserializeBinaryFromReader);\n      msg.addContacts(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetContactsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetContactsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetContactsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetContactsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getContactsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.services.ContactInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated ContactInfo contacts = 1;\n * @return {!Array<!proto.services.ContactInfo>}\n */\nproto.services.GetContactsResponse.prototype.getContactsList = function() {\n  return /** @type{!Array<!proto.services.ContactInfo>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.services.ContactInfo, 1));\n};\n\n\n/** @param {!Array<!proto.services.ContactInfo>} value */\nproto.services.GetContactsResponse.prototype.setContactsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.services.ContactInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.services.ContactInfo}\n */\nproto.services.GetContactsResponse.prototype.addContacts = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.ContactInfo, opt_index);\n};\n\n\nproto.services.GetContactsResponse.prototype.clearContactsList = function() {\n  this.setContactsList([]);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.AddContactRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.AddContactRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.AddContactRequest.displayName = 'proto.services.AddContactRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.AddContactRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.AddContactRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.AddContactRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.AddContactRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      contact: (f = msg.getContact()) && proto.services.ContactInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.AddContactRequest}\n */\nproto.services.AddContactRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.AddContactRequest;\n  return proto.services.AddContactRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.AddContactRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.AddContactRequest}\n */\nproto.services.AddContactRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.ContactInfo;\n      reader.readMessage(value,proto.services.ContactInfo.deserializeBinaryFromReader);\n      msg.setContact(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.AddContactRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.AddContactRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.AddContactRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.AddContactRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getContact();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.ContactInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ContactInfo contact = 1;\n * @return {?proto.services.ContactInfo}\n */\nproto.services.AddContactRequest.prototype.getContact = function() {\n  return /** @type{?proto.services.ContactInfo} */ (\n    jspb.Message.getWrapperField(this, proto.services.ContactInfo, 1));\n};\n\n\n/** @param {?proto.services.ContactInfo|undefined} value */\nproto.services.AddContactRequest.prototype.setContact = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.AddContactRequest.prototype.clearContact = function() {\n  this.setContact(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.AddContactRequest.prototype.hasContact = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.AddContactResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.AddContactResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.AddContactResponse.displayName = 'proto.services.AddContactResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.AddContactResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.AddContactResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.AddContactResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.AddContactResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      contact: (f = msg.getContact()) && proto.services.ContactInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.AddContactResponse}\n */\nproto.services.AddContactResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.AddContactResponse;\n  return proto.services.AddContactResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.AddContactResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.AddContactResponse}\n */\nproto.services.AddContactResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.ContactInfo;\n      reader.readMessage(value,proto.services.ContactInfo.deserializeBinaryFromReader);\n      msg.setContact(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.AddContactResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.AddContactResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.AddContactResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.AddContactResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getContact();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.ContactInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ContactInfo contact = 1;\n * @return {?proto.services.ContactInfo}\n */\nproto.services.AddContactResponse.prototype.getContact = function() {\n  return /** @type{?proto.services.ContactInfo} */ (\n    jspb.Message.getWrapperField(this, proto.services.ContactInfo, 1));\n};\n\n\n/** @param {?proto.services.ContactInfo|undefined} value */\nproto.services.AddContactResponse.prototype.setContact = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.AddContactResponse.prototype.clearContact = function() {\n  this.setContact(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.AddContactResponse.prototype.hasContact = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.RemoveContactByIDRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.RemoveContactByIDRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.RemoveContactByIDRequest.displayName = 'proto.services.RemoveContactByIDRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.RemoveContactByIDRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.RemoveContactByIDRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.RemoveContactByIDRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.RemoveContactByIDRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.RemoveContactByIDRequest}\n */\nproto.services.RemoveContactByIDRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.RemoveContactByIDRequest;\n  return proto.services.RemoveContactByIDRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.RemoveContactByIDRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.RemoveContactByIDRequest}\n */\nproto.services.RemoveContactByIDRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.RemoveContactByIDRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.RemoveContactByIDRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.RemoveContactByIDRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.RemoveContactByIDRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 id = 1;\n * @return {number}\n */\nproto.services.RemoveContactByIDRequest.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.RemoveContactByIDRequest.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.RemoveContactByAddressRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.RemoveContactByAddressRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.RemoveContactByAddressRequest.displayName = 'proto.services.RemoveContactByAddressRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.RemoveContactByAddressRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.RemoveContactByAddressRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.RemoveContactByAddressRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.RemoveContactByAddressRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.RemoveContactByAddressRequest}\n */\nproto.services.RemoveContactByAddressRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.RemoveContactByAddressRequest;\n  return proto.services.RemoveContactByAddressRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.RemoveContactByAddressRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.RemoveContactByAddressRequest}\n */\nproto.services.RemoveContactByAddressRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.RemoveContactByAddressRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.RemoveContactByAddressRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.RemoveContactByAddressRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.RemoveContactByAddressRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.services.RemoveContactByAddressRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.RemoveContactByAddressRequest.prototype.setAddress = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.RemoveContactResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.RemoveContactResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.RemoveContactResponse.displayName = 'proto.services.RemoveContactResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.RemoveContactResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.RemoveContactResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.RemoveContactResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.RemoveContactResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.RemoveContactResponse}\n */\nproto.services.RemoveContactResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.RemoveContactResponse;\n  return proto.services.RemoveContactResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.RemoveContactResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.RemoveContactResponse}\n */\nproto.services.RemoveContactResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.RemoveContactResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.RemoveContactResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.RemoveContactResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.RemoveContactResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.Message = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.Message.repeatedFields_, null);\n};\ngoog.inherits(proto.services.Message, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.Message.displayName = 'proto.services.Message';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.services.Message.repeatedFields_ = [10];\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.Message.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.Message.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.Message} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.Message.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      discussionId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      sender: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      receiver: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      senderVerified: jspb.Message.getFieldWithDefault(msg, 11, false),\n      payload: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      amtMsat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n      totalFeesMsat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n      sentTimestamp: (f = msg.getSentTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      receivedTimestamp: (f = msg.getReceivedTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      paymentRoutesList: jspb.Message.toObjectList(msg.getPaymentRoutesList(),\n        proto.services.PaymentRoute.toObject, includeInstance),\n      preimage: jspb.Message.getFieldWithDefault(msg, 12, \"\"),\n      payReq: jspb.Message.getFieldWithDefault(msg, 13, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.Message}\n */\nproto.services.Message.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.Message;\n  return proto.services.Message.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.Message} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.Message}\n */\nproto.services.Message.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDiscussionId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSender(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReceiver(value);\n      break;\n    case 11:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSenderVerified(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPayload(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtMsat(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalFeesMsat(value);\n      break;\n    case 8:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setSentTimestamp(value);\n      break;\n    case 9:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setReceivedTimestamp(value);\n      break;\n    case 10:\n      var value = new proto.services.PaymentRoute;\n      reader.readMessage(value,proto.services.PaymentRoute.deserializeBinaryFromReader);\n      msg.addPaymentRoutes(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPreimage(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPayReq(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.Message.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.Message.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.Message} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.Message.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getDiscussionId();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getSender();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getReceiver();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getSenderVerified();\n  if (f) {\n    writer.writeBool(\n      11,\n      f\n    );\n  }\n  f = message.getPayload();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getTotalFeesMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getSentTimestamp();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n  f = message.getReceivedTimestamp();\n  if (f != null) {\n    writer.writeMessage(\n      9,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n  f = message.getPaymentRoutesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      10,\n      f,\n      proto.services.PaymentRoute.serializeBinaryToWriter\n    );\n  }\n  f = message.getPreimage();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = message.getPayReq();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 id = 1;\n * @return {number}\n */\nproto.services.Message.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.Message.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional uint64 discussion_id = 2;\n * @return {number}\n */\nproto.services.Message.prototype.getDiscussionId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.Message.prototype.setDiscussionId = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string sender = 3;\n * @return {string}\n */\nproto.services.Message.prototype.getSender = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Message.prototype.setSender = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string receiver = 4;\n * @return {string}\n */\nproto.services.Message.prototype.getReceiver = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Message.prototype.setReceiver = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional bool sender_verified = 11;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.services.Message.prototype.getSenderVerified = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));\n};\n\n\n/** @param {boolean} value */\nproto.services.Message.prototype.setSenderVerified = function(value) {\n  jspb.Message.setProto3BooleanField(this, 11, value);\n};\n\n\n/**\n * optional string payload = 5;\n * @return {string}\n */\nproto.services.Message.prototype.getPayload = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Message.prototype.setPayload = function(value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional int64 amt_msat = 6;\n * @return {number}\n */\nproto.services.Message.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.services.Message.prototype.setAmtMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional int64 total_fees_msat = 7;\n * @return {number}\n */\nproto.services.Message.prototype.getTotalFeesMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.services.Message.prototype.setTotalFeesMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional google.protobuf.Timestamp sent_timestamp = 8;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.services.Message.prototype.getSentTimestamp = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));\n};\n\n\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\nproto.services.Message.prototype.setSentTimestamp = function(value) {\n  jspb.Message.setWrapperField(this, 8, value);\n};\n\n\nproto.services.Message.prototype.clearSentTimestamp = function() {\n  this.setSentTimestamp(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.Message.prototype.hasSentTimestamp = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional google.protobuf.Timestamp received_timestamp = 9;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.services.Message.prototype.getReceivedTimestamp = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));\n};\n\n\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\nproto.services.Message.prototype.setReceivedTimestamp = function(value) {\n  jspb.Message.setWrapperField(this, 9, value);\n};\n\n\nproto.services.Message.prototype.clearReceivedTimestamp = function() {\n  this.setReceivedTimestamp(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.Message.prototype.hasReceivedTimestamp = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n/**\n * repeated PaymentRoute payment_routes = 10;\n * @return {!Array<!proto.services.PaymentRoute>}\n */\nproto.services.Message.prototype.getPaymentRoutesList = function() {\n  return /** @type{!Array<!proto.services.PaymentRoute>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.services.PaymentRoute, 10));\n};\n\n\n/** @param {!Array<!proto.services.PaymentRoute>} value */\nproto.services.Message.prototype.setPaymentRoutesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 10, value);\n};\n\n\n/**\n * @param {!proto.services.PaymentRoute=} opt_value\n * @param {number=} opt_index\n * @return {!proto.services.PaymentRoute}\n */\nproto.services.Message.prototype.addPaymentRoutes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.services.PaymentRoute, opt_index);\n};\n\n\nproto.services.Message.prototype.clearPaymentRoutesList = function() {\n  this.setPaymentRoutesList([]);\n};\n\n\n/**\n * optional string preimage = 12;\n * @return {string}\n */\nproto.services.Message.prototype.getPreimage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Message.prototype.setPreimage = function(value) {\n  jspb.Message.setProto3StringField(this, 12, value);\n};\n\n\n/**\n * optional string pay_req = 13;\n * @return {string}\n */\nproto.services.Message.prototype.getPayReq = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Message.prototype.setPayReq = function(value) {\n  jspb.Message.setProto3StringField(this, 13, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.PaymentRoute = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.PaymentRoute.repeatedFields_, null);\n};\ngoog.inherits(proto.services.PaymentRoute, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.PaymentRoute.displayName = 'proto.services.PaymentRoute';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.services.PaymentRoute.repeatedFields_ = [1];\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.PaymentRoute.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.PaymentRoute.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.PaymentRoute} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.PaymentRoute.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      hopsList: jspb.Message.toObjectList(msg.getHopsList(),\n        proto.services.PaymentHop.toObject, includeInstance),\n      totalTimelock: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      routeAmtMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      routeFeesMsat: jspb.Message.getFieldWithDefault(msg, 4, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.PaymentRoute}\n */\nproto.services.PaymentRoute.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.PaymentRoute;\n  return proto.services.PaymentRoute.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.PaymentRoute} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.PaymentRoute}\n */\nproto.services.PaymentRoute.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.PaymentHop;\n      reader.readMessage(value,proto.services.PaymentHop.deserializeBinaryFromReader);\n      msg.addHops(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTotalTimelock(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRouteAmtMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRouteFeesMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.PaymentRoute.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.PaymentRoute.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.PaymentRoute} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.PaymentRoute.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHopsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.services.PaymentHop.serializeBinaryToWriter\n    );\n  }\n  f = message.getTotalTimelock();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = message.getRouteAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getRouteFeesMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated PaymentHop hops = 1;\n * @return {!Array<!proto.services.PaymentHop>}\n */\nproto.services.PaymentRoute.prototype.getHopsList = function() {\n  return /** @type{!Array<!proto.services.PaymentHop>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.services.PaymentHop, 1));\n};\n\n\n/** @param {!Array<!proto.services.PaymentHop>} value */\nproto.services.PaymentRoute.prototype.setHopsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.services.PaymentHop=} opt_value\n * @param {number=} opt_index\n * @return {!proto.services.PaymentHop}\n */\nproto.services.PaymentRoute.prototype.addHops = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.PaymentHop, opt_index);\n};\n\n\nproto.services.PaymentRoute.prototype.clearHopsList = function() {\n  this.setHopsList([]);\n};\n\n\n/**\n * optional uint32 total_timelock = 2;\n * @return {number}\n */\nproto.services.PaymentRoute.prototype.getTotalTimelock = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PaymentRoute.prototype.setTotalTimelock = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int64 route_amt_msat = 3;\n * @return {number}\n */\nproto.services.PaymentRoute.prototype.getRouteAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PaymentRoute.prototype.setRouteAmtMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 route_fees_msat = 4;\n * @return {number}\n */\nproto.services.PaymentRoute.prototype.getRouteFeesMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PaymentRoute.prototype.setRouteFeesMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.PaymentHop = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.PaymentHop, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.PaymentHop.displayName = 'proto.services.PaymentHop';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.PaymentHop.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.PaymentHop.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.PaymentHop} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.PaymentHop.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      chanId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      hopAddress: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      amtToForwardMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      feeMsat: jspb.Message.getFieldWithDefault(msg, 4, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.PaymentHop}\n */\nproto.services.PaymentHop.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.PaymentHop;\n  return proto.services.PaymentHop.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.PaymentHop} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.PaymentHop}\n */\nproto.services.PaymentHop.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setChanId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHopAddress(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtToForwardMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.PaymentHop.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.PaymentHop.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.PaymentHop} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.PaymentHop.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getHopAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAmtToForwardMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFeeMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 1;\n * @return {number}\n */\nproto.services.PaymentHop.prototype.getChanId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PaymentHop.prototype.setChanId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string hop_address = 2;\n * @return {string}\n */\nproto.services.PaymentHop.prototype.getHopAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.PaymentHop.prototype.setHopAddress = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional int64 amt_to_forward_msat = 3;\n * @return {number}\n */\nproto.services.PaymentHop.prototype.getAmtToForwardMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PaymentHop.prototype.setAmtToForwardMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 fee_msat = 4;\n * @return {number}\n */\nproto.services.PaymentHop.prototype.getFeeMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PaymentHop.prototype.setFeeMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.MessageOptions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.MessageOptions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.MessageOptions.displayName = 'proto.services.MessageOptions';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.MessageOptions.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.MessageOptions.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.MessageOptions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.MessageOptions.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      feeLimitMsat: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      anonymous: jspb.Message.getFieldWithDefault(msg, 2, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.MessageOptions}\n */\nproto.services.MessageOptions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.MessageOptions;\n  return proto.services.MessageOptions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.MessageOptions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.MessageOptions}\n */\nproto.services.MessageOptions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeLimitMsat(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAnonymous(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.MessageOptions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.MessageOptions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.MessageOptions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.MessageOptions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFeeLimitMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getAnonymous();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 fee_limit_msat = 1;\n * @return {number}\n */\nproto.services.MessageOptions.prototype.getFeeLimitMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.MessageOptions.prototype.setFeeLimitMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bool anonymous = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.services.MessageOptions.prototype.getAnonymous = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.services.MessageOptions.prototype.setAnonymous = function(value) {\n  jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.EstimateMessageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.EstimateMessageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.EstimateMessageRequest.displayName = 'proto.services.EstimateMessageRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.EstimateMessageRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.EstimateMessageRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.EstimateMessageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.EstimateMessageRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      discussionId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      payload: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      amtMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      options: (f = msg.getOptions()) && proto.services.MessageOptions.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.EstimateMessageRequest}\n */\nproto.services.EstimateMessageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.EstimateMessageRequest;\n  return proto.services.EstimateMessageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.EstimateMessageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.EstimateMessageRequest}\n */\nproto.services.EstimateMessageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDiscussionId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPayload(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtMsat(value);\n      break;\n    case 4:\n      var value = new proto.services.MessageOptions;\n      reader.readMessage(value,proto.services.MessageOptions.deserializeBinaryFromReader);\n      msg.setOptions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.EstimateMessageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.EstimateMessageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.EstimateMessageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.EstimateMessageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDiscussionId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getPayload();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getOptions();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.services.MessageOptions.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional uint64 discussion_id = 1;\n * @return {number}\n */\nproto.services.EstimateMessageRequest.prototype.getDiscussionId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.EstimateMessageRequest.prototype.setDiscussionId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string payload = 2;\n * @return {string}\n */\nproto.services.EstimateMessageRequest.prototype.getPayload = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.EstimateMessageRequest.prototype.setPayload = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional int64 amt_msat = 3;\n * @return {number}\n */\nproto.services.EstimateMessageRequest.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.EstimateMessageRequest.prototype.setAmtMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional MessageOptions options = 4;\n * @return {?proto.services.MessageOptions}\n */\nproto.services.EstimateMessageRequest.prototype.getOptions = function() {\n  return /** @type{?proto.services.MessageOptions} */ (\n    jspb.Message.getWrapperField(this, proto.services.MessageOptions, 4));\n};\n\n\n/** @param {?proto.services.MessageOptions|undefined} value */\nproto.services.EstimateMessageRequest.prototype.setOptions = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.services.EstimateMessageRequest.prototype.clearOptions = function() {\n  this.setOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.EstimateMessageRequest.prototype.hasOptions = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.EstimateMessageResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.EstimateMessageResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.EstimateMessageResponse.displayName = 'proto.services.EstimateMessageResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.EstimateMessageResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.EstimateMessageResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.EstimateMessageResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.EstimateMessageResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      successProb: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),\n      message: (f = msg.getMessage()) && proto.services.Message.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.EstimateMessageResponse}\n */\nproto.services.EstimateMessageResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.EstimateMessageResponse;\n  return proto.services.EstimateMessageResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.EstimateMessageResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.EstimateMessageResponse}\n */\nproto.services.EstimateMessageResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setSuccessProb(value);\n      break;\n    case 2:\n      var value = new proto.services.Message;\n      reader.readMessage(value,proto.services.Message.deserializeBinaryFromReader);\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.EstimateMessageResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.EstimateMessageResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.EstimateMessageResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.EstimateMessageResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSuccessProb();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.services.Message.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional double success_prob = 1;\n * @return {number}\n */\nproto.services.EstimateMessageResponse.prototype.getSuccessProb = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));\n};\n\n\n/** @param {number} value */\nproto.services.EstimateMessageResponse.prototype.setSuccessProb = function(value) {\n  jspb.Message.setProto3FloatField(this, 1, value);\n};\n\n\n/**\n * optional Message message = 2;\n * @return {?proto.services.Message}\n */\nproto.services.EstimateMessageResponse.prototype.getMessage = function() {\n  return /** @type{?proto.services.Message} */ (\n    jspb.Message.getWrapperField(this, proto.services.Message, 2));\n};\n\n\n/** @param {?proto.services.Message|undefined} value */\nproto.services.EstimateMessageResponse.prototype.setMessage = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.services.EstimateMessageResponse.prototype.clearMessage = function() {\n  this.setMessage(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.EstimateMessageResponse.prototype.hasMessage = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SendMessageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SendMessageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SendMessageRequest.displayName = 'proto.services.SendMessageRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SendMessageRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SendMessageRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SendMessageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SendMessageRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      discussionId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      payload: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      amtMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      payReq: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      options: (f = msg.getOptions()) && proto.services.MessageOptions.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SendMessageRequest}\n */\nproto.services.SendMessageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SendMessageRequest;\n  return proto.services.SendMessageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SendMessageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SendMessageRequest}\n */\nproto.services.SendMessageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDiscussionId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPayload(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtMsat(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPayReq(value);\n      break;\n    case 4:\n      var value = new proto.services.MessageOptions;\n      reader.readMessage(value,proto.services.MessageOptions.deserializeBinaryFromReader);\n      msg.setOptions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SendMessageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SendMessageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SendMessageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SendMessageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDiscussionId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getPayload();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getPayReq();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getOptions();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.services.MessageOptions.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional uint64 discussion_id = 1;\n * @return {number}\n */\nproto.services.SendMessageRequest.prototype.getDiscussionId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SendMessageRequest.prototype.setDiscussionId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string payload = 2;\n * @return {string}\n */\nproto.services.SendMessageRequest.prototype.getPayload = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.SendMessageRequest.prototype.setPayload = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional int64 amt_msat = 3;\n * @return {number}\n */\nproto.services.SendMessageRequest.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SendMessageRequest.prototype.setAmtMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional string pay_req = 5;\n * @return {string}\n */\nproto.services.SendMessageRequest.prototype.getPayReq = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.SendMessageRequest.prototype.setPayReq = function(value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional MessageOptions options = 4;\n * @return {?proto.services.MessageOptions}\n */\nproto.services.SendMessageRequest.prototype.getOptions = function() {\n  return /** @type{?proto.services.MessageOptions} */ (\n    jspb.Message.getWrapperField(this, proto.services.MessageOptions, 4));\n};\n\n\n/** @param {?proto.services.MessageOptions|undefined} value */\nproto.services.SendMessageRequest.prototype.setOptions = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.services.SendMessageRequest.prototype.clearOptions = function() {\n  this.setOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.SendMessageRequest.prototype.hasOptions = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SendMessageResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SendMessageResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SendMessageResponse.displayName = 'proto.services.SendMessageResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SendMessageResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SendMessageResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SendMessageResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SendMessageResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      sentMessage: (f = msg.getSentMessage()) && proto.services.Message.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SendMessageResponse}\n */\nproto.services.SendMessageResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SendMessageResponse;\n  return proto.services.SendMessageResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SendMessageResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SendMessageResponse}\n */\nproto.services.SendMessageResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.Message;\n      reader.readMessage(value,proto.services.Message.deserializeBinaryFromReader);\n      msg.setSentMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SendMessageResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SendMessageResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SendMessageResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SendMessageResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentMessage();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.Message.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Message sent_message = 1;\n * @return {?proto.services.Message}\n */\nproto.services.SendMessageResponse.prototype.getSentMessage = function() {\n  return /** @type{?proto.services.Message} */ (\n    jspb.Message.getWrapperField(this, proto.services.Message, 1));\n};\n\n\n/** @param {?proto.services.Message|undefined} value */\nproto.services.SendMessageResponse.prototype.setSentMessage = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.SendMessageResponse.prototype.clearSentMessage = function() {\n  this.setSentMessage(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.SendMessageResponse.prototype.hasSentMessage = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SubscribeMessageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SubscribeMessageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SubscribeMessageRequest.displayName = 'proto.services.SubscribeMessageRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SubscribeMessageRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SubscribeMessageRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SubscribeMessageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SubscribeMessageRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SubscribeMessageRequest}\n */\nproto.services.SubscribeMessageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SubscribeMessageRequest;\n  return proto.services.SubscribeMessageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SubscribeMessageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SubscribeMessageRequest}\n */\nproto.services.SubscribeMessageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SubscribeMessageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SubscribeMessageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SubscribeMessageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SubscribeMessageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SubscribeMessageResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SubscribeMessageResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SubscribeMessageResponse.displayName = 'proto.services.SubscribeMessageResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SubscribeMessageResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SubscribeMessageResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SubscribeMessageResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SubscribeMessageResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      receivedMessage: (f = msg.getReceivedMessage()) && proto.services.Message.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SubscribeMessageResponse}\n */\nproto.services.SubscribeMessageResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SubscribeMessageResponse;\n  return proto.services.SubscribeMessageResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SubscribeMessageResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SubscribeMessageResponse}\n */\nproto.services.SubscribeMessageResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.Message;\n      reader.readMessage(value,proto.services.Message.deserializeBinaryFromReader);\n      msg.setReceivedMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SubscribeMessageResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SubscribeMessageResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SubscribeMessageResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SubscribeMessageResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getReceivedMessage();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.Message.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Message received_message = 1;\n * @return {?proto.services.Message}\n */\nproto.services.SubscribeMessageResponse.prototype.getReceivedMessage = function() {\n  return /** @type{?proto.services.Message} */ (\n    jspb.Message.getWrapperField(this, proto.services.Message, 1));\n};\n\n\n/** @param {?proto.services.Message|undefined} value */\nproto.services.SubscribeMessageResponse.prototype.setReceivedMessage = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.SubscribeMessageResponse.prototype.clearReceivedMessage = function() {\n  this.setReceivedMessage(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.SubscribeMessageResponse.prototype.hasReceivedMessage = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.DiscussionInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.DiscussionInfo.repeatedFields_, null);\n};\ngoog.inherits(proto.services.DiscussionInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.DiscussionInfo.displayName = 'proto.services.DiscussionInfo';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.services.DiscussionInfo.repeatedFields_ = [2];\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.DiscussionInfo.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.DiscussionInfo.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.DiscussionInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.DiscussionInfo.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      participantsList: jspb.Message.getRepeatedField(msg, 2),\n      options: (f = msg.getOptions()) && proto.services.DiscussionOptions.toObject(includeInstance, f),\n      lastReadMsgId: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      lastMsgId: jspb.Message.getFieldWithDefault(msg, 5, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.DiscussionInfo}\n */\nproto.services.DiscussionInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.DiscussionInfo;\n  return proto.services.DiscussionInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.DiscussionInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.DiscussionInfo}\n */\nproto.services.DiscussionInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addParticipants(value);\n      break;\n    case 3:\n      var value = new proto.services.DiscussionOptions;\n      reader.readMessage(value,proto.services.DiscussionOptions.deserializeBinaryFromReader);\n      msg.setOptions(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLastReadMsgId(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLastMsgId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.DiscussionInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.DiscussionInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.DiscussionInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.DiscussionInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getParticipantsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      2,\n      f\n    );\n  }\n  f = message.getOptions();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.services.DiscussionOptions.serializeBinaryToWriter\n    );\n  }\n  f = message.getLastReadMsgId();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getLastMsgId();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 id = 1;\n * @return {number}\n */\nproto.services.DiscussionInfo.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.DiscussionInfo.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * repeated string participants = 2;\n * @return {!Array<string>}\n */\nproto.services.DiscussionInfo.prototype.getParticipantsList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/** @param {!Array<string>} value */\nproto.services.DiscussionInfo.prototype.setParticipantsList = function(value) {\n  jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.services.DiscussionInfo.prototype.addParticipants = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\nproto.services.DiscussionInfo.prototype.clearParticipantsList = function() {\n  this.setParticipantsList([]);\n};\n\n\n/**\n * optional DiscussionOptions options = 3;\n * @return {?proto.services.DiscussionOptions}\n */\nproto.services.DiscussionInfo.prototype.getOptions = function() {\n  return /** @type{?proto.services.DiscussionOptions} */ (\n    jspb.Message.getWrapperField(this, proto.services.DiscussionOptions, 3));\n};\n\n\n/** @param {?proto.services.DiscussionOptions|undefined} value */\nproto.services.DiscussionInfo.prototype.setOptions = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.services.DiscussionInfo.prototype.clearOptions = function() {\n  this.setOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.DiscussionInfo.prototype.hasOptions = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional uint64 last_read_msg_id = 4;\n * @return {number}\n */\nproto.services.DiscussionInfo.prototype.getLastReadMsgId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.services.DiscussionInfo.prototype.setLastReadMsgId = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional uint64 last_msg_id = 5;\n * @return {number}\n */\nproto.services.DiscussionInfo.prototype.getLastMsgId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.services.DiscussionInfo.prototype.setLastMsgId = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.DiscussionOptions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.DiscussionOptions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.DiscussionOptions.displayName = 'proto.services.DiscussionOptions';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.DiscussionOptions.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.DiscussionOptions.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.DiscussionOptions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.DiscussionOptions.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      feeLimitMsat: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      anonymous: jspb.Message.getFieldWithDefault(msg, 2, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.DiscussionOptions}\n */\nproto.services.DiscussionOptions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.DiscussionOptions;\n  return proto.services.DiscussionOptions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.DiscussionOptions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.DiscussionOptions}\n */\nproto.services.DiscussionOptions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeLimitMsat(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAnonymous(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.DiscussionOptions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.DiscussionOptions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.DiscussionOptions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.DiscussionOptions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFeeLimitMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getAnonymous();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 fee_limit_msat = 1;\n * @return {number}\n */\nproto.services.DiscussionOptions.prototype.getFeeLimitMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.DiscussionOptions.prototype.setFeeLimitMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bool anonymous = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.services.DiscussionOptions.prototype.getAnonymous = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.services.DiscussionOptions.prototype.setAnonymous = function(value) {\n  jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetDiscussionsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetDiscussionsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetDiscussionsRequest.displayName = 'proto.services.GetDiscussionsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetDiscussionsRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetDiscussionsRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetDiscussionsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetDiscussionsRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetDiscussionsRequest}\n */\nproto.services.GetDiscussionsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetDiscussionsRequest;\n  return proto.services.GetDiscussionsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetDiscussionsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetDiscussionsRequest}\n */\nproto.services.GetDiscussionsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetDiscussionsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetDiscussionsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetDiscussionsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetDiscussionsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetDiscussionsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetDiscussionsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetDiscussionsResponse.displayName = 'proto.services.GetDiscussionsResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetDiscussionsResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetDiscussionsResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetDiscussionsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetDiscussionsResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      discussion: (f = msg.getDiscussion()) && proto.services.DiscussionInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetDiscussionsResponse}\n */\nproto.services.GetDiscussionsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetDiscussionsResponse;\n  return proto.services.GetDiscussionsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetDiscussionsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetDiscussionsResponse}\n */\nproto.services.GetDiscussionsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.DiscussionInfo;\n      reader.readMessage(value,proto.services.DiscussionInfo.deserializeBinaryFromReader);\n      msg.setDiscussion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetDiscussionsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetDiscussionsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetDiscussionsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetDiscussionsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDiscussion();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.DiscussionInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional DiscussionInfo discussion = 1;\n * @return {?proto.services.DiscussionInfo}\n */\nproto.services.GetDiscussionsResponse.prototype.getDiscussion = function() {\n  return /** @type{?proto.services.DiscussionInfo} */ (\n    jspb.Message.getWrapperField(this, proto.services.DiscussionInfo, 1));\n};\n\n\n/** @param {?proto.services.DiscussionInfo|undefined} value */\nproto.services.GetDiscussionsResponse.prototype.setDiscussion = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.GetDiscussionsResponse.prototype.clearDiscussion = function() {\n  this.setDiscussion(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.GetDiscussionsResponse.prototype.hasDiscussion = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetDiscussionHistoryByIDRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetDiscussionHistoryByIDRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetDiscussionHistoryByIDRequest.displayName = 'proto.services.GetDiscussionHistoryByIDRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetDiscussionHistoryByIDRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetDiscussionHistoryByIDRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetDiscussionHistoryByIDRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetDiscussionHistoryByIDRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      pageOptions: (f = msg.getPageOptions()) && proto.services.KeySetPageOptions.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetDiscussionHistoryByIDRequest}\n */\nproto.services.GetDiscussionHistoryByIDRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetDiscussionHistoryByIDRequest;\n  return proto.services.GetDiscussionHistoryByIDRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetDiscussionHistoryByIDRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetDiscussionHistoryByIDRequest}\n */\nproto.services.GetDiscussionHistoryByIDRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = new proto.services.KeySetPageOptions;\n      reader.readMessage(value,proto.services.KeySetPageOptions.deserializeBinaryFromReader);\n      msg.setPageOptions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetDiscussionHistoryByIDRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetDiscussionHistoryByIDRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetDiscussionHistoryByIDRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetDiscussionHistoryByIDRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getPageOptions();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.services.KeySetPageOptions.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional uint64 id = 1;\n * @return {number}\n */\nproto.services.GetDiscussionHistoryByIDRequest.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.GetDiscussionHistoryByIDRequest.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional KeySetPageOptions page_options = 2;\n * @return {?proto.services.KeySetPageOptions}\n */\nproto.services.GetDiscussionHistoryByIDRequest.prototype.getPageOptions = function() {\n  return /** @type{?proto.services.KeySetPageOptions} */ (\n    jspb.Message.getWrapperField(this, proto.services.KeySetPageOptions, 2));\n};\n\n\n/** @param {?proto.services.KeySetPageOptions|undefined} value */\nproto.services.GetDiscussionHistoryByIDRequest.prototype.setPageOptions = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.services.GetDiscussionHistoryByIDRequest.prototype.clearPageOptions = function() {\n  this.setPageOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.GetDiscussionHistoryByIDRequest.prototype.hasPageOptions = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetDiscussionHistoryResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetDiscussionHistoryResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetDiscussionHistoryResponse.displayName = 'proto.services.GetDiscussionHistoryResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetDiscussionHistoryResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetDiscussionHistoryResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetDiscussionHistoryResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetDiscussionHistoryResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      message: (f = msg.getMessage()) && proto.services.Message.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetDiscussionHistoryResponse}\n */\nproto.services.GetDiscussionHistoryResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetDiscussionHistoryResponse;\n  return proto.services.GetDiscussionHistoryResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetDiscussionHistoryResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetDiscussionHistoryResponse}\n */\nproto.services.GetDiscussionHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.Message;\n      reader.readMessage(value,proto.services.Message.deserializeBinaryFromReader);\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetDiscussionHistoryResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetDiscussionHistoryResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetDiscussionHistoryResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetDiscussionHistoryResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMessage();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.Message.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Message message = 1;\n * @return {?proto.services.Message}\n */\nproto.services.GetDiscussionHistoryResponse.prototype.getMessage = function() {\n  return /** @type{?proto.services.Message} */ (\n    jspb.Message.getWrapperField(this, proto.services.Message, 1));\n};\n\n\n/** @param {?proto.services.Message|undefined} value */\nproto.services.GetDiscussionHistoryResponse.prototype.setMessage = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.GetDiscussionHistoryResponse.prototype.clearMessage = function() {\n  this.setMessage(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.GetDiscussionHistoryResponse.prototype.hasMessage = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetDiscussionStatisticsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetDiscussionStatisticsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetDiscussionStatisticsRequest.displayName = 'proto.services.GetDiscussionStatisticsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetDiscussionStatisticsRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetDiscussionStatisticsRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetDiscussionStatisticsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetDiscussionStatisticsRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetDiscussionStatisticsRequest}\n */\nproto.services.GetDiscussionStatisticsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetDiscussionStatisticsRequest;\n  return proto.services.GetDiscussionStatisticsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetDiscussionStatisticsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetDiscussionStatisticsRequest}\n */\nproto.services.GetDiscussionStatisticsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetDiscussionStatisticsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetDiscussionStatisticsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetDiscussionStatisticsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetDiscussionStatisticsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 id = 1;\n * @return {number}\n */\nproto.services.GetDiscussionStatisticsRequest.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.GetDiscussionStatisticsRequest.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetDiscussionStatisticsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetDiscussionStatisticsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetDiscussionStatisticsResponse.displayName = 'proto.services.GetDiscussionStatisticsResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetDiscussionStatisticsResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetDiscussionStatisticsResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetDiscussionStatisticsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetDiscussionStatisticsResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      amtMsatSent: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      amtMsatReceived: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      amtMsatFees: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      messagesSent: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      messagesReceived: jspb.Message.getFieldWithDefault(msg, 5, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetDiscussionStatisticsResponse}\n */\nproto.services.GetDiscussionStatisticsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetDiscussionStatisticsResponse;\n  return proto.services.GetDiscussionStatisticsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetDiscussionStatisticsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetDiscussionStatisticsResponse}\n */\nproto.services.GetDiscussionStatisticsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtMsatSent(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtMsatReceived(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtMsatFees(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMessagesSent(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMessagesReceived(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetDiscussionStatisticsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetDiscussionStatisticsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetDiscussionStatisticsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetDiscussionStatisticsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAmtMsatSent();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getAmtMsatReceived();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getAmtMsatFees();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getMessagesSent();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getMessagesReceived();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 amt_msat_sent = 1;\n * @return {number}\n */\nproto.services.GetDiscussionStatisticsResponse.prototype.getAmtMsatSent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.GetDiscussionStatisticsResponse.prototype.setAmtMsatSent = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional uint64 amt_msat_received = 2;\n * @return {number}\n */\nproto.services.GetDiscussionStatisticsResponse.prototype.getAmtMsatReceived = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.GetDiscussionStatisticsResponse.prototype.setAmtMsatReceived = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint64 amt_msat_fees = 3;\n * @return {number}\n */\nproto.services.GetDiscussionStatisticsResponse.prototype.getAmtMsatFees = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.GetDiscussionStatisticsResponse.prototype.setAmtMsatFees = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional uint64 messages_sent = 4;\n * @return {number}\n */\nproto.services.GetDiscussionStatisticsResponse.prototype.getMessagesSent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.services.GetDiscussionStatisticsResponse.prototype.setMessagesSent = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional uint64 messages_received = 5;\n * @return {number}\n */\nproto.services.GetDiscussionStatisticsResponse.prototype.getMessagesReceived = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.services.GetDiscussionStatisticsResponse.prototype.setMessagesReceived = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.AddDiscussionRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.AddDiscussionRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.AddDiscussionRequest.displayName = 'proto.services.AddDiscussionRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.AddDiscussionRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.AddDiscussionRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.AddDiscussionRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.AddDiscussionRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      discussion: (f = msg.getDiscussion()) && proto.services.DiscussionInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.AddDiscussionRequest}\n */\nproto.services.AddDiscussionRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.AddDiscussionRequest;\n  return proto.services.AddDiscussionRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.AddDiscussionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.AddDiscussionRequest}\n */\nproto.services.AddDiscussionRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.DiscussionInfo;\n      reader.readMessage(value,proto.services.DiscussionInfo.deserializeBinaryFromReader);\n      msg.setDiscussion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.AddDiscussionRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.AddDiscussionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.AddDiscussionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.AddDiscussionRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDiscussion();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.DiscussionInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional DiscussionInfo discussion = 1;\n * @return {?proto.services.DiscussionInfo}\n */\nproto.services.AddDiscussionRequest.prototype.getDiscussion = function() {\n  return /** @type{?proto.services.DiscussionInfo} */ (\n    jspb.Message.getWrapperField(this, proto.services.DiscussionInfo, 1));\n};\n\n\n/** @param {?proto.services.DiscussionInfo|undefined} value */\nproto.services.AddDiscussionRequest.prototype.setDiscussion = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.AddDiscussionRequest.prototype.clearDiscussion = function() {\n  this.setDiscussion(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.AddDiscussionRequest.prototype.hasDiscussion = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.AddDiscussionResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.AddDiscussionResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.AddDiscussionResponse.displayName = 'proto.services.AddDiscussionResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.AddDiscussionResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.AddDiscussionResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.AddDiscussionResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.AddDiscussionResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      discussion: (f = msg.getDiscussion()) && proto.services.DiscussionInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.AddDiscussionResponse}\n */\nproto.services.AddDiscussionResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.AddDiscussionResponse;\n  return proto.services.AddDiscussionResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.AddDiscussionResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.AddDiscussionResponse}\n */\nproto.services.AddDiscussionResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.DiscussionInfo;\n      reader.readMessage(value,proto.services.DiscussionInfo.deserializeBinaryFromReader);\n      msg.setDiscussion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.AddDiscussionResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.AddDiscussionResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.AddDiscussionResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.AddDiscussionResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDiscussion();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.DiscussionInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional DiscussionInfo discussion = 1;\n * @return {?proto.services.DiscussionInfo}\n */\nproto.services.AddDiscussionResponse.prototype.getDiscussion = function() {\n  return /** @type{?proto.services.DiscussionInfo} */ (\n    jspb.Message.getWrapperField(this, proto.services.DiscussionInfo, 1));\n};\n\n\n/** @param {?proto.services.DiscussionInfo|undefined} value */\nproto.services.AddDiscussionResponse.prototype.setDiscussion = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.AddDiscussionResponse.prototype.clearDiscussion = function() {\n  this.setDiscussion(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.AddDiscussionResponse.prototype.hasDiscussion = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.UpdateDiscussionLastReadRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.UpdateDiscussionLastReadRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.UpdateDiscussionLastReadRequest.displayName = 'proto.services.UpdateDiscussionLastReadRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.UpdateDiscussionLastReadRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.UpdateDiscussionLastReadRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.UpdateDiscussionLastReadRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.UpdateDiscussionLastReadRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      discussionId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      lastReadMsgId: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.UpdateDiscussionLastReadRequest}\n */\nproto.services.UpdateDiscussionLastReadRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.UpdateDiscussionLastReadRequest;\n  return proto.services.UpdateDiscussionLastReadRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.UpdateDiscussionLastReadRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.UpdateDiscussionLastReadRequest}\n */\nproto.services.UpdateDiscussionLastReadRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDiscussionId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLastReadMsgId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.UpdateDiscussionLastReadRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.UpdateDiscussionLastReadRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.UpdateDiscussionLastReadRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.UpdateDiscussionLastReadRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDiscussionId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getLastReadMsgId();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 discussion_id = 1;\n * @return {number}\n */\nproto.services.UpdateDiscussionLastReadRequest.prototype.getDiscussionId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.UpdateDiscussionLastReadRequest.prototype.setDiscussionId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional uint64 last_read_msg_id = 2;\n * @return {number}\n */\nproto.services.UpdateDiscussionLastReadRequest.prototype.getLastReadMsgId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.UpdateDiscussionLastReadRequest.prototype.setLastReadMsgId = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.UpdateDiscussionResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.UpdateDiscussionResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.UpdateDiscussionResponse.displayName = 'proto.services.UpdateDiscussionResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.UpdateDiscussionResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.UpdateDiscussionResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.UpdateDiscussionResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.UpdateDiscussionResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.UpdateDiscussionResponse}\n */\nproto.services.UpdateDiscussionResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.UpdateDiscussionResponse;\n  return proto.services.UpdateDiscussionResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.UpdateDiscussionResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.UpdateDiscussionResponse}\n */\nproto.services.UpdateDiscussionResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.UpdateDiscussionResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.UpdateDiscussionResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.UpdateDiscussionResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.UpdateDiscussionResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.RemoveDiscussionRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.RemoveDiscussionRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.RemoveDiscussionRequest.displayName = 'proto.services.RemoveDiscussionRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.RemoveDiscussionRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.RemoveDiscussionRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.RemoveDiscussionRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.RemoveDiscussionRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.RemoveDiscussionRequest}\n */\nproto.services.RemoveDiscussionRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.RemoveDiscussionRequest;\n  return proto.services.RemoveDiscussionRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.RemoveDiscussionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.RemoveDiscussionRequest}\n */\nproto.services.RemoveDiscussionRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.RemoveDiscussionRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.RemoveDiscussionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.RemoveDiscussionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.RemoveDiscussionRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 id = 1;\n * @return {number}\n */\nproto.services.RemoveDiscussionRequest.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.RemoveDiscussionRequest.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.RemoveDiscussionResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.RemoveDiscussionResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.RemoveDiscussionResponse.displayName = 'proto.services.RemoveDiscussionResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.RemoveDiscussionResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.RemoveDiscussionResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.RemoveDiscussionResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.RemoveDiscussionResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.RemoveDiscussionResponse}\n */\nproto.services.RemoveDiscussionResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.RemoveDiscussionResponse;\n  return proto.services.RemoveDiscussionResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.RemoveDiscussionResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.RemoveDiscussionResponse}\n */\nproto.services.RemoveDiscussionResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.RemoveDiscussionResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.RemoveDiscussionResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.RemoveDiscussionResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.RemoveDiscussionResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\ngoog.object.extend(exports, proto.services);\n","const parseCurrentFunds = (props) => {\n  if (props.currentFunds !== -1 && props.selectedCryptoUnit) {\n    let cryptoRate;\n    switch (props.selectedCryptoUnit) {\n    case 'sat':\n      cryptoRate = 1;\n      return Number(props.currentFunds / cryptoRate).toFixed(0);\n    case 'msat':\n      cryptoRate = 0.001;\n      return Number(props.currentFunds / cryptoRate).toFixed(0);\n    case 'mBTC':\n      cryptoRate = 100000;\n      return Number(props.currentFunds / cryptoRate).toFixed(5);\n    }\n  }\n  return 0;\n};\n\nconst parseLastFundChange = (props) => {\n  if (props.lastFundChange !== 0 && props.selectedCryptoUnit) {\n    let cryptoRate;\n    switch (props.selectedCryptoUnit) {\n    case 'sat':\n      cryptoRate = 1;\n      return Number(props.lastFundChange / cryptoRate).toFixed(0);\n    case 'msat':\n      cryptoRate = 0.001;\n      return Number(props.lastFundChange / cryptoRate).toFixed(0);\n    case 'mBTC':\n      cryptoRate = 100000;\n      return Number(props.lastFundChange / cryptoRate).toFixed(5);\n    }\n  }\n  return '';\n};\n\nconst parseCurrentFiatAmount = (props) => {\n  if (props.selectedFiatUnit && props.exchangeRates && props.currentFunds !== -1) {\n    let rate = props.exchangeRates[props.selectedFiatUnit];\n    let btc = props.currentFunds / 100000000;\n    return Number(btc * rate).toFixed(2);\n  }\n  return 0;\n};\n\nconst msatToCurrentCryptoUnit = (props, amount) => {\n  if (props.selectedCryptoUnit) {\n    let cryptoRate;\n    switch (props.selectedCryptoUnit) {\n    case 'sat':\n      cryptoRate = 1000;\n      return Number(amount / cryptoRate);\n    case 'msat':\n      return amount;\n    case 'mBTC':\n      cryptoRate = 100000000;\n      return Number(amount / cryptoRate).toFixed(5);\n    }\n  }\n  return amount;\n};\n\nconst satToCurrentCryptoUnit = (props, amount) => {\n  if (props.selectedCryptoUnit) {\n    let cryptoRate;\n    switch (props.selectedCryptoUnit) {\n    case 'sat':\n      cryptoRate = 1;\n      return Number(amount / cryptoRate);\n    case 'msat':\n      cryptoRate = 0.001;\n      return Number(amount / cryptoRate);\n    case 'mBTC':\n      cryptoRate = 100000;\n      return Number(amount / cryptoRate).toFixed(5);\n    }\n  }\n  return amount;\n};\n\nconst currentCryptoAmtToFiat = (props, amount) => {\n  if (props.selectedCryptoUnit && props.selectedFiatUnit && props.exchangeRates) {\n    let satAmt;\n    switch (props.selectedCryptoUnit) {\n    case 'sat':\n      satAmt = amount;\n      break;\n    case 'msat':\n      satAmt = Number(amount / 1000);\n      break;\n    case 'mBTC':\n      satAmt = Number(amount * 100000).toFixed(5);\n      break;\n    }\n    let rate = props.exchangeRates[props.selectedFiatUnit];\n    let btc = satAmt / 100000000;\n    return Number(btc * rate).toFixed(6);\n  }\n  return 0;\n};\n\nconst msatAmtToFiat = (props, amount) => {\n  if (props.selectedFiatUnit && props.exchangeRates) {\n    let satAmt = amount / 1000;\n    let rate = props.exchangeRates[props.selectedFiatUnit];\n    let btc = satAmt / 100000000;\n    return Number(btc * rate).toFixed(6);\n  }\n  return 0;\n};\n\nconst currentCryptoAmtToMsat = (props, amount) => {\n  if (props.selectedCryptoUnit) {\n    let msatAmt;\n    switch (props.selectedCryptoUnit) {\n    case 'sat':\n      msatAmt = Number(amount * 1000);\n      break;\n    case 'msat':\n      msatAmt = amount;\n      break;\n    case 'mBTC':\n      msatAmt = Number(amount * 100000000);\n      break;\n    }\n    return msatAmt;\n  }\n  return amount;\n};\n\nconst retrieveDefaultCryptoAmount = (props) => {\n  switch (props.selectedCryptoUnit) {\n  case 'sat':\n    return'1';\n  case 'msat':\n    return'1000';\n  case 'mBTC':\n    return'0.00001';\n  }\n};\n\nconst selectedCryptoToVerbose = (unit) => {\n  switch (unit) {\n  case 'sat':\n    return 'satoshis';\n  case 'msat':\n    return 'millisats';\n  case 'mBTC':\n    return 'mBTC';\n  }\n};\n\nexport {\n  parseCurrentFunds,\n  parseLastFundChange,\n  parseCurrentFiatAmount,\n  msatToCurrentCryptoUnit,\n  satToCurrentCryptoUnit,\n  currentCryptoAmtToFiat,\n  currentCryptoAmtToMsat,\n  msatAmtToFiat,\n  retrieveDefaultCryptoAmount,\n  selectedCryptoToVerbose\n};\n"],"sourceRoot":""}