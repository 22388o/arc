{"version":3,"sources":["rpc/rpc_grpc_web_pb.js","rpc/validator_pb.js","utils/discussion-utils.js","config/auth-creds.js","services/messageServices.js","components/content-pages/message-info.js","style/theme.js","payload-protocol/version.js","components/content-pages/markdown/c13n-image.js","components/content-pages/markdown/c13n-link.js","components/content-pages/markdown/c13n-link-ref.js","components/content-pages/markdown/c13n-text.js","components/content-pages/markdown/c13n-inline-code.js","components/content-pages/chat-history-image.js","utils/payreq/payreq-tracker.js","payload-protocol/parsers.js","utils/payreq/utils.js","utils/lsat/upload-image.js","payload-protocol/utils.js","utils/system.js","media/arrow-right.svg","components/content-pages/chat-history-input.js","services/discussionServices.js","components/content-pages/chat-history-statistics.js","utils/identicon.js","components/content-pages/user-preview.js","utils/users-utils.js","components/content-pages/chat-history.js","components/content-pages/user-settings.js","services/channelServices.js","services/nodeInfoServices.js","components/content-pages/open-channel.js","components/content-pages/connect-peer.js","components/content-pages/user-funds.js","services/contactServices.js","components/content-pages/search-users.js","components/content-pages/contacts.js","media/arc-logo.png","media/programize_logo.png","components/content-pages/logo.js","config/version.js","utils/accounts-utils.js","components/accounts.js","components/content-pages/version-error.js","components/content-pages/connection-screen.js","components/content-pages/group-chat.js","components/contents.js","components/side.js","components/content-pages/funds-initialization.js","utils/fiat-rates.js","media/notification.mp3","components/main.js","utils/settings.js","App.js","index.js","rpc/rpc_pb.js","config/api-url.js","utils/crypto-utils.js","utils/lsat/download-image.js"],"names":["grpc","web","require","proto","services","NodeInfoServiceClient","hostname","credentials","options","this","client_","GrpcWebClientBase","hostname_","NodeInfoServicePromiseClient","methodDescriptor_NodeInfoService_GetVersion","MethodDescriptor","MethodType","UNARY","VersionRequest","Version","request","serializeBinary","deserializeBinary","AbstractClientBase","MethodInfo","prototype","getVersion","metadata","callback","rpcCall","unaryCall","methodDescriptor_NodeInfoService_GetSelfInfo","SelfInfoRequest","SelfInfoResponse","getSelfInfo","methodDescriptor_NodeInfoService_GetSelfBalance","SelfBalanceRequest","SelfBalanceResponse","getSelfBalance","methodDescriptor_NodeInfoService_GetNodes","GetNodesRequest","NodeInfoResponse","getNodes","methodDescriptor_NodeInfoService_SearchNodeByAddress","SearchNodeByAddressRequest","searchNodeByAddress","methodDescriptor_NodeInfoService_SearchNodeByAlias","SearchNodeByAliasRequest","searchNodeByAlias","methodDescriptor_NodeInfoService_ConnectNode","ConnectNodeRequest","ConnectNodeResponse","connectNode","ChannelServiceClient","ChannelServicePromiseClient","methodDescriptor_ChannelService_OpenChannel","OpenChannelRequest","OpenChannelResponse","openChannel","ContactServiceClient","ContactServicePromiseClient","methodDescriptor_ContactService_GetContacts","GetContactsRequest","GetContactsResponse","getContacts","methodDescriptor_ContactService_AddContact","AddContactRequest","AddContactResponse","addContact","methodDescriptor_ContactService_RemoveContactByID","RemoveContactByIDRequest","RemoveContactResponse","removeContactByID","methodDescriptor_ContactService_RemoveContactByAddress","RemoveContactByAddressRequest","removeContactByAddress","MessageServiceClient","MessageServicePromiseClient","methodDescriptor_MessageService_EstimateMessage","EstimateMessageRequest","EstimateMessageResponse","estimateMessage","methodDescriptor_MessageService_SendMessage","SendMessageRequest","SendMessageResponse","sendMessage","methodDescriptor_MessageService_SubscribeMessages","SERVER_STREAMING","SubscribeMessageRequest","SubscribeMessageResponse","subscribeMessages","serverStreaming","DiscussionServiceClient","DiscussionServicePromiseClient","methodDescriptor_DiscussionService_GetDiscussions","GetDiscussionsRequest","GetDiscussionsResponse","getDiscussions","methodDescriptor_DiscussionService_GetDiscussionHistoryByID","GetDiscussionHistoryByIDRequest","GetDiscussionHistoryResponse","getDiscussionHistoryByID","methodDescriptor_DiscussionService_GetDiscussionStatistics","GetDiscussionStatisticsRequest","GetDiscussionStatisticsResponse","getDiscussionStatistics","methodDescriptor_DiscussionService_AddDiscussion","AddDiscussionRequest","AddDiscussionResponse","addDiscussion","methodDescriptor_DiscussionService_UpdateDiscussionLastRead","UpdateDiscussionLastReadRequest","UpdateDiscussionResponse","updateDiscussionLastRead","methodDescriptor_DiscussionService_RemoveDiscussion","RemoveDiscussionRequest","RemoveDiscussionResponse","removeDiscussion","module","exports","jspb","goog","global","Function","google_protobuf_descriptor_pb","exportSymbol","validator","FieldValidator","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","regex","getField","intGt","intLt","msgExists","humanError","floatGt","getOptionalFloatingPointField","floatLt","floatEpsilon","floatGte","floatLte","stringNotEmpty","repeatedCountMin","repeatedCountMax","lengthGt","lengthLt","lengthEq","isInEnum","uuidVer","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setRegex","readInt64","setIntGt","setIntLt","readBool","setMsgExists","setHumanError","readDouble","setFloatGt","setFloatLt","setFloatEpsilon","setFloatGte","setFloatLte","setStringNotEmpty","setRepeatedCountMin","setRepeatedCountMax","setLengthGt","setLengthLt","setLengthEq","setIsInEnum","readInt32","setUuidVer","skipField","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","undefined","writeString","writeInt64","writeBool","writeDouble","writeInt32","getRegex","getFieldWithDefault","setField","clearRegex","hasRegex","getIntGt","clearIntGt","hasIntGt","getIntLt","clearIntLt","hasIntLt","getMsgExists","clearMsgExists","hasMsgExists","getHumanError","clearHumanError","hasHumanError","getFloatGt","clearFloatGt","hasFloatGt","getFloatLt","clearFloatLt","hasFloatLt","getFloatEpsilon","clearFloatEpsilon","hasFloatEpsilon","getFloatGte","clearFloatGte","hasFloatGte","getFloatLte","clearFloatLte","hasFloatLte","getStringNotEmpty","clearStringNotEmpty","hasStringNotEmpty","getRepeatedCountMin","clearRepeatedCountMin","hasRepeatedCountMin","getRepeatedCountMax","clearRepeatedCountMax","hasRepeatedCountMax","getLengthGt","clearLengthGt","hasLengthGt","getLengthLt","clearLengthLt","hasLengthLt","getLengthEq","clearLengthEq","hasLengthEq","getIsInEnum","clearIsInEnum","hasIsInEnum","getUuidVer","clearUuidVer","hasUuidVer","OneofValidator","required","setRequired","getRequired","clearRequired","hasRequired","field","ExtensionFieldInfo","FieldOptions","extensionsBinary","ExtensionFieldBinaryInfo","readMessage","writeMessage","extensions","oneof","OneofOptions","object","extend","concatUserNames","props","users","res","forEach","elem","contactName","findContactName","alias","findAlias","length","concat","substring","slice","concatUserAddresses","item","lookup","contacts","find","user","address","userLookup","routesToAddresses","routes","addressArray","route","lastHop","hopsList","push","hopAddress","populateChatHistoryMetadata","chatHistory","previousElem","sender","sentTimestamp","seconds","appendToChatHistory","setChatHistory","oldHistory","attemptUsernameRead","read","window","localStorage","getItem","toString","attemptPasswordRead","authCreds","Buffer","from","MessageOptions","rpcClient","apiUrl","client","Object","req","messageOptions","setFeeLimitMsat","feeLimitMsat","setAnonymous","anonymous","setOptions","setDiscussionId","discussionId","setPayload","payload","setAmtMsat","amtMsat","err","a","preimage","setPreimage","payReq","setPayReq","messageClient","cryptoUtils","MessageInfo","prepareHopsArray","hops","temp","unshift","selfInfo","feeMsat","selectedMessage","dataSource","paymentRoutesList","renderItem","className","Item","CopyOutlined","onClick","copyText","document","getElementById","select","setSelectionRange","execCommand","NotificationManager","info","id","onChange","isLast","msatToCurrentCryptoUnit","parseInt","routeAmtMsat","routeFeesMsat","selectedCryptoUnit","theme","menuDark","menuDarkLite","menuNormal","menuLight","version","C13nImage","React","memo","useState","focus","setFocus","automaticImageLoading","style","width","transition","smoothAnimations","src","title","cancelButtonProps","display","visible","bodyStyle","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","screen","height","href","target","c13nLink","c13nLinkRef","c13nText","c13nInlineCode","ChatHistoryImage","payreqs","checkPayreq","renderers","image","mdProps","link","linkReference","text","inlineCode","payloadToDom","myMessage","payloadObj","JSON","parse","type","content","source","disallowedTypes","unwrapDisallowed","attachmentList","cachedImages","uri","downloadImage","fontSize","border","borderRadius","padding","color","CheckOutlined","payreqObj","console","log","selectedDiscussion","payreqPayToPayload","sentMessage","lastMsgId","lastReadMsgId","updateCurrentFunds","setLastFundChange","Number","totalFeesMsat","sendPayreqPay","margin","description","satisfyPayreq","messageToPayload","messageObj","v","stringify","payreqToPayload","Date","now","axios","default","lsatUrl","lsat","headerToLsat","header","macaroonStr","split","invoiceStr","macaroon","invoice","uploadImage","post","then","catch","response","headers","fileElem","file","files","formData","FormData","append","tags","show","filename","data","fullUrl","sleep","ms","Promise","resolve","setTimeout","ChatHistoryInput","selectedInput","setSelectedInput","currentFee","setCurrentFee","messageToSend","setMessageToSend","emojiPickerActive","setEmojiPickerActive","amount","setAmount","fileDialogActive","setFileDialogActive","imageURL","setImageURL","uploadLoading","setUploadLoading","payreqModalActive","setPayreqModalActive","payreqAmount","setPayreqAmount","payreqDescription","setPayreqDescription","currentCryptoAmtToMsat","anonymousActive","retrieveDefaultCryptoAmount","warning","useEffect","discussion","calculateFee","onBlur","trigger","overlay","FileImageOutlined","FormOutlined","placement","setAnonymousActive","checkedChildren","EyeInvisibleOutlined","unCheckedChildren","EyeOutlined","disabled","participantsList","PlusOutlined","TextArea","onFocus","e","updateLastMessageSeen","updateChatScroll","key","preventDefault","onKeyDown","shiftKey","placeholder","resize","scrollHeight","maxHeight","borderColor","SmileOutlined","marginLeft","selectedCryptoToVerbose","currentCryptoAmtToFiat","selectedFiatUnit","parseFloat","min","max","input","selectAmountInputText","numCast","isNaN","onEmojiClick","emoji","pickerStyle","backgroundColor","disableSearchBar","disableAutoFocus","disableSkinTonePicker","onMouseDown","ChatButton","onOk","onCancel","okButtonProps","okText","LoadingOutlined","spin","orientation","accept","error","selectPayreqAmountInputText","KeySetPageOptions","DiscussionInfo","DiscussionOptions","getDiscussionHistoryById","keySetPageOptions","setLastId","pageOptions","lastId","setPageSize","pageSize","setReverse","reverse","setPageOptions","setId","discussionInfo","discussionOptions","setParticipantsList","participants","setLastReadMsgId","setLastMsgId","setDiscussion","discussionClient","ChatHistoryStatistics","loaded","setLoaded","totalIncome","setTotalIncome","totalOutcome","setTotalOutcome","totalFees","setTotalFees","totalSent","setTotalSent","totalReceived","setTotalReceived","amtMsatReceived","amtMsatSent","amtMsatFees","messagesSent","messagesReceived","ArrowDownOutlined","ArrowUpOutlined","jdenticon","iconCache","generateIdenticon","size","Parser","icon","toSvg","UserPreview","setVisible","findUserByAddress","addr","splitURI","URI","hostport","ChatHistory","setOldListHeight","lastMessageSeen","setLastMessageSeen","noMoreHistory","setNoMoreHistory","feeModalVisible","setFeeModalVisible","statisticsModalVisible","setStatisticsModalVisible","messageInfoModalVisible","setMessageInfoModalVisible","userPreviewVisible","setUserPreviewVisible","userPreviewUser","setUserPreviewUser","setSelectedMessage","pageLoaded","setPageLoaded","anonymousBucket","selectedMessageInfo","setSelectedMessageInfo","selectedMessageInfoHandler","chatHistoryIcon","chatHistoryUsrName","history","hidden","calculateTextAlign","chatLayout","findSenderName","calculateFlexRowDirection","calculateChatHistoryMessageColor","calculatePartialFailureIndicatorDisplay","atBottom","scrollTop","clientHeight","loadHistory","fresh","setSelectedDiscussion","oldValue","async_selectedDiscusion","previousId","on","code","setAnonymousBucket","setChatScroll","element","scroll","top","behavior","monthToStr","unixToDate","unix","format","date","hours","getHours","minutes","getMinutes","getMonth","getDate","substr","getUTCFullYear","getFullYear","DoubleRightOutlined","sideSquashed","sideActivated","setSideActivated","EllipsisOutlined","Content","innerWidth","innerHeight","left","bottom","opacity","DownCircleOutlined","locale","emptyText","flexDirection","textAlign","chatIdenticons","marginTop","paddingLeft","senderVerified","SafetyOutlined","CloseCircleOutlined","ExclamationCircleOutlined","myMessageColor","otherMessageColor","maxWidth","selectedPage","footer","msatAmtToFiat","json","messageColorsArray","UserSettings","url","Panel","checked","setAutomaticImageLoading","setItem","setSmoothAnimations","setChatIdenticons","defaultValue","setChatLayout","Option","triangle","colors","onChangeComplete","setMyMessageColor","hex","setOtherMessageColor","developerLogs","setDeveloperLogs","setSelectedCryptoUnit","setSelectedFiatUnit","label","backendVersion","setAddress","setPushAmtMsat","pushAmtMsat","setMinInputConfs","minInputConfs","setTargetConfirmationBlock","targetConfirmationBlock","channelClient","meta","setAlias","setHostport","nodeInfoClient","OpenChannel","mode","setMode","lightningAddress","setLightningAddress","pushAmount","setPushAmount","minimumInputConfirmations","setMinimumInputConfirmations","targetConfirmationBlocks","setTargetConfirmationBlocks","success","defaultActiveKey","TabPane","tab","layout","ConnectPeer","params","UserFunds","walletConfirmedBalance","setWalletConfirmedBalance","walletUnconfirmedBalance","setWalletUnconfirmedBalance","channelTotalBalance","setChannelTotalBalance","pendingChannelBalance","setPendingChannelBalance","setChannelRemoteBalance","connectPeerModalVisible","setConnectPeerModalVisible","openChannelModalVisible","setOpenChannelModalVisible","walletConfirmedSat","walletUnconfirmedSat","channelLocalMsat","Math","floor","pendingOpenLocalMsat","channelRemoteMsat","ContactInfo","NodeInfo","contact","node","setNode","setDisplayName","setContact","contactClient","SearchUsers","aliasToSearch","setaliasToSearch","addressToSearch","setAddressToSearch","searchedAlias","setSearchedAlias","searchedAddress","setSearchedAddress","userSelected","setUserSelected","friendlyName","setFriendlyName","contactAddModalActive","setContactAddModalActive","contactRemoveModalActive","setContactRemoveModalActive","searchAliasLoading","setSearchAliasLoading","searchAliasEmptyText","setSearchAliasEmptyText","searchAddressLoading","setSearchAddressLoading","searchAddressEmptyText","setSearchAddressEmptyText","enteredAlias","setEnteredAlias","searchAliasTouched","setSearchAliasTouched","aliasFormValid","setAliasFormValid","enteredAddress","setEnteredAddress","searchAddressTouched","setSearchAddressTouched","addressFormValid","setAddressFormValid","enteredAliasIsValid","enteredAddressIsValid","searchUsersByAlias","nodesList","searchUsersByAddress","onSubmit","event","SearchOutlined","itemLayout","inContacts","inDiscussion","discussions","includes","setSelectedPage","setDiscussions","oldDiscussions","MessageOutlined","UserDeleteOutlined","UserAddOutlined","parsedContact","setContacts","createContact","filter","Contacts","Logo","c13nLogo","programizeLogo","addToAccounts","account","accounts","setAccounts","oldAccounts","saveAccounts","accountsArray","Accounts","addAccountModalVisible","setAddAccountModalVisible","deleteAccountModalVisible","setDeleteAccountModalVisible","credentialsModalVisible","setCredentialsModalVisible","usernameToUse","setUsernameToUse","passwordToUse","setPasswordToUse","urlToAdd","setUrlToAdd","selectedAccount","setSelectedAccount","loadAccount","deadline","setSeconds","getSeconds","getTime","setBackendVersion","setLoadAccount","credentialsModalLogin","location","reload","sort","b","lastActive","DeleteOutlined","removeFromAccounts","formLayout","labelCol","span","wrapperCol","VersionScreen","ConnectionScreen","GroupChat","setAliasToSearch","searchLoading","setSearchLoading","searchGroupTouched","setSearchGroupTouched","enteredGroupIsValid","groupInputIsInvalid","groupModalVisible","setGroupModalVisible","groupFormIsValid","setSelectedParticipants","oldParticipants","filtered","selectedParticipants","addr_list","createGroupDiscussion","MinusOutlined","Contents","contentsProps","page","getContentPage","Side","stringToSearch","SetStringToSearch","selectedSearchOption","setSelectedSearchOption","selectedSideDiscussion","setSelectedSideDiscussion","deleteDiscussionModalActive","setDeleteDiscussionModalActive","calculateUnreadStatus","body","requestFullscreen","setFundsInitVisible","setFundsInitDisabled","removeItem","backendStatus","msgStreamActive","parseLastFundChange","lastFundChange","parseCurrentFunds","parseCurrentFiatAmount","changePage","scrollbarColor","messageCounter","disc","titleNotificationChecker","name","toLowerCase","Group","optionType","Button","chainInfo","chain","network","FundsInitialization","setKey","rtl_link","defaultAmount","defaultPushAmount","loading","setLoading","cancelText","setDisabled","getAddress","borderBottom","fontWeight","balance","https","getExchangeRates","setExchangeRates","get","resp","chunk","rates","Main","setInitialConnection","setBackendStatus","msgRxUp","setMsgRxUp","setMsgStreamActive","setSelfInfo","setChainInfo","setUsers","currentFunds","setCurrentFunds","setSideSquashed","exchangeRates","fundsInitVisible","setBalance","fetchAccountData","fetchUsers","fetchContacts","fetchDiscussions","loadSettings","loadAutomaticImageLoadingSetting","loadSmoothAnimationsSetting","loadSelectedCryptoUnit","loadSelectedFiatUnit","loadChatIdenticonsSetting","loadChatLayoutSetting","loadMyMessageColor","loadOtherMessageColor","loadDeveloperLogsSetting","calculateFundsInitialization","modalDisabled","fundColor","newAmount","oldAmount","oldFunds","fundsWrapper","mainProps","pageName","sideMenuAction","initial","old","oldStatus","chainsList","parsedContacts","contactsList","map","discussionsArray","initializeExchangeRates","upStatusChecker","setInterval","loadAccounts","streamValue","startTime","setHours","curPage","oldUsers","receivedMessage","oldPage","aliasLookup","directlyToRoom","oldSelectedDiscussion","hasFocus","Audio","notificationAudio","play","Notification","requestPermission","enterTimeout","leaveTimeout","onResize","windowWidth","App","ReactDOM","render","google_protobuf_timestamp_pb","PageOptions","skipRecent","setSkipRecent","getSkipRecent","getPageSize","setProto3IntField","readUint64","getLastId","writeUint64","getReverse","setProto3BooleanField","commit","commitHash","setVersion","setCommit","setCommitHash","getCommit","getCommitHash","setProto3StringField","getAlias","Chain","setChain","setNetwork","getChain","getNetwork","repeatedFields_","getInfo","toObjectList","getChainsList","setInfo","addChains","writeRepeatedMessage","getWrapperField","setWrapperField","clearInfo","hasInfo","getRepeatedWrapperField","setChainsList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearChainsList","pendingOpenRemoteMsat","unsettledLocalMsat","unsettledRemoteMsat","setWalletConfirmedSat","setWalletUnconfirmedSat","setChannelLocalMsat","setChannelRemoteMsat","setPendingOpenLocalMsat","setPendingOpenRemoteMsat","setUnsettledLocalMsat","setUnsettledRemoteMsat","getWalletConfirmedSat","getWalletUnconfirmedSat","getChannelLocalMsat","getChannelRemoteMsat","getPendingOpenLocalMsat","getPendingOpenRemoteMsat","getUnsettledLocalMsat","getUnsettledRemoteMsat","getNodesList","addNodes","setNodesList","clearNodesList","getHostport","readUint32","getAmtMsat","getPushAmtMsat","getMinInputConfs","getTargetConfirmationBlock","writeUint32","fundingTxid","outputIndex","setFundingTxid","setOutputIndex","getFundingTxid","getOutputIndex","getNode","getId","getDisplayName","clearNode","hasNode","getContactsList","addContacts","setContactsList","clearContactsList","getContact","clearContact","hasContact","receiver","getSentTimestamp","Timestamp","receivedTimestamp","getReceivedTimestamp","getPaymentRoutesList","PaymentRoute","setSender","setReceiver","setSenderVerified","setTotalFeesMsat","setSentTimestamp","setReceivedTimestamp","addPaymentRoutes","getDiscussionId","getSender","getReceiver","getSenderVerified","getPayload","getTotalFeesMsat","getPreimage","getPayReq","clearSentTimestamp","hasSentTimestamp","clearReceivedTimestamp","hasReceivedTimestamp","setPaymentRoutesList","clearPaymentRoutesList","getHopsList","PaymentHop","totalTimelock","addHops","setTotalTimelock","setRouteAmtMsat","setRouteFeesMsat","getTotalTimelock","getRouteAmtMsat","getRouteFeesMsat","setHopsList","clearHopsList","chanId","amtToForwardMsat","setChanId","setHopAddress","setAmtToForwardMsat","setFeeMsat","getChanId","getHopAddress","getAmtToForwardMsat","getFeeMsat","getFeeLimitMsat","getAnonymous","getOptions","clearOptions","hasOptions","successProb","getMessage","setSuccessProb","setMessage","getSuccessProb","setProto3FloatField","clearMessage","hasMessage","getSentMessage","setSentMessage","clearSentMessage","hasSentMessage","getReceivedMessage","setReceivedMessage","clearReceivedMessage","hasReceivedMessage","getRepeatedField","addParticipants","getParticipantsList","writeRepeatedString","getLastReadMsgId","getLastMsgId","addToRepeatedField","clearParticipantsList","getDiscussion","clearDiscussion","hasDiscussion","getPageOptions","clearPageOptions","hasPageOptions","setAmtMsatSent","setAmtMsatReceived","setAmtMsatFees","setMessagesSent","setMessagesReceived","getAmtMsatSent","getAmtMsatReceived","getAmtMsatFees","getMessagesSent","getMessagesReceived","cryptoRate","toFixed","rate","btc","satToCurrentCryptoUnit","satAmt","msatAmt","unit","timeout","responseType","image64"],"mappings":"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","file":"static/js/main.be44787a.chunk.js","sourcesContent":["/**\n * @fileoverview gRPC-Web generated client stub for services\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\n\nvar google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')\n\nvar validator_pb = require('./validator_pb.js')\nconst proto = {};\nproto.services = require('./rpc_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.NodeInfoServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.NodeInfoServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.VersionRequest,\n *   !proto.services.Version>}\n */\nconst methodDescriptor_NodeInfoService_GetVersion = new grpc.web.MethodDescriptor(\n  '/services.NodeInfoService/GetVersion',\n  grpc.web.MethodType.UNARY,\n  proto.services.VersionRequest,\n  proto.services.Version,\n  /**\n   * @param {!proto.services.VersionRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.Version.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.VersionRequest,\n *   !proto.services.Version>}\n */\nconst methodInfo_NodeInfoService_GetVersion = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.Version,\n  /**\n   * @param {!proto.services.VersionRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.Version.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.VersionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.Version)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.Version>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.NodeInfoServiceClient.prototype.getVersion =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.NodeInfoService/GetVersion',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetVersion,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.VersionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.Version>}\n *     Promise that resolves to the response\n */\nproto.services.NodeInfoServicePromiseClient.prototype.getVersion =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.NodeInfoService/GetVersion',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetVersion);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.SelfInfoRequest,\n *   !proto.services.SelfInfoResponse>}\n */\nconst methodDescriptor_NodeInfoService_GetSelfInfo = new grpc.web.MethodDescriptor(\n  '/services.NodeInfoService/GetSelfInfo',\n  grpc.web.MethodType.UNARY,\n  proto.services.SelfInfoRequest,\n  proto.services.SelfInfoResponse,\n  /**\n   * @param {!proto.services.SelfInfoRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SelfInfoResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.SelfInfoRequest,\n *   !proto.services.SelfInfoResponse>}\n */\nconst methodInfo_NodeInfoService_GetSelfInfo = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.SelfInfoResponse,\n  /**\n   * @param {!proto.services.SelfInfoRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SelfInfoResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.SelfInfoRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.SelfInfoResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.SelfInfoResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.NodeInfoServiceClient.prototype.getSelfInfo =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.NodeInfoService/GetSelfInfo',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetSelfInfo,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.SelfInfoRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.SelfInfoResponse>}\n *     Promise that resolves to the response\n */\nproto.services.NodeInfoServicePromiseClient.prototype.getSelfInfo =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.NodeInfoService/GetSelfInfo',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetSelfInfo);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.SelfBalanceRequest,\n *   !proto.services.SelfBalanceResponse>}\n */\nconst methodDescriptor_NodeInfoService_GetSelfBalance = new grpc.web.MethodDescriptor(\n  '/services.NodeInfoService/GetSelfBalance',\n  grpc.web.MethodType.UNARY,\n  proto.services.SelfBalanceRequest,\n  proto.services.SelfBalanceResponse,\n  /**\n   * @param {!proto.services.SelfBalanceRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SelfBalanceResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.SelfBalanceRequest,\n *   !proto.services.SelfBalanceResponse>}\n */\nconst methodInfo_NodeInfoService_GetSelfBalance = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.SelfBalanceResponse,\n  /**\n   * @param {!proto.services.SelfBalanceRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SelfBalanceResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.SelfBalanceRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.SelfBalanceResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.SelfBalanceResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.NodeInfoServiceClient.prototype.getSelfBalance =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.NodeInfoService/GetSelfBalance',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetSelfBalance,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.SelfBalanceRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.SelfBalanceResponse>}\n *     Promise that resolves to the response\n */\nproto.services.NodeInfoServicePromiseClient.prototype.getSelfBalance =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.NodeInfoService/GetSelfBalance',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetSelfBalance);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.GetNodesRequest,\n *   !proto.services.NodeInfoResponse>}\n */\nconst methodDescriptor_NodeInfoService_GetNodes = new grpc.web.MethodDescriptor(\n  '/services.NodeInfoService/GetNodes',\n  grpc.web.MethodType.UNARY,\n  proto.services.GetNodesRequest,\n  proto.services.NodeInfoResponse,\n  /**\n   * @param {!proto.services.GetNodesRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.NodeInfoResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.GetNodesRequest,\n *   !proto.services.NodeInfoResponse>}\n */\nconst methodInfo_NodeInfoService_GetNodes = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.NodeInfoResponse,\n  /**\n   * @param {!proto.services.GetNodesRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.NodeInfoResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.GetNodesRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.NodeInfoResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.NodeInfoResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.NodeInfoServiceClient.prototype.getNodes =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.NodeInfoService/GetNodes',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetNodes,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.GetNodesRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.NodeInfoResponse>}\n *     Promise that resolves to the response\n */\nproto.services.NodeInfoServicePromiseClient.prototype.getNodes =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.NodeInfoService/GetNodes',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_GetNodes);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.SearchNodeByAddressRequest,\n *   !proto.services.NodeInfoResponse>}\n */\nconst methodDescriptor_NodeInfoService_SearchNodeByAddress = new grpc.web.MethodDescriptor(\n  '/services.NodeInfoService/SearchNodeByAddress',\n  grpc.web.MethodType.UNARY,\n  proto.services.SearchNodeByAddressRequest,\n  proto.services.NodeInfoResponse,\n  /**\n   * @param {!proto.services.SearchNodeByAddressRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.NodeInfoResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.SearchNodeByAddressRequest,\n *   !proto.services.NodeInfoResponse>}\n */\nconst methodInfo_NodeInfoService_SearchNodeByAddress = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.NodeInfoResponse,\n  /**\n   * @param {!proto.services.SearchNodeByAddressRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.NodeInfoResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.SearchNodeByAddressRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.NodeInfoResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.NodeInfoResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.NodeInfoServiceClient.prototype.searchNodeByAddress =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.NodeInfoService/SearchNodeByAddress',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_SearchNodeByAddress,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.SearchNodeByAddressRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.NodeInfoResponse>}\n *     Promise that resolves to the response\n */\nproto.services.NodeInfoServicePromiseClient.prototype.searchNodeByAddress =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.NodeInfoService/SearchNodeByAddress',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_SearchNodeByAddress);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.SearchNodeByAliasRequest,\n *   !proto.services.NodeInfoResponse>}\n */\nconst methodDescriptor_NodeInfoService_SearchNodeByAlias = new grpc.web.MethodDescriptor(\n  '/services.NodeInfoService/SearchNodeByAlias',\n  grpc.web.MethodType.UNARY,\n  proto.services.SearchNodeByAliasRequest,\n  proto.services.NodeInfoResponse,\n  /**\n   * @param {!proto.services.SearchNodeByAliasRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.NodeInfoResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.SearchNodeByAliasRequest,\n *   !proto.services.NodeInfoResponse>}\n */\nconst methodInfo_NodeInfoService_SearchNodeByAlias = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.NodeInfoResponse,\n  /**\n   * @param {!proto.services.SearchNodeByAliasRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.NodeInfoResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.SearchNodeByAliasRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.NodeInfoResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.NodeInfoResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.NodeInfoServiceClient.prototype.searchNodeByAlias =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.NodeInfoService/SearchNodeByAlias',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_SearchNodeByAlias,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.SearchNodeByAliasRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.NodeInfoResponse>}\n *     Promise that resolves to the response\n */\nproto.services.NodeInfoServicePromiseClient.prototype.searchNodeByAlias =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.NodeInfoService/SearchNodeByAlias',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_SearchNodeByAlias);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.ConnectNodeRequest,\n *   !proto.services.ConnectNodeResponse>}\n */\nconst methodDescriptor_NodeInfoService_ConnectNode = new grpc.web.MethodDescriptor(\n  '/services.NodeInfoService/ConnectNode',\n  grpc.web.MethodType.UNARY,\n  proto.services.ConnectNodeRequest,\n  proto.services.ConnectNodeResponse,\n  /**\n   * @param {!proto.services.ConnectNodeRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.ConnectNodeResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.ConnectNodeRequest,\n *   !proto.services.ConnectNodeResponse>}\n */\nconst methodInfo_NodeInfoService_ConnectNode = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.ConnectNodeResponse,\n  /**\n   * @param {!proto.services.ConnectNodeRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.ConnectNodeResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.ConnectNodeRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.ConnectNodeResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.ConnectNodeResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.NodeInfoServiceClient.prototype.connectNode =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.NodeInfoService/ConnectNode',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_ConnectNode,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.ConnectNodeRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.ConnectNodeResponse>}\n *     Promise that resolves to the response\n */\nproto.services.NodeInfoServicePromiseClient.prototype.connectNode =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.NodeInfoService/ConnectNode',\n      request,\n      metadata || {},\n      methodDescriptor_NodeInfoService_ConnectNode);\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.ChannelServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.ChannelServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.OpenChannelRequest,\n *   !proto.services.OpenChannelResponse>}\n */\nconst methodDescriptor_ChannelService_OpenChannel = new grpc.web.MethodDescriptor(\n  '/services.ChannelService/OpenChannel',\n  grpc.web.MethodType.UNARY,\n  proto.services.OpenChannelRequest,\n  proto.services.OpenChannelResponse,\n  /**\n   * @param {!proto.services.OpenChannelRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.OpenChannelResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.OpenChannelRequest,\n *   !proto.services.OpenChannelResponse>}\n */\nconst methodInfo_ChannelService_OpenChannel = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.OpenChannelResponse,\n  /**\n   * @param {!proto.services.OpenChannelRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.OpenChannelResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.OpenChannelRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.OpenChannelResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.OpenChannelResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.ChannelServiceClient.prototype.openChannel =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.ChannelService/OpenChannel',\n      request,\n      metadata || {},\n      methodDescriptor_ChannelService_OpenChannel,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.OpenChannelRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.OpenChannelResponse>}\n *     Promise that resolves to the response\n */\nproto.services.ChannelServicePromiseClient.prototype.openChannel =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.ChannelService/OpenChannel',\n      request,\n      metadata || {},\n      methodDescriptor_ChannelService_OpenChannel);\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.ContactServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.ContactServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.GetContactsRequest,\n *   !proto.services.GetContactsResponse>}\n */\nconst methodDescriptor_ContactService_GetContacts = new grpc.web.MethodDescriptor(\n  '/services.ContactService/GetContacts',\n  grpc.web.MethodType.UNARY,\n  proto.services.GetContactsRequest,\n  proto.services.GetContactsResponse,\n  /**\n   * @param {!proto.services.GetContactsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetContactsResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.GetContactsRequest,\n *   !proto.services.GetContactsResponse>}\n */\nconst methodInfo_ContactService_GetContacts = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.GetContactsResponse,\n  /**\n   * @param {!proto.services.GetContactsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetContactsResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.GetContactsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.GetContactsResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.GetContactsResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.ContactServiceClient.prototype.getContacts =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.ContactService/GetContacts',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_GetContacts,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.GetContactsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.GetContactsResponse>}\n *     Promise that resolves to the response\n */\nproto.services.ContactServicePromiseClient.prototype.getContacts =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.ContactService/GetContacts',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_GetContacts);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.AddContactRequest,\n *   !proto.services.AddContactResponse>}\n */\nconst methodDescriptor_ContactService_AddContact = new grpc.web.MethodDescriptor(\n  '/services.ContactService/AddContact',\n  grpc.web.MethodType.UNARY,\n  proto.services.AddContactRequest,\n  proto.services.AddContactResponse,\n  /**\n   * @param {!proto.services.AddContactRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.AddContactResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.AddContactRequest,\n *   !proto.services.AddContactResponse>}\n */\nconst methodInfo_ContactService_AddContact = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.AddContactResponse,\n  /**\n   * @param {!proto.services.AddContactRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.AddContactResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.AddContactRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.AddContactResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.AddContactResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.ContactServiceClient.prototype.addContact =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.ContactService/AddContact',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_AddContact,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.AddContactRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.AddContactResponse>}\n *     Promise that resolves to the response\n */\nproto.services.ContactServicePromiseClient.prototype.addContact =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.ContactService/AddContact',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_AddContact);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.RemoveContactByIDRequest,\n *   !proto.services.RemoveContactResponse>}\n */\nconst methodDescriptor_ContactService_RemoveContactByID = new grpc.web.MethodDescriptor(\n  '/services.ContactService/RemoveContactByID',\n  grpc.web.MethodType.UNARY,\n  proto.services.RemoveContactByIDRequest,\n  proto.services.RemoveContactResponse,\n  /**\n   * @param {!proto.services.RemoveContactByIDRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.RemoveContactResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.RemoveContactByIDRequest,\n *   !proto.services.RemoveContactResponse>}\n */\nconst methodInfo_ContactService_RemoveContactByID = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.RemoveContactResponse,\n  /**\n   * @param {!proto.services.RemoveContactByIDRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.RemoveContactResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.RemoveContactByIDRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.RemoveContactResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.RemoveContactResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.ContactServiceClient.prototype.removeContactByID =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.ContactService/RemoveContactByID',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_RemoveContactByID,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.RemoveContactByIDRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.RemoveContactResponse>}\n *     Promise that resolves to the response\n */\nproto.services.ContactServicePromiseClient.prototype.removeContactByID =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.ContactService/RemoveContactByID',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_RemoveContactByID);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.RemoveContactByAddressRequest,\n *   !proto.services.RemoveContactResponse>}\n */\nconst methodDescriptor_ContactService_RemoveContactByAddress = new grpc.web.MethodDescriptor(\n  '/services.ContactService/RemoveContactByAddress',\n  grpc.web.MethodType.UNARY,\n  proto.services.RemoveContactByAddressRequest,\n  proto.services.RemoveContactResponse,\n  /**\n   * @param {!proto.services.RemoveContactByAddressRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.RemoveContactResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.RemoveContactByAddressRequest,\n *   !proto.services.RemoveContactResponse>}\n */\nconst methodInfo_ContactService_RemoveContactByAddress = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.RemoveContactResponse,\n  /**\n   * @param {!proto.services.RemoveContactByAddressRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.RemoveContactResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.RemoveContactByAddressRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.RemoveContactResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.RemoveContactResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.ContactServiceClient.prototype.removeContactByAddress =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.ContactService/RemoveContactByAddress',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_RemoveContactByAddress,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.RemoveContactByAddressRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.RemoveContactResponse>}\n *     Promise that resolves to the response\n */\nproto.services.ContactServicePromiseClient.prototype.removeContactByAddress =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.ContactService/RemoveContactByAddress',\n      request,\n      metadata || {},\n      methodDescriptor_ContactService_RemoveContactByAddress);\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.MessageServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.MessageServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.EstimateMessageRequest,\n *   !proto.services.EstimateMessageResponse>}\n */\nconst methodDescriptor_MessageService_EstimateMessage = new grpc.web.MethodDescriptor(\n  '/services.MessageService/EstimateMessage',\n  grpc.web.MethodType.UNARY,\n  proto.services.EstimateMessageRequest,\n  proto.services.EstimateMessageResponse,\n  /**\n   * @param {!proto.services.EstimateMessageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.EstimateMessageResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.EstimateMessageRequest,\n *   !proto.services.EstimateMessageResponse>}\n */\nconst methodInfo_MessageService_EstimateMessage = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.EstimateMessageResponse,\n  /**\n   * @param {!proto.services.EstimateMessageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.EstimateMessageResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.EstimateMessageRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.EstimateMessageResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.EstimateMessageResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.MessageServiceClient.prototype.estimateMessage =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.MessageService/EstimateMessage',\n      request,\n      metadata || {},\n      methodDescriptor_MessageService_EstimateMessage,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.EstimateMessageRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.EstimateMessageResponse>}\n *     Promise that resolves to the response\n */\nproto.services.MessageServicePromiseClient.prototype.estimateMessage =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.MessageService/EstimateMessage',\n      request,\n      metadata || {},\n      methodDescriptor_MessageService_EstimateMessage);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.SendMessageRequest,\n *   !proto.services.SendMessageResponse>}\n */\nconst methodDescriptor_MessageService_SendMessage = new grpc.web.MethodDescriptor(\n  '/services.MessageService/SendMessage',\n  grpc.web.MethodType.UNARY,\n  proto.services.SendMessageRequest,\n  proto.services.SendMessageResponse,\n  /**\n   * @param {!proto.services.SendMessageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SendMessageResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.SendMessageRequest,\n *   !proto.services.SendMessageResponse>}\n */\nconst methodInfo_MessageService_SendMessage = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.SendMessageResponse,\n  /**\n   * @param {!proto.services.SendMessageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SendMessageResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.SendMessageRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.SendMessageResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.SendMessageResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.MessageServiceClient.prototype.sendMessage =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.MessageService/SendMessage',\n      request,\n      metadata || {},\n      methodDescriptor_MessageService_SendMessage,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.SendMessageRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.SendMessageResponse>}\n *     Promise that resolves to the response\n */\nproto.services.MessageServicePromiseClient.prototype.sendMessage =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.MessageService/SendMessage',\n      request,\n      metadata || {},\n      methodDescriptor_MessageService_SendMessage);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.SubscribeMessageRequest,\n *   !proto.services.SubscribeMessageResponse>}\n */\nconst methodDescriptor_MessageService_SubscribeMessages = new grpc.web.MethodDescriptor(\n  '/services.MessageService/SubscribeMessages',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.services.SubscribeMessageRequest,\n  proto.services.SubscribeMessageResponse,\n  /**\n   * @param {!proto.services.SubscribeMessageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SubscribeMessageResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.SubscribeMessageRequest,\n *   !proto.services.SubscribeMessageResponse>}\n */\nconst methodInfo_MessageService_SubscribeMessages = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.SubscribeMessageResponse,\n  /**\n   * @param {!proto.services.SubscribeMessageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.SubscribeMessageResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.SubscribeMessageRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.services.SubscribeMessageResponse>}\n *     The XHR Node Readable Stream\n */\nproto.services.MessageServiceClient.prototype.subscribeMessages =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/services.MessageService/SubscribeMessages',\n      request,\n      metadata || {},\n      methodDescriptor_MessageService_SubscribeMessages);\n};\n\n\n/**\n * @param {!proto.services.SubscribeMessageRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.services.SubscribeMessageResponse>}\n *     The XHR Node Readable Stream\n */\nproto.services.MessageServicePromiseClient.prototype.subscribeMessages =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/services.MessageService/SubscribeMessages',\n      request,\n      metadata || {},\n      methodDescriptor_MessageService_SubscribeMessages);\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.DiscussionServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.services.DiscussionServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.GetDiscussionsRequest,\n *   !proto.services.GetDiscussionsResponse>}\n */\nconst methodDescriptor_DiscussionService_GetDiscussions = new grpc.web.MethodDescriptor(\n  '/services.DiscussionService/GetDiscussions',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.services.GetDiscussionsRequest,\n  proto.services.GetDiscussionsResponse,\n  /**\n   * @param {!proto.services.GetDiscussionsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetDiscussionsResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.GetDiscussionsRequest,\n *   !proto.services.GetDiscussionsResponse>}\n */\nconst methodInfo_DiscussionService_GetDiscussions = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.GetDiscussionsResponse,\n  /**\n   * @param {!proto.services.GetDiscussionsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetDiscussionsResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.GetDiscussionsRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.services.GetDiscussionsResponse>}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServiceClient.prototype.getDiscussions =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/services.DiscussionService/GetDiscussions',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_GetDiscussions);\n};\n\n\n/**\n * @param {!proto.services.GetDiscussionsRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.services.GetDiscussionsResponse>}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServicePromiseClient.prototype.getDiscussions =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/services.DiscussionService/GetDiscussions',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_GetDiscussions);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.GetDiscussionHistoryByIDRequest,\n *   !proto.services.GetDiscussionHistoryResponse>}\n */\nconst methodDescriptor_DiscussionService_GetDiscussionHistoryByID = new grpc.web.MethodDescriptor(\n  '/services.DiscussionService/GetDiscussionHistoryByID',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.services.GetDiscussionHistoryByIDRequest,\n  proto.services.GetDiscussionHistoryResponse,\n  /**\n   * @param {!proto.services.GetDiscussionHistoryByIDRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetDiscussionHistoryResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.GetDiscussionHistoryByIDRequest,\n *   !proto.services.GetDiscussionHistoryResponse>}\n */\nconst methodInfo_DiscussionService_GetDiscussionHistoryByID = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.GetDiscussionHistoryResponse,\n  /**\n   * @param {!proto.services.GetDiscussionHistoryByIDRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetDiscussionHistoryResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.GetDiscussionHistoryByIDRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.services.GetDiscussionHistoryResponse>}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServiceClient.prototype.getDiscussionHistoryByID =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/services.DiscussionService/GetDiscussionHistoryByID',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_GetDiscussionHistoryByID);\n};\n\n\n/**\n * @param {!proto.services.GetDiscussionHistoryByIDRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.services.GetDiscussionHistoryResponse>}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServicePromiseClient.prototype.getDiscussionHistoryByID =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/services.DiscussionService/GetDiscussionHistoryByID',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_GetDiscussionHistoryByID);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.GetDiscussionStatisticsRequest,\n *   !proto.services.GetDiscussionStatisticsResponse>}\n */\nconst methodDescriptor_DiscussionService_GetDiscussionStatistics = new grpc.web.MethodDescriptor(\n  '/services.DiscussionService/GetDiscussionStatistics',\n  grpc.web.MethodType.UNARY,\n  proto.services.GetDiscussionStatisticsRequest,\n  proto.services.GetDiscussionStatisticsResponse,\n  /**\n   * @param {!proto.services.GetDiscussionStatisticsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetDiscussionStatisticsResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.GetDiscussionStatisticsRequest,\n *   !proto.services.GetDiscussionStatisticsResponse>}\n */\nconst methodInfo_DiscussionService_GetDiscussionStatistics = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.GetDiscussionStatisticsResponse,\n  /**\n   * @param {!proto.services.GetDiscussionStatisticsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.GetDiscussionStatisticsResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.GetDiscussionStatisticsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.GetDiscussionStatisticsResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.GetDiscussionStatisticsResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServiceClient.prototype.getDiscussionStatistics =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.DiscussionService/GetDiscussionStatistics',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_GetDiscussionStatistics,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.GetDiscussionStatisticsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.GetDiscussionStatisticsResponse>}\n *     Promise that resolves to the response\n */\nproto.services.DiscussionServicePromiseClient.prototype.getDiscussionStatistics =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.DiscussionService/GetDiscussionStatistics',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_GetDiscussionStatistics);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.AddDiscussionRequest,\n *   !proto.services.AddDiscussionResponse>}\n */\nconst methodDescriptor_DiscussionService_AddDiscussion = new grpc.web.MethodDescriptor(\n  '/services.DiscussionService/AddDiscussion',\n  grpc.web.MethodType.UNARY,\n  proto.services.AddDiscussionRequest,\n  proto.services.AddDiscussionResponse,\n  /**\n   * @param {!proto.services.AddDiscussionRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.AddDiscussionResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.AddDiscussionRequest,\n *   !proto.services.AddDiscussionResponse>}\n */\nconst methodInfo_DiscussionService_AddDiscussion = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.AddDiscussionResponse,\n  /**\n   * @param {!proto.services.AddDiscussionRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.AddDiscussionResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.AddDiscussionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.AddDiscussionResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.AddDiscussionResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServiceClient.prototype.addDiscussion =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.DiscussionService/AddDiscussion',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_AddDiscussion,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.AddDiscussionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.AddDiscussionResponse>}\n *     Promise that resolves to the response\n */\nproto.services.DiscussionServicePromiseClient.prototype.addDiscussion =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.DiscussionService/AddDiscussion',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_AddDiscussion);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.UpdateDiscussionLastReadRequest,\n *   !proto.services.UpdateDiscussionResponse>}\n */\nconst methodDescriptor_DiscussionService_UpdateDiscussionLastRead = new grpc.web.MethodDescriptor(\n  '/services.DiscussionService/UpdateDiscussionLastRead',\n  grpc.web.MethodType.UNARY,\n  proto.services.UpdateDiscussionLastReadRequest,\n  proto.services.UpdateDiscussionResponse,\n  /**\n   * @param {!proto.services.UpdateDiscussionLastReadRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.UpdateDiscussionResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.UpdateDiscussionLastReadRequest,\n *   !proto.services.UpdateDiscussionResponse>}\n */\nconst methodInfo_DiscussionService_UpdateDiscussionLastRead = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.UpdateDiscussionResponse,\n  /**\n   * @param {!proto.services.UpdateDiscussionLastReadRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.UpdateDiscussionResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.UpdateDiscussionLastReadRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.UpdateDiscussionResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.UpdateDiscussionResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServiceClient.prototype.updateDiscussionLastRead =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.DiscussionService/UpdateDiscussionLastRead',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_UpdateDiscussionLastRead,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.UpdateDiscussionLastReadRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.UpdateDiscussionResponse>}\n *     Promise that resolves to the response\n */\nproto.services.DiscussionServicePromiseClient.prototype.updateDiscussionLastRead =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.DiscussionService/UpdateDiscussionLastRead',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_UpdateDiscussionLastRead);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.services.RemoveDiscussionRequest,\n *   !proto.services.RemoveDiscussionResponse>}\n */\nconst methodDescriptor_DiscussionService_RemoveDiscussion = new grpc.web.MethodDescriptor(\n  '/services.DiscussionService/RemoveDiscussion',\n  grpc.web.MethodType.UNARY,\n  proto.services.RemoveDiscussionRequest,\n  proto.services.RemoveDiscussionResponse,\n  /**\n   * @param {!proto.services.RemoveDiscussionRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.RemoveDiscussionResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.services.RemoveDiscussionRequest,\n *   !proto.services.RemoveDiscussionResponse>}\n */\nconst methodInfo_DiscussionService_RemoveDiscussion = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.services.RemoveDiscussionResponse,\n  /**\n   * @param {!proto.services.RemoveDiscussionRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.services.RemoveDiscussionResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.services.RemoveDiscussionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.services.RemoveDiscussionResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.services.RemoveDiscussionResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.services.DiscussionServiceClient.prototype.removeDiscussion =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/services.DiscussionService/RemoveDiscussion',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_RemoveDiscussion,\n      callback);\n};\n\n\n/**\n * @param {!proto.services.RemoveDiscussionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.services.RemoveDiscussionResponse>}\n *     Promise that resolves to the response\n */\nproto.services.DiscussionServicePromiseClient.prototype.removeDiscussion =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/services.DiscussionService/RemoveDiscussion',\n      request,\n      metadata || {},\n      methodDescriptor_DiscussionService_RemoveDiscussion);\n};\n\n\nmodule.exports = proto.services;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar google_protobuf_descriptor_pb = require('google-protobuf/google/protobuf/descriptor_pb.js');\ngoog.exportSymbol('proto.validator.FieldValidator', null, global);\ngoog.exportSymbol('proto.validator.OneofValidator', null, global);\ngoog.exportSymbol('proto.validator.field', null, global);\ngoog.exportSymbol('proto.validator.oneof', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.validator.FieldValidator = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.validator.FieldValidator, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.validator.FieldValidator.displayName = 'proto.validator.FieldValidator';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.validator.FieldValidator.prototype.toObject = function(opt_includeInstance) {\n    return proto.validator.FieldValidator.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.validator.FieldValidator} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.validator.FieldValidator.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      regex: jspb.Message.getField(msg, 1),\n      intGt: jspb.Message.getField(msg, 2),\n      intLt: jspb.Message.getField(msg, 3),\n      msgExists: jspb.Message.getField(msg, 4),\n      humanError: jspb.Message.getField(msg, 5),\n      floatGt: jspb.Message.getOptionalFloatingPointField(msg, 6),\n      floatLt: jspb.Message.getOptionalFloatingPointField(msg, 7),\n      floatEpsilon: jspb.Message.getOptionalFloatingPointField(msg, 8),\n      floatGte: jspb.Message.getOptionalFloatingPointField(msg, 9),\n      floatLte: jspb.Message.getOptionalFloatingPointField(msg, 10),\n      stringNotEmpty: jspb.Message.getField(msg, 11),\n      repeatedCountMin: jspb.Message.getField(msg, 12),\n      repeatedCountMax: jspb.Message.getField(msg, 13),\n      lengthGt: jspb.Message.getField(msg, 14),\n      lengthLt: jspb.Message.getField(msg, 15),\n      lengthEq: jspb.Message.getField(msg, 16),\n      isInEnum: jspb.Message.getField(msg, 17),\n      uuidVer: jspb.Message.getField(msg, 18)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.validator.FieldValidator}\n */\nproto.validator.FieldValidator.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.validator.FieldValidator;\n  return proto.validator.FieldValidator.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.validator.FieldValidator} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.validator.FieldValidator}\n */\nproto.validator.FieldValidator.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRegex(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setIntGt(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setIntLt(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setMsgExists(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHumanError(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setFloatGt(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setFloatLt(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setFloatEpsilon(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setFloatGte(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setFloatLte(value);\n      break;\n    case 11:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setStringNotEmpty(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRepeatedCountMin(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRepeatedCountMax(value);\n      break;\n    case 14:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLengthGt(value);\n      break;\n    case 15:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLengthLt(value);\n      break;\n    case 16:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLengthEq(value);\n      break;\n    case 17:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsInEnum(value);\n      break;\n    case 18:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setUuidVer(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.validator.FieldValidator.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.validator.FieldValidator.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.validator.FieldValidator} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.validator.FieldValidator.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeDouble(\n      6,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeDouble(\n      7,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 8));\n  if (f != null) {\n    writer.writeDouble(\n      8,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 9));\n  if (f != null) {\n    writer.writeDouble(\n      9,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 10));\n  if (f != null) {\n    writer.writeDouble(\n      10,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));\n  if (f != null) {\n    writer.writeBool(\n      11,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 12));\n  if (f != null) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 13));\n  if (f != null) {\n    writer.writeInt64(\n      13,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 14));\n  if (f != null) {\n    writer.writeInt64(\n      14,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 15));\n  if (f != null) {\n    writer.writeInt64(\n      15,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 16));\n  if (f != null) {\n    writer.writeInt64(\n      16,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));\n  if (f != null) {\n    writer.writeBool(\n      17,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 18));\n  if (f != null) {\n    writer.writeInt32(\n      18,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string regex = 1;\n * @return {string}\n */\nproto.validator.FieldValidator.prototype.getRegex = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.validator.FieldValidator.prototype.setRegex = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearRegex = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasRegex = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int64 int_gt = 2;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getIntGt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setIntGt = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearIntGt = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasIntGt = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 int_lt = 3;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getIntLt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setIntLt = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearIntLt = function() {\n  jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasIntLt = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bool msg_exists = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.validator.FieldValidator.prototype.getMsgExists = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.validator.FieldValidator.prototype.setMsgExists = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearMsgExists = function() {\n  jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasMsgExists = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional string human_error = 5;\n * @return {string}\n */\nproto.validator.FieldValidator.prototype.getHumanError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.validator.FieldValidator.prototype.setHumanError = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearHumanError = function() {\n  jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasHumanError = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional double float_gt = 6;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getFloatGt = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setFloatGt = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearFloatGt = function() {\n  jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasFloatGt = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional double float_lt = 7;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getFloatLt = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setFloatLt = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearFloatLt = function() {\n  jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasFloatLt = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional double float_epsilon = 8;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getFloatEpsilon = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setFloatEpsilon = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearFloatEpsilon = function() {\n  jspb.Message.setField(this, 8, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasFloatEpsilon = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional double float_gte = 9;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getFloatGte = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setFloatGte = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearFloatGte = function() {\n  jspb.Message.setField(this, 9, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasFloatGte = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n/**\n * optional double float_lte = 10;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getFloatLte = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 10, 0.0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setFloatLte = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearFloatLte = function() {\n  jspb.Message.setField(this, 10, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasFloatLte = function() {\n  return jspb.Message.getField(this, 10) != null;\n};\n\n\n/**\n * optional bool string_not_empty = 11;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.validator.FieldValidator.prototype.getStringNotEmpty = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));\n};\n\n\n/** @param {boolean} value */\nproto.validator.FieldValidator.prototype.setStringNotEmpty = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearStringNotEmpty = function() {\n  jspb.Message.setField(this, 11, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasStringNotEmpty = function() {\n  return jspb.Message.getField(this, 11) != null;\n};\n\n\n/**\n * optional int64 repeated_count_min = 12;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getRepeatedCountMin = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setRepeatedCountMin = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearRepeatedCountMin = function() {\n  jspb.Message.setField(this, 12, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasRepeatedCountMin = function() {\n  return jspb.Message.getField(this, 12) != null;\n};\n\n\n/**\n * optional int64 repeated_count_max = 13;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getRepeatedCountMax = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setRepeatedCountMax = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearRepeatedCountMax = function() {\n  jspb.Message.setField(this, 13, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasRepeatedCountMax = function() {\n  return jspb.Message.getField(this, 13) != null;\n};\n\n\n/**\n * optional int64 length_gt = 14;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getLengthGt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setLengthGt = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearLengthGt = function() {\n  jspb.Message.setField(this, 14, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasLengthGt = function() {\n  return jspb.Message.getField(this, 14) != null;\n};\n\n\n/**\n * optional int64 length_lt = 15;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getLengthLt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setLengthLt = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearLengthLt = function() {\n  jspb.Message.setField(this, 15, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasLengthLt = function() {\n  return jspb.Message.getField(this, 15) != null;\n};\n\n\n/**\n * optional int64 length_eq = 16;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getLengthEq = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setLengthEq = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearLengthEq = function() {\n  jspb.Message.setField(this, 16, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasLengthEq = function() {\n  return jspb.Message.getField(this, 16) != null;\n};\n\n\n/**\n * optional bool is_in_enum = 17;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.validator.FieldValidator.prototype.getIsInEnum = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 17, false));\n};\n\n\n/** @param {boolean} value */\nproto.validator.FieldValidator.prototype.setIsInEnum = function(value) {\n  jspb.Message.setField(this, 17, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearIsInEnum = function() {\n  jspb.Message.setField(this, 17, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasIsInEnum = function() {\n  return jspb.Message.getField(this, 17) != null;\n};\n\n\n/**\n * optional int32 uuid_ver = 18;\n * @return {number}\n */\nproto.validator.FieldValidator.prototype.getUuidVer = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));\n};\n\n\n/** @param {number} value */\nproto.validator.FieldValidator.prototype.setUuidVer = function(value) {\n  jspb.Message.setField(this, 18, value);\n};\n\n\nproto.validator.FieldValidator.prototype.clearUuidVer = function() {\n  jspb.Message.setField(this, 18, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.FieldValidator.prototype.hasUuidVer = function() {\n  return jspb.Message.getField(this, 18) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.validator.OneofValidator = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.validator.OneofValidator, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.validator.OneofValidator.displayName = 'proto.validator.OneofValidator';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.validator.OneofValidator.prototype.toObject = function(opt_includeInstance) {\n    return proto.validator.OneofValidator.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.validator.OneofValidator} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.validator.OneofValidator.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      required: jspb.Message.getField(msg, 1)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.validator.OneofValidator}\n */\nproto.validator.OneofValidator.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.validator.OneofValidator;\n  return proto.validator.OneofValidator.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.validator.OneofValidator} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.validator.OneofValidator}\n */\nproto.validator.OneofValidator.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setRequired(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.validator.OneofValidator.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.validator.OneofValidator.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.validator.OneofValidator} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.validator.OneofValidator.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool required = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.validator.OneofValidator.prototype.getRequired = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.validator.OneofValidator.prototype.setRequired = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.validator.OneofValidator.prototype.clearRequired = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.validator.OneofValidator.prototype.hasRequired = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `field`.\n * @type {!jspb.ExtensionFieldInfo<!proto.validator.FieldValidator>}\n */\nproto.validator.field = new jspb.ExtensionFieldInfo(\n  65020,\n  {field: 0},\n  proto.validator.FieldValidator,\n  /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (\n    proto.validator.FieldValidator.toObject),\n  0);\n\ngoogle_protobuf_descriptor_pb.FieldOptions.extensionsBinary[65020] = new jspb.ExtensionFieldBinaryInfo(\n  proto.validator.field,\n  jspb.BinaryReader.prototype.readMessage,\n  jspb.BinaryWriter.prototype.writeMessage,\n  proto.validator.FieldValidator.serializeBinaryToWriter,\n  proto.validator.FieldValidator.deserializeBinaryFromReader,\n  false);\n// This registers the extension field with the extended class, so that\n// toObject() will function correctly.\ngoogle_protobuf_descriptor_pb.FieldOptions.extensions[65020] = proto.validator.field;\n\n\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `oneof`.\n * @type {!jspb.ExtensionFieldInfo<!proto.validator.OneofValidator>}\n */\nproto.validator.oneof = new jspb.ExtensionFieldInfo(\n  65021,\n  {oneof: 0},\n  proto.validator.OneofValidator,\n  /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (\n    proto.validator.OneofValidator.toObject),\n  0);\n\ngoogle_protobuf_descriptor_pb.OneofOptions.extensionsBinary[65021] = new jspb.ExtensionFieldBinaryInfo(\n  proto.validator.oneof,\n  jspb.BinaryReader.prototype.readMessage,\n  jspb.BinaryWriter.prototype.writeMessage,\n  proto.validator.OneofValidator.serializeBinaryToWriter,\n  proto.validator.OneofValidator.deserializeBinaryFromReader,\n  false);\n// This registers the extension field with the extended class, so that\n// toObject() will function correctly.\ngoogle_protobuf_descriptor_pb.OneofOptions.extensions[65021] = proto.validator.oneof;\n\ngoog.object.extend(exports, proto.validator);\n","const concatUserNames = (props, users) => {\n  let res = '';\n  users.forEach((elem) => {\n    if (elem !== undefined) {\n      let contactName = findContactName(props, elem);\n      let alias = findAlias(props, elem);\n      if (contactName.length > 0) {\n        res = res.concat(contactName);\n        res = res.concat(',');\n      } else if (alias.length > 0) {\n        res = res.concat(alias);\n        res = res.concat(',');\n      } else {\n        res = res.concat(elem.substring(0, 5));\n        res = res.concat(',');\n      }\n    }\n  });\n  res = res.slice(0, -1);\n  return res;\n};\n\nconst concatUserAddresses = (props, users) => {\n  let res = '';\n  users.forEach((elem) => {\n    if (elem.length > 0) {\n      res = res.concat(elem);\n      res = res.concat(',');\n    } else {\n      res = res.concat('Unknown');\n      res = res.concat(',');\n    }\n  });\n  if (res !== '') {\n    res = res.slice(0, -1);\n  }\n  return res;\n};\n\n/**\n   * This function returns the contact name for a specific address.\n   * @param {string} item The address.\n   */\nconst findContactName = (props, item) => {\n  let lookup;\n  if (props.contacts) {\n    lookup = props.contacts.find((elem) => {\n      return elem.user.address === item;\n    });\n  }\n  if (lookup) {\n    return lookup.displayName;\n  } else {\n    return '';\n  }\n};\n\n/**\n * This function returns the friendly name and alias pair for a given address.\n * @param {string} item The address.\n */\nconst findAlias = (props, item) => {\n  let userLookup;\n  if (props.users) {\n    userLookup = props.users.find((elem) => {\n      return elem.address === item;\n    });\n  }\n  if (userLookup) {\n    return userLookup.alias;\n  } else {\n    return '';\n  }\n};\n\nconst routesToAddresses = (routes) => {\n  let addressArray = [];\n  if (routes !== undefined) {\n    routes.forEach((route) => {\n      let lastHop = route.hopsList[route.hopsList.length - 1];\n      addressArray.push(lastHop.hopAddress);\n    });\n  }\n  return addressArray;\n};\n\nconst populateChatHistoryMetadata = (chatHistory) => {\n  let previousElem = undefined;\n  chatHistory.forEach((elem) => {\n    elem['merge'] = false;\n    if (previousElem !== undefined) {\n      if (previousElem.sender === elem.sender\n        && elem.sentTimestamp.seconds < previousElem.sentTimestamp.seconds + 60) {\n        elem['merge'] = true;\n      }\n    }\n    previousElem = elem;\n  });\n};\n\nconst appendToChatHistory = (props, message) => {\n  props.setChatHistory(\n    (oldHistory) => {\n      let previousElem = oldHistory[oldHistory.length - 1];\n      message['merge'] = false;\n      if (previousElem !== undefined) {\n        if (previousElem.sender === message.sender\n          && message.sentTimestamp.seconds < previousElem.sentTimestamp.seconds + 60) {\n          message['merge'] = true;\n        }\n      }\n      return oldHistory.concat(message);\n    }\n  );\n};\n\nexport {\n  concatUserAddresses,\n  concatUserNames,\n  findContactName,\n  findAlias,\n  routesToAddresses,\n  populateChatHistoryMetadata,\n  appendToChatHistory\n};","const attemptUsernameRead = () => {\n  const read = window.localStorage.getItem('httpUsername');\n  if (read) {\n    return read.toString();\n  }\n};\n\nconst attemptPasswordRead = () => {\n  const read = window.localStorage.getItem('httpPassword');\n  if (read) {\n    return read.toString();\n  }\n};\n\nconst authCreds = () => {\n  // console.log({\"Authorization\": 'Basic ' + Buffer.from(`${attemptUsernameRead()}:${attemptPasswordRead()}`).toString('base64')})\n  return {\"Authorization\": 'Basic ' + Buffer.from(`${attemptUsernameRead()}:${attemptPasswordRead()}`).toString('base64')};\n};\n\nexport default authCreds;","import apiUrl from \"../config/api-url\";\nimport authCreds from \"../config/auth-creds\";\n\nconst {\n  EstimateMessageRequest,\n  EstimateMessageResponse,\n  SendMessageRequest,\n  SendMessageResponse,\n  SubscribeMessageRequest,\n  SubscribeMessageResponse,\n  MessageOptions,\n} = require(\"../rpc/rpc_pb\");\n\nconst { MessageServiceClient } = require(\"../rpc/rpc_grpc_web_pb.js\");\n\nconst rpcClient = new MessageServiceClient(apiUrl(), {});\n\nconst client = new Object();\n\nclient.subscribeMessages = (req) => {\n  const request = new SubscribeMessageRequest();\n  return rpcClient.subscribeMessages(request, { ...authCreds() });\n};\n\nclient.estimateMessage = (req, callback) => {\n  const request = new EstimateMessageRequest();\n  const messageOptions = new MessageOptions();\n  messageOptions.setFeeLimitMsat(req?.options?.feeLimitMsat);\n  messageOptions.setAnonymous(req?.options?.anonymous);\n  request.setOptions(messageOptions);\n  request.setDiscussionId(req.discussionId);\n  request.setPayload(req.payload);\n  request.setAmtMsat(req.amtMsat);\n\n  return rpcClient.estimateMessage(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? EstimateMessageResponse.toObject(true, res) : undefined)\n  );\n};\n\nclient.sendMessage = async (req, callback) => {\n  const request = new SendMessageRequest();\n  const messageOptions = new MessageOptions();\n  messageOptions.setFeeLimitMsat(req?.options?.feeLimitMsat);\n  messageOptions.setAnonymous(req?.options?.anonymous);\n  request.setOptions(messageOptions);\n  request.setDiscussionId(req.discussionId);\n  request.setPayload(req.payload);\n  request.setAmtMsat(req.amtMsat);\n  if (req.preimage) {\n    request.setPreimage(req.preimage);\n  }\n  if (req.payReq) {\n    request.setPayReq(req.payReq);\n  }\n\n  return rpcClient.sendMessage(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? SendMessageResponse.toObject(res, res) : undefined)\n  );\n};\n\nconst messageClient = () => {\n  return client;\n};\n\nexport default messageClient;\n","import React from \"react\";\nimport { List } from \"antd\";\nimport { CopyOutlined } from \"@ant-design/icons\";\nimport { NotificationManager } from \"react-notifications\";\nimport { concatUserNames } from \"../../utils/discussion-utils\";\nimport \"./message-info.css\";\n\nconst cryptoUtils = require(\"../../utils/crypto-utils\");\n\n/**\n * This component represents the info window for a chat history message.\n * @param {*} props The global variables.\n * @returns The JSX of the info component.\n */\nconst MessageInfo = (props) => {\n  /**\n   * Prepend self to hops for a given message's hops array.\n   * @param {*} hops The hops array.\n   */\n  const prepareHopsArray = (hops) => {\n    let temp = [...hops];\n    temp.unshift({ hopAddress: props.selfInfo.address, feeMsat: 0 });\n    temp[temp.length - 1][\"isLast\"] = true;\n    return temp;\n  };\n\n  /**\n   * Creates the list containing the route hops for a specific route.\n   * @param {*} route The route to calculate hops for.\n   * @returns The JSX list representing the hops list.\n   */\n  const routeHopsList = (route) => {\n    return (\n      <List\n        className=\"message-info-routeHopsList\"\n        dataSource={\n          props.selectedMessage ? prepareHopsArray(route.hopsList) : []\n        }\n        renderItem={(item) => {\n          return (\n            <List.Item>\n              <CopyOutlined\n                className=\"message-info-routeHopsList-Outilined\"\n                onClick={() => {\n                  let copyText = document.getElementById(\n                    \"hopAddressText\" + item.hopAddress\n                  );\n                  copyText.select();\n                  copyText.setSelectionRange(0, 99999);\n                  document.execCommand(\"copy\");\n                  NotificationManager.info(\"Copied to clipboard\");\n                }}\n              />\n              <input\n                id={\"hopAddressText\" + item.hopAddress}\n                className=\"message-info-routeHopsList-input\"\n                value={item.hopAddress}\n                onChange={() => {}}\n              />\n              <b>{`${item.hopAddress.substring(\n                0,\n                5\n              )}...${item.hopAddress.substring(\n                item.hopAddress.length - 5,\n                item.hopAddress.length\n              )}:  `}</b>\n              {item.hopAddress === props.selfInfo.address ? \"(You)\" : \"\"}\n              {item.isLast\n                ? `(${concatUserNames(props, [item.hopAddress])})`\n                : \"\"}\n              <span className=\"message-info-routeHopsList-span\">\n                {item.hopAddress === props.selfInfo.address ? \"-\" : \"+\"}\n                {`${\n                  item.hopAddress === props.selfInfo.address\n                    ? cryptoUtils.msatToCurrentCryptoUnit(\n                      props,\n                      parseInt(route.routeAmtMsat ? route.routeAmtMsat : 0) +\n                      parseInt(\n                        route.routeFeesMsat ? route.routeFeesMsat : 0\n                      )\n                    )\n                    : item.isLast\n                      ? cryptoUtils.msatToCurrentCryptoUnit(\n                        props,\n                        parseInt(route.routeAmtMsat)\n                      )\n                      : item.feeMsat\n                        ? cryptoUtils.msatToCurrentCryptoUnit(\n                          props,\n                          parseInt(item.feeMsat)\n                        )\n                        : 0\n                }\n                              ${props.selectedCryptoUnit}`}\n              </span>\n            </List.Item>\n          );\n        }}\n      />\n    );\n  };\n\n  return (\n    <div>\n      {props.selectedMessage ? (\n        props.selectedMessage.sender === props.selfInfo.address ? (\n          <div>\n            <b>Transaction Paths</b>\n            <List\n              dataSource={props.selectedMessage.paymentRoutesList}\n              renderItem={(item) => {\n                return <div>{routeHopsList(item)}</div>;\n              }}\n            />\n          </div>\n        ) : (\n          \"\"\n        )\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default MessageInfo;\n","const theme = new Object();\n\ntheme.menuDark = 'rgb(23, 23, 37)';\ntheme.menuDarkLite = 'rgb(36, 36, 46)';\ntheme.menuNormal = 'rgb(45, 45, 65)';\ntheme.menuLight = 'rgb(65, 65, 85)';\n\nexport default theme;","/**\n * The payload protocol version.\n */\nconst version = '0.0.1b';\n\nexport default version;","import React, { useState } from \"react\";\nimport { Modal } from \"antd\";\nimport \"./c13n-image.css\";\n\n/**\n * This component represents the markdown image rendering process.\n * @param {*} props The markdown object containing syntax information.\n */\nconst C13nImage = React.memo((props) => {\n  const [focus, setFocus] = useState(false);\n  return props.automaticImageLoading ? (\n    <div\n      onClick={() => {\n        setFocus(!focus);\n      }}\n      className=\"c13n-image-click\"\n      style={{\n        width: \"25vw\",\n        transition: props.smoothAnimations ? \"0.5s\" : \"0s\",\n      }}\n    >\n      <img src={props.src} width=\"100%\" />\n      <Modal\n        title=\"\"\n        className=\"c13n-image-modal\"\n        cancelButtonProps={{ style: { display: \"none\" } }}\n        visible={!!focus}\n        width=\"90vw\"\n        bodyStyle={{\n          backgroundImage: `url(\"${props.src}\")`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundPosition: \"center\",\n          backgroundSize:\n            screen.height > screen.width ? \"100% auto\" : \"auto 100%\",\n          height: \"75vh\",\n        }}\n      ></Modal>\n    </div>\n  ) : (\n    <div>\n      (Image)\n      <a href={props.src} target=\"_blank\">\n        {props.src}\n      </a>\n    </div>\n  );\n});\n\nexport default C13nImage;\n","import React from \"react\";\n\n/**\n * This component represents the markdown link rendering process.\n * @param {*} props The markdown object containing syntax information.\n */\nconst c13nLink = (props) => {\n  return (\n    <a href={props.href} target=\"_blank\">\n      {props.href}\n    </a>\n  );\n};\n\nexport default c13nLink;\n","import React from \"react\";\n\n/**\n * This component represents the markdown link rendering process.\n * @param {*} props The markdown object containing syntax information.\n */\nconst c13nLinkRef = (props) => {\n  return (\n    <a href={props.href} target=\"_blank\">\n      {props.href}\n    </a>\n  );\n};\n\nexport default c13nLinkRef;\n","import React from \"react\";\nimport \"./c13n-text.css\";\n\n/**\n * This component represents the markdown image rendering process.\n * @param {*} props The markdown object containing syntax information.\n */\nconst c13nText = (props) => {\n  return <span className=\"c13n-text\">{props.value}</span>;\n};\n\nexport default c13nText;\n","import React from \"react\";\nimport \"./c13n-inline-code.css\";\n\n/**\n * This component represents the markdown inline-code rendering process.\n * @param {*} props The markdown object containing syntax information.\n */\nconst c13nInlineCode = (props) => {\n  return <code className=\"chatHistoryMessageCodeSection\">{props.value}</code>;\n};\n\nexport default c13nInlineCode;\n","import React, { useState } from \"react\";\nimport { Modal } from \"antd\";\n\n/**\n * This component represents the chat history image.\n * @param {*} props The global variables.\n */\nconst ChatHistoryImage = React.memo((props) => {\n  const [focus, setFocus] = useState(false);\n  return props.automaticImageLoading ? (\n    <div\n      onClick={() => {\n        setFocus(!focus);\n      }}\n      style={{\n        width: \"25vw\",\n        transition: props.smoothAnimations ? \"0.5s\" : \"0s\",\n      }}\n    >\n      <img src={props.src} width=\"100%\" />\n      <Modal\n        title=\"\"\n        cancelButtonProps={{ style: { display: \"none\" } }}\n        visible={!!focus}\n        width=\"90vw\"\n        bodyStyle={{\n          backgroundImage: `url(\"${props.src}\")`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundPosition: \"center\",\n          backgroundSize:\n            screen.height > screen.width ? \"100% auto\" : \"auto 100%\",\n          height: \"75vh\",\n        }}\n      ></Modal>\n    </div>\n  ) : (\n    <div>\n      (Image)\n      <a href={props.src} target=\"_blank\">\n        {props.src}\n      </a>\n    </div>\n  );\n});\n\nexport default ChatHistoryImage;\n","let payreqs = {};\n\nconst issuePayreq = (id) => {\n  if(!(id in payreqs)) {\n    payreqs[id] = false;\n  }\n};\n\nconst satisfyPayreq = (id) => {\n  payreqs[id] = true;\n};\n\nconst checkPayreq = (id) => {\n  if(id in payreqs) {\n    return payreqs[id];\n  } else {\n    return false;\n  }\n};\n\nexport {\n  issuePayreq,\n  satisfyPayreq,\n  checkPayreq\n};","import version from \"./version\";\nimport ReactMarkdown from \"react-markdown\";\nimport C13nImage from \"../components/content-pages/markdown/c13n-image\";\nimport c13nLink from \"../components/content-pages/markdown/c13n-link\";\nimport c13nLinkRef from \"../components/content-pages/markdown/c13n-link-ref\";\nimport c13nText from \"../components/content-pages/markdown/c13n-text\";\nimport c13nInlineCode from \"../components/content-pages/markdown/c13n-inline-code\";\n\nimport ChatHistoryImage from \"../components/content-pages/chat-history-image\";\n\nimport { issuePayreq, checkPayreq, satisfyPayreq } from \"../utils/payreq/payreq-tracker\";\n\nimport { Button, List } from \"antd\";\nimport { CheckOutlined } from \"@ant-design/icons\";\n\nimport { downloadImage, cachedImages } from \"../utils/lsat/download-image\";\nimport React from \"react\";\nimport { sendPayreqPay } from \"../utils/payreq/utils\";\n\nconst cryptoUtils = require(\"../utils/crypto-utils\");\n\n/**\n * The markdown renderers.\n */\nconst renderers = (props) => {\n  return {\n    image: (mdProps) =>\n      <C13nImage\n        src={mdProps.src}\n        automaticImageLoading={props.automaticImageLoading}\n        smoothAnimations={props.smoothAnimations}\n      />\n    ,\n    link: c13nLink,\n    linkReference: c13nLinkRef,\n    text: c13nText,\n    inlineCode: c13nInlineCode,\n  };\n};\n\n/**\n * This function generates the JSX to represent the message inside the chat bubble.\n * @param {} props The global variables.\n * @param {string} payload The message data.\n * @param {boolean} myMessage Flag indicating if message was send by this wallet.\n * @param {number} amtMsat The msat amount delivered by the message.\n * @returns The JSX representing the message.\n */\nconst payloadToDom = (props, payload, myMessage, amtMsat) => {\n  let payloadObj;\n  try {\n    payloadObj = JSON.parse(payload);\n  } catch (err) {\n    payloadObj = payload;\n  }\n  if (payloadObj.type === undefined) {\n    return payload;\n  }\n  switch (payloadObj.type) {\n  case \"message\":\n    return payloadObj.content ?\n      <div>\n        <ReactMarkdown\n          source={payloadObj.content}\n          renderers={renderers(props)}\n          disallowedTypes={[\"paragraph\"]}\n          unwrapDisallowed={!!true}\n        />\n        <List\n          style={{\n            display: payloadObj.attachmentList ? 'inherit' : 'none'\n          }}\n          dataSource={payloadObj.attachmentList}\n          renderItem={(item) => {\n            return (\n              <div>\n                <span\n                  style={{\n                    display: cachedImages[item.uri] ? \"none\" : \"inherit\",\n                  }}\n                >\n                  <h4>\n                    <b>LSAT Image</b>\n                  </h4>\n                  <Button\n                    type=\"primary\"\n                    onClick={() => {\n                      downloadImage(props, item.uri);\n                    }}\n                  >\n                      Pay & Show\n                  </Button>\n                  <br />\n                  <a>{item.uri}</a>\n                </span>\n                <ChatHistoryImage {...props} src={cachedImages[item.uri]} />\n              </div>\n            );\n          }}\n        />\n      </div>\n      :\n      <div\n        style={{\n          fontSize: '20px',\n          border: '2px solid gray',\n          borderRadius: '5px',\n          padding: '15px'\n        }}\n      >\n        {\n          `You ${myMessage ? 'sent' : 'received'} `\n        }\n        <span\n          style={{\n            color: myMessage ? 'red' : 'green'\n          }}\n        >\n          {`${cryptoUtils.msatToCurrentCryptoUnit(props, amtMsat)}`}\n        </span>\n        <span>\n          {`${props.selectedCryptoUnit}`}\n        </span>\n      </div>\n    ;\n  case \"image\":\n    return (\n      <div>\n        <span\n          style={{\n            display: cachedImages[payloadObj.content] ? \"none\" : \"inherit\",\n          }}\n        >\n          <h3>\n            <b>LSAT Image</b>\n          </h3>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              downloadImage(props, payloadObj.content);\n            }}\n          >\n              Pay & Show\n          </Button>\n          <br />\n          <a>{payloadObj.content}</a>\n        </span>\n        <ChatHistoryImage {...props} src={cachedImages[payloadObj.content]} />\n      </div>\n    );\n  case \"payreq\":\n    issuePayreq(payloadObj.id);\n    return (\n      <div\n        style={{\n          border: '1px solid gray',\n          borderRadius: '5px',\n          padding: '10px'\n        }}\n      >\n        <h3> Request to\n          {\n            myMessage ? ' receive' : ' pay'\n          } <b>{cryptoUtils.msatToCurrentCryptoUnit(props, payloadObj.amtMsat)} {props.selectedCryptoUnit}</b></h3>\n        {\n          myMessage ? checkPayreq(payloadObj.id)\n            ?\n            <h2 style={{ color: 'green' }}><b>Paid <CheckOutlined /></b></h2>\n\n            :\n            <h2><b>Pending</b></h2>\n\n\n            : checkPayreq(payloadObj.id) ?\n              <div>\n                <h2 style={{ color: 'green' }}><b>Paid <CheckOutlined /></b></h2>\n              </div>\n              :\n              <div>\n                <Button\n                  type=\"primary\"\n                  onClick={() => {\n                    sendPayreqPay(props, payloadObj);\n                  }}\n                  style={{\n                    margin: \"15px\",\n                    fontSize: '20px',\n                    width: '90%',\n                    height: '75%'\n                  }}\n                >\n                      Pay\n                </Button>\n                <br />\n              </div>\n\n        }\n        <span\n          style={{\n            display: payloadObj.description ? \"inherit\" : \"none\"\n          }}\n        >\n          <b>Description</b>\n          <br />\n          <span>{payloadObj.description}</span>\n          <br />\n          <br />\n        </span>\n        <span\n          style={{\n            fontSize: '10px'\n          }}\n        >\n          <b>ID</b>\n          <span>{payloadObj.id}</span>\n        </span>\n      </div>\n    );\n  case \"payreq_pay\":\n    satisfyPayreq(payloadObj.id);\n    return (\n      <div\n        style={{\n          border: '2px solid green',\n          borderRadius: '5px',\n          padding: '10px',\n        }}\n      >\n        <span\n          style={{\n            fontSize: '25px',\n            color: 'green'\n          }}\n        >\n\n        </span>\n          Paid request {payloadObj.id}\n        <CheckOutlined\n          style={{\n            fontSize: '30px',\n            color: 'green'\n          }}\n        />\n      </div>\n    );\n  }\n};\n\n/**\n * Parses the entered message string to an object with respect to the payload protocol.\n * @param {*} message The entered message string.\n * @returns The message object.\n */\nconst messageToPayload = (message, attachmentList) => {\n  let messageObj = {\n    v: version,\n    type: \"message\",\n    content: message,\n    attachmentList: attachmentList\n  };\n  try {\n    return JSON.stringify(messageObj);\n  } catch (err) {\n    return message;\n  }\n};\n\nconst payreqToPayload = (amtMsat, description) => {\n  let messageObj = {\n    v: version,\n    type: \"payreq\",\n    amtMsat: amtMsat,\n    description: description,\n    id: Date.now()\n  };\n  try {\n    return JSON.stringify(messageObj);\n  } catch (err) {\n    return '';\n  }\n};\n\nconst payreqPayToPayload = (id) => {\n  let messageObj = {\n    v: version,\n    type: \"payreq_pay\",\n    id: id\n  };\n  try {\n    return JSON.stringify(messageObj);\n  } catch (err) {\n    return '';\n  }\n};\n\nexport {\n  payloadToDom,\n  messageToPayload,\n  payreqToPayload,\n  payreqPayToPayload\n};\n","import { payreqPayToPayload } from \"../../payload-protocol/parsers\";\nimport messageClient from \"../../services/messageServices\";\nimport { appendToChatHistory } from \"../discussion-utils\";\n\nconst sendPayreqPay = (props, payreqObj) => {\n  console.log('Paying ', payreqObj);\n  messageClient().sendMessage(\n    {\n      discussionId: props.selectedDiscussion.id,\n      payload: payreqPayToPayload(payreqObj.id),\n      amtMsat: parseInt(payreqObj.amtMsat)\n    }, (err, res) => {\n      if (err) {\n        console.log(err);\n      }\n      if (res) {\n        console.log(res.sentMessage);\n        props.selectedDiscussion.lastMsgId = res.sentMessage.id;\n        props.selectedDiscussion.lastReadMsgId = res.sentMessage.id;\n        appendToChatHistory(props, res.sentMessage);\n        props.updateCurrentFunds();\n        props.setLastFundChange(\n          `-${Number(\n            res.sentMessage.amtMsat / 1000 +\n            res.sentMessage.totalFeesMsat / 1000\n          )}`\n        );\n      }\n    }\n  );\n};\n\nexport {\n  sendPayreqPay\n};","import { messageToPayload } from \"../../payload-protocol/parsers\";\nimport { createAttachment } from \"../../payload-protocol/utils\";\n\nimport messageClient from \"../../services/messageServices\";\n\nimport { appendToChatHistory } from '../../utils/discussion-utils';\n\nconst axios = require('axios').default;\n\nlet lsatUrl = 'https://kenovios.space:3001';\nlet preimage = \"\";\nlet lsat = {};\n\nconst headerToLsat = (header) => {\n  const macaroonStr = header.split(' ')[1];\n  const invoiceStr = header.split(' ')[2];\n  const macaroon = macaroonStr.slice(10, -2);\n  const invoice = invoiceStr.slice(9, -1);\n  return {\n    invoice: invoice,\n    macaroon: macaroon\n  };\n};\n\nconst uploadImage = async (props) => {\n  console.log('Uploading file to LSAT server');\n  await axios.post(\n    lsatUrl + '/upload',\n  ).then((res) => {\n  }).catch((err) => {\n    let header = (err?.response?.headers['www-authenticate']);\n    console.log(header);\n    if (header) {\n      lsat = headerToLsat(header);\n    }\n  });\n  if (lsat?.invoice) {\n    messageClient().sendMessage(\n      {\n        payReq: lsat.invoice,\n        payload: \"\",\n        options: {\n          anonymous: true\n        }\n      },\n      async (err, res) => {\n        if (res) {\n          console.log(res);\n          preimage = res.sentMessage.preimage;\n          const fileElem = document.getElementById('fileInput');\n          const file = fileElem.files[0];\n          let formData = new FormData();\n          formData.append('file', file);\n\n          axios.post(\n            lsatUrl + '/upload',\n            formData,\n            {\n              headers: {\n                'Authorization': `LSAT ${lsat.macaroon}:${preimage}`,\n              },\n            }\n          ).then((res) => {\n            console.log(res);\n            let filename = res?.data?.filename;\n            let fullUrl = `${lsatUrl}/download?name=${filename}`;\n            messageClient().sendMessage(\n              {\n                payload: messageToPayload(\"\", [createAttachment(\"image\", fullUrl, \"lsat\", true)]),\n                amtMsat: 1000,\n              }, (err, res) => {\n                if (err) {\n                  console.log(err);\n                }\n                if (res) {\n                  props.selectedDiscussion.lastMsgId = res.sentMessage.id;\n                  props.selectedDiscussion.lastReadMsgId = res.sentMessage.id;\n                  appendToChatHistory(props, res.sentMessage);\n                  props.updateCurrentFunds();\n                  props.setLastFundChange(`-${Number(res.sentMessage.amtMsat / 1000 + res.sentMessage.totalFeesMsat / 1000)}`);\n                }\n              });\n          }).catch((err) => {\n            console.log(err.response);\n          });\n        }\n        if (err) {\n          console.log(err);\n        }\n      });\n  }\n\n};\n\nexport default uploadImage;\n","const createAttachment = (type, uri, tags, show) => {\n  return {\n    type: type,\n    uri: uri,\n    tags: tags ? tags : '',\n    show: show ? show : false\n  };\n};\n\nexport {\n  createAttachment\n};","const sleep = (ms) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\nexport default sleep;\n","export default __webpack_public_path__ + \"static/media/arrow-right.e10cfb42.svg\";","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  Button,\n  Tooltip,\n  Switch,\n  Input,\n  Dropdown,\n  Menu,\n  Divider,\n} from \"antd\";\nimport {\n  PlusOutlined,\n  EyeOutlined,\n  EyeInvisibleOutlined,\n  FileImageOutlined,\n  SmileOutlined,\n  FormOutlined,\n  LoadingOutlined,\n} from \"@ant-design/icons\";\nimport Picker from \"emoji-picker-react\";\nimport { NotificationManager } from \"react-notifications\";\n\nimport messageClient from \"../../services/messageServices\";\nimport { appendToChatHistory } from \"../../utils/discussion-utils\";\nimport theme from \"../../style/theme\";\nimport uploadImage from \"../../utils/lsat/upload-image\";\nimport sleep from \"../../utils/system\";\n\nimport {\n  messageToPayload,\n  payreqToPayload,\n} from \"../../payload-protocol/parsers\";\nimport \"./chat-history-input.css\";\nimport ChatButton from \"../../media/arrow-right.svg\";\n\nconst cryptoUtils = require(\"../../utils/crypto-utils\");\n\nconst ChatHistoryInput = (props) => {\n  const [selectedInput, setSelectedInput] = useState(\"text\");\n  const [currentFee, setCurrentFee] = useState(-1);\n  const [messageToSend, setMessageToSend] = useState(\"\");\n  const [emojiPickerActive, setEmojiPickerActive] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const [fileDialogActive, setFileDialogActive] = useState(false);\n  const [imageURL, setImageURL] = useState(\"\");\n  const [uploadLoading, setUploadLoading] = useState(false);\n  const [payreqModalActive, setPayreqModalActive] = useState(false);\n  const [payreqAmount, setPayreqAmount] = useState(0);\n  const [payreqDescription, setPayreqDescription] = useState(\"\");\n\n  /**\n   * This function sends a payload and the currently entered payload to the current discussion.\n   * @param {string} text The payload to send.\n   */\n  const sendMessage = async (text) => {\n    const amtMsat = cryptoUtils.currentCryptoAmtToMsat(props, amount);\n    const msg = {\n      discussionId: props.selectedDiscussion.id,\n      amtMsat:\n        amtMsat === \"\"\n          ? 1000\n          : parseInt(amtMsat) > 1000\n            ? parseInt(amtMsat)\n            : 1000,\n      payload: text,\n      options: {\n        anonymous: props.anonymousActive,\n      },\n    };\n    setMessageToSend(\"\");\n    setAmount(cryptoUtils.retrieveDefaultCryptoAmount(props));\n    messageClient().sendMessage(msg, (err, res) => {\n      if (err) {\n        console.log(err);\n        NotificationManager.warning(err.message);\n      }\n      if (res) {\n        console.log(res.sentMessage);\n        props.selectedDiscussion.lastMsgId = res.sentMessage.id;\n        props.selectedDiscussion.lastReadMsgId = res.sentMessage.id;\n        appendToChatHistory(props, res.sentMessage);\n        props.updateCurrentFunds();\n        props.setLastFundChange(\n          `-${Number(\n            res.sentMessage.amtMsat / 1000 +\n              res.sentMessage.totalFeesMsat / 1000\n          )}`\n        );\n      }\n    });\n  };\n\n  /**\n   * Calculates the fee for a specific discussion and currently entered msat amount.\n   * @param {*} discussion The discussion.\n   */\n  const calculateFee = (discussion) => {\n    const amtMsat = cryptoUtils.currentCryptoAmtToMsat(props, amount);\n    const msg = {\n      discussionId: discussion.id,\n      amtMsat:\n        amtMsat === \"\"\n          ? 1000\n          : parseInt(amtMsat) > 1000\n            ? parseInt(amtMsat)\n            : 1000,\n      payload: \"fee_calculation\",\n    };\n    messageClient().estimateMessage(msg, (err, res) => {\n      if (err) {\n        NotificationManager.warning(err.message);\n      }\n      if (res) {\n        setCurrentFee(\n          cryptoUtils.msatToCurrentCryptoUnit(props, res.message.totalFeesMsat)\n        );\n      }\n    });\n  };\n\n  /**\n   * the fucntion selects all the text in the amount input and highlight it in order to change on focus.\n   */\n\n  const selectAmountInputText = () => {\n    const input = document.getElementById(\"cryptoAmountInput\");\n    input.focus();\n    input.select();\n  };\n\n  const selectPayreqAmountInputText = () => {\n    const input = document.getElementById(\"payreqAmountInput\");\n    input.focus();\n    input.select();\n  };\n\n  /**\n   * Hook to perform discussion related actions when the selected discussion changes.\n   */\n  useEffect(() => {\n    calculateFee(props.selectedDiscussion);\n    setCurrentFee();\n\n    setMessageToSend(\"\");\n    setAmount(cryptoUtils.retrieveDefaultCryptoAmount(props));\n    document.getElementById(\"messageInputArea\").focus();\n  }, [props.selectedDiscussion]);\n\n  return (\n    <div\n      onBlur={() => {\n        setSelectedInput(\"text\");\n      }}\n      className=\"chat-history-footer-container\"\n    >\n      <Dropdown\n        trigger=\"click\"\n        overlay={\n          <Menu className=\"chat-history-input-dropdown\">\n            <Menu.Item\n              onClick={() => {\n                setFileDialogActive(true);\n              }}\n            >\n              <FileImageOutlined\n                className=\"chat-history-input-fileImageOutlined\"\n                style={{ fontSize: \"25px\" }}\n              />\n            </Menu.Item>\n            <Menu.Item\n              onClick={() => {\n                setPayreqModalActive(true);\n              }}\n            >\n              <FormOutlined style={{ fontSize: \"25px\" }} />\n            </Menu.Item>\n            <Menu.Item onClick={() => {}}>\n              <Tooltip title=\"Anonymous Mode\" placement=\"top\">\n                <Switch\n                  onChange={(value) => {\n                    props.setAnonymousActive(value);\n                  }}\n                  checkedChildren={<EyeInvisibleOutlined />}\n                  unCheckedChildren={<EyeOutlined />}\n                  disabled={\n                    props.selectedDiscussion.participantsList.length > 1\n                  }\n                />\n              </Tooltip>\n            </Menu.Item>\n          </Menu>\n        }\n      >\n        <PlusOutlined className=\"chat-history-footer-addMedia\" />\n      </Dropdown>\n      <div className=\"chat-history-footer-messageMoney\">\n        <Input.TextArea\n          id=\"messageInputArea\"\n          value={messageToSend}\n          onFocus={(e) => {\n            if (props.chatHistory.length !== 0) {\n              props.updateLastMessageSeen(props.chatHistory);\n              props.updateChatScroll();\n              setSelectedInput(\"text\");\n            }\n          }}\n          onChange={(e) => {\n            if (e.key === \"Enter\") {\n              e.preventDefault();\n            } else {\n              setMessageToSend(e.target.value);\n            }\n          }}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\" && !e.shiftKey) {\n              e.preventDefault();\n              sendMessage(messageToPayload(e.target.value));\n            }\n          }}\n          placeholder={`Enter ${\n            props.anonymousActive ? \"anonymous \" : \"\"\n          }message`}\n          style={{\n            display: \"inline-block\",\n            width:\n              selectedInput === \"text\"\n                ? \"calc(100% - 100px)\"\n                : \"calc(100% - 150px)\",\n            resize: \"none\",\n            height:\n              document.getElementById(\"messageInputArea\")?.scrollHeight > 45\n                ? messageToSend.length === 0\n                  ? \"35px\"\n                  : document.getElementById(\"messageInputArea\")?.scrollHeight\n                : \"35px\",\n            maxHeight: \"100px\",\n            borderRadius: \"15px\",\n            border: \"2px solid gray\",\n            borderColor: selectedInput === \"text\" ? \"white\" : \"gray\",\n          }}\n        />\n        <div className=\"chat-history-footer-emoticons\">\n          <div className=\"chat-history-footer-emoticonsSmile\">\n            <SmileOutlined\n              onClick={() => {\n                setEmojiPickerActive(!emojiPickerActive);\n              }}\n              onBlur={() => {\n                setEmojiPickerActive(false);\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"chat-history-footer-input-addAmount\">\n          <div\n            className=\"chat-history-footer-input-currency\"\n            style={{\n              width: selectedInput === \"crypto\" ? \"130px\" : \"80px\",\n              marginLeft: selectedInput === \"crypto\" ? \"20px\" : \"\",\n            }}\n          >\n            {cryptoUtils.selectedCryptoToVerbose(props.selectedCryptoUnit)}\n          </div>\n          <Tooltip\n            title={`${cryptoUtils.currentCryptoAmtToFiat(props, amount)} ${\n              props.selectedFiatUnit\n            }`}\n            placement=\"top\"\n            visible={selectedInput === \"crypto\"}\n          >\n            <Input\n              id=\"cryptoAmountInput\"\n              type=\"number\"\n              value={amount}\n              onBlur={() => {\n                if (\n                  amount <\n                  parseFloat(cryptoUtils.retrieveDefaultCryptoAmount(props))\n                ) {\n                  setAmount(\n                    parseFloat(cryptoUtils.retrieveDefaultCryptoAmount(props))\n                  );\n                }\n                if (amount > 1000000) {\n                  setAmount(1000000);\n                }\n              }}\n              min={1}\n              max={1000000}\n              onFocus={() => {\n                setSelectedInput(\"crypto\");\n                selectAmountInputText();\n              }}\n              className=\"chat-history-footer-input-addAmount-amount\"\n              style={{\n                width: selectedInput === \"crypto\" ? \"130px\" : \"80px\",\n                borderColor: selectedInput === \"crypto\" ? \"white\" : \"gray\",\n                color: amount === \"1\" ? \"gray\" : \"white\",\n              }}\n              onChange={(e) => {\n                const numCast = parseFloat(e.target.value);\n                if (isNaN(numCast)) {\n                  setAmount(amount);\n                } else {\n                  setAmount(e.target.value);\n                }\n                if (e.target.value === \"\") {\n                  setAmount(cryptoUtils.retrieveDefaultCryptoAmount(props));\n                }\n              }}\n              placeholder={cryptoUtils.retrieveDefaultCryptoAmount(props)}\n            />\n          </Tooltip>\n        </div>\n      </div>\n\n      <div\n        className=\"chat-history-footer-emojiPicker\"\n        style={{\n          display: emojiPickerActive ? \"inherit\" : \"none\",\n        }}\n      >\n        <Picker\n          onEmojiClick={(e, emoji) => {\n            e.preventDefault();\n            setMessageToSend(messageToSend.concat(emoji.emoji));\n          }}\n          pickerStyle={{\n            backgroundColor: \"#656585\",\n            width: \"250px\",\n          }}\n          disableSearchBar\n          disableAutoFocus\n          disableSkinTonePicker\n        />\n      </div>\n      <div\n        className=\"chat-history-footer-sendButtonContainer\"\n        style={{\n          backgroundColor: theme.menuLight,\n        }}\n      >\n        <div className=\"chat-history-footer-feeContainer\">\n          <span className=\"chat-history-footer-feeText\">\n            {`Fee ${currentFee || 0} ${props.selectedCryptoUnit}`}\n          </span>\n        </div>\n\n        <Button\n          onMouseDown={(e) => {\n            e.preventDefault();\n          }}\n          onClick={() => {\n            sendMessage(messageToPayload(messageToSend));\n          }}\n          className=\"chat-history-footer-sendButton\"\n        >\n          <img src={ChatButton} className=\"chat-history-footer-sendButtonSvg\" />\n        </Button>\n      </div>\n      <Modal\n        visible={!!fileDialogActive}\n        onOk={async () => {\n          setUploadLoading(true);\n          switch (imageURL.length) {\n          case 0:\n            uploadImage(props);\n            break;\n          default:\n            sendMessage(messageToPayload(`![](${imageURL})`));\n          }\n          await sleep(1500);\n          setImageURL(\"\");\n          setFileDialogActive(false);\n          setUploadLoading(false);\n        }}\n        onCancel={() => {\n          setFileDialogActive(false);\n        }}\n        okButtonProps={{ type: \"default\", disabled: !!uploadLoading }}\n        okText={uploadLoading ? <LoadingOutlined spin /> : \"Send\"}\n      >\n        <Divider orientation=\"left\">Choose image file</Divider>\n        <input\n          disabled\n          id=\"fileInput\"\n          type=\"file\"\n          accept=\"image/png, image/jpeg\"\n        />\n        <Divider>OR</Divider>\n        <Divider orientation=\"left\">Paste image link:</Divider>\n        <Input\n          value={imageURL}\n          onChange={(e) => {\n            setImageURL(e.target.value);\n          }}\n        />\n      </Modal>\n      <Modal\n        visible={!!payreqModalActive}\n        title=\"Request Payment\"\n        onOk={() => {\n          console.log(\n            \"Requesting: \",\n            cryptoUtils.currentCryptoAmtToMsat(props, payreqAmount),\n            \"msat\"\n          );\n          messageClient().sendMessage(\n            {\n              discussionId: props.selectedDiscussion.id,\n              payload: payreqToPayload(\n                cryptoUtils.currentCryptoAmtToMsat(props, payreqAmount),\n                payreqDescription\n              ),\n              amtMsat: 1000,\n            },\n            (err, res) => {\n              if (err) {\n                NotificationManager.error(\"Could not send message\");\n                console.log(err);\n              }\n              if (res) {\n                setPayreqAmount(0);\n                setPayreqDescription(\"\");\n                setPayreqModalActive(false);\n                props.selectedDiscussion.lastMsgId = res.sentMessage.id;\n                props.selectedDiscussion.lastReadMsgId = res.sentMessage.id;\n                appendToChatHistory(props, res.sentMessage);\n                props.updateCurrentFunds();\n                props.setLastFundChange(\n                  `-${Number(\n                    res.sentMessage.amtMsat / 1000 +\n                      res.sentMessage.totalFeesMsat / 1000\n                  )}`\n                );\n              }\n            }\n          );\n        }}\n        onCancel={() => {\n          setPayreqModalActive(false);\n        }}\n        okButtonProps={{ type: \"default\" }}\n        okText={\"Request\"}\n      >\n        Description:\n        <Input\n          value={payreqDescription}\n          onChange={(e) => {\n            setPayreqDescription(e.target.value);\n          }}\n        />\n        <br />\n        Amount ({props.selectedCryptoUnit}):\n        <Input\n          id=\"payreqAmountInput\"\n          type=\"number\"\n          value={payreqAmount}\n          onBlur={() => {\n            if (\n              amount <\n              parseFloat(cryptoUtils.retrieveDefaultCryptoAmount(props))\n            ) {\n              setAmount(\n                parseFloat(cryptoUtils.retrieveDefaultCryptoAmount(props))\n              );\n            }\n            if (amount > 1000000) {\n              setAmount(1000000);\n            }\n          }}\n          onFocus={() => {\n            selectPayreqAmountInputText();\n          }}\n          onChange={(e) => {\n            const numCast = parseFloat(e.target.value);\n            if (isNaN(numCast)) {\n              setPayreqAmount(amount);\n            } else {\n              setPayreqAmount(e.target.value);\n            }\n            if (e.target.value === \"\") {\n              setPayreqAmount(cryptoUtils.retrieveDefaultCryptoAmount(props));\n            }\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default ChatHistoryInput;\n","import apiUrl from \"../config/api-url\";\nimport authCreds from \"../config/auth-creds\";\n\nconst {\n  GetDiscussionsRequest,\n  GetDiscussionsResponse,\n  GetDiscussionHistoryByIDRequest,\n  GetDiscussionHistoryResponse,\n  GetDiscussionStatisticsRequest,\n  GetDiscussionStatisticsResponse,\n  AddDiscussionRequest,\n  AddDiscussionResponse,\n  UpdateDiscussionLastReadRequest,\n  UpdateDiscussionResponse,\n  RemoveDiscussionRequest,\n  RemoveDiscussionResponse,\n  KeySetPageOptions,\n  DiscussionInfo,\n  DiscussionOptions,\n} = require(\"../rpc/rpc_pb\");\nconst { DiscussionServiceClient } = require(\"../rpc/rpc_grpc_web_pb.js\");\n\nconst rpcClient = new DiscussionServiceClient(apiUrl(), {});\n\nconst client = new Object();\n\nclient.getDiscussions = (req) => {\n  const request = new GetDiscussionsRequest();\n  return rpcClient.getDiscussions(request, { ...authCreds() });\n};\n\nclient.getDiscussionHistoryById = (req) => {\n  const request = new GetDiscussionHistoryByIDRequest();\n  const keySetPageOptions = new KeySetPageOptions();\n  keySetPageOptions.setLastId(req.pageOptions.lastId);\n  keySetPageOptions.setPageSize(req.pageOptions.pageSize);\n  keySetPageOptions.setReverse(req.pageOptions.reverse);\n  request.setPageOptions(keySetPageOptions);\n  request.setId(req.id);\n  return rpcClient.getDiscussionHistoryByID(request, { ...authCreds() });\n};\n\nclient.getDiscussionStatistics = (req, callback) => {\n  const request = new GetDiscussionStatisticsRequest();\n  request.setId(req.id);\n  return rpcClient.getDiscussionStatistics(\n    request,\n    { ...authCreds() },\n    (err, res) =>\n      callback(\n        err,\n        res ? GetDiscussionStatisticsResponse.toObject(res, res) : undefined\n      )\n  );\n};\n\nclient.addDiscussion = (req, callback) => {\n  const request = new AddDiscussionRequest();\n  const discussionInfo = new DiscussionInfo();\n  const discussionOptions = new DiscussionOptions();\n\n  discussionOptions.setFeeLimitMsat(req.discussion?.options?.feeLimitMsat);\n  discussionOptions.setAnonymous(req.discussion?.options?.anonymous);\n  discussionInfo.setOptions(discussionOptions);\n  discussionInfo.setId(req.discussion.id);\n  discussionInfo.setParticipantsList(req.discussion.participants);\n  discussionInfo.setLastReadMsgId(req.discussion.lastReadMsgId);\n  discussionInfo.setLastMsgId(req.discussion.lastMsgId);\n  request.setDiscussion(discussionInfo);\n  return rpcClient.addDiscussion(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? AddDiscussionResponse.toObject(res, res) : undefined)\n  );\n};\n\nclient.updateDiscussionLastRead = (req, callback) => {\n  const request = new UpdateDiscussionLastReadRequest();\n  request.setDiscussionId(req.discussionId);\n  request.setLastReadMsgId(req.lastReadMsgId);\n  return rpcClient.updateDiscussionLastRead(\n    request,\n    { ...authCreds() },\n    (err, res) =>\n      callback(\n        err,\n        res ? UpdateDiscussionResponse.toObject(res, res) : undefined\n      )\n  );\n};\n\nclient.removeDiscussion = (req, callback) => {\n  const request = new RemoveDiscussionRequest();\n  request.setId(req.id);\n  return rpcClient.removeDiscussion(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? RemoveDiscussionResponse.toObject(res, res) : undefined)\n  );\n};\n\nconst discussionClient = () => {\n  return client;\n};\n\nexport default discussionClient;\n","import React, { useEffect, useState } from \"react\";\nimport { ArrowUpOutlined, ArrowDownOutlined } from \"@ant-design/icons\";\n\nimport discussionClient from \"../../services/discussionServices\";\nimport \"./chat-history-statistics.css\";\nimport { NotificationManager } from \"react-notifications\";\n\nconst cryptoUtils = require(\"../../utils/crypto-utils\");\n\n/**\n * This component represents the chat history statistics window.\n * @param {*} props The global variables.\n */\nconst ChatHistoryStatistics = (props) => {\n  const [loaded, setLoaded] = useState(false);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalOutcome, setTotalOutcome] = useState(0);\n  const [totalFees, setTotalFees] = useState(0);\n  const [totalSent, setTotalSent] = useState(0);\n  const [totalReceived, setTotalReceived] = useState(0);\n\n  /**\n   * This process is called once on component loading.\n   * It fetches the statistics from the correct endpoint.\n   */\n  useEffect(() => {\n    setTotalIncome(0);\n    setTotalFees(0);\n    setTotalOutcome(0);\n    setTotalReceived(0);\n    setTotalSent(0);\n    setLoaded(false);\n    discussionClient().getDiscussionStatistics(\n      {\n        id: props.selectedDiscussion.id,\n      },\n      (err, res) => {\n        if (err) {\n          NotificationManager.error(\"Failed to fetch statistics\");\n          console.log(err);\n        }\n        if (res) {\n          if (res.amtMsatReceived) {\n            setTotalIncome(res.amtMsatReceived);\n          }\n          if (res.amtMsatSent) {\n            setTotalOutcome(res.amtMsatSent);\n          }\n          if (res.amtMsatFees) {\n            setTotalFees(res.amtMsatFees);\n          }\n          if (res.messagesSent) {\n            setTotalSent(res.messagesSent);\n          }\n          if (res.messagesReceived) {\n            setTotalReceived(res.messagesReceived);\n          }\n          setLoaded(true);\n        }\n      }\n    );\n  }, [props.selectedDiscussion.id]);\n\n  /**\n   * The chat history statistics JSX\n   */\n  return (\n    <div className=\"chatHistoryStatistics\">\n      {loaded ? (\n        <div>\n          <span\n            style={{\n              display: props.selectedDiscussion ? \"inline-block\" : \"none\",\n            }}\n          >\n            <span className=\"contentHeaderTotalAmount\">\n              <ArrowDownOutlined />\n              {`${\n                cryptoUtils.msatToCurrentCryptoUnit(props, totalIncome) || 0\n              }`}\n              <span className=\"chat-history-statistics-ArrowDownOutlined\">\n                {`${props.selectedCryptoUnit} `}\n                received\n              </span>\n            </span>\n            <br />\n            <span className=\"chat-history-statistics-contentHeaderTotalAmount\">\n              <ArrowUpOutlined />\n              {`${\n                cryptoUtils.msatToCurrentCryptoUnit(props, totalOutcome) || 0\n              }`}\n              <span className=\"chat-history-statistics-ArrowUpOutlined\">\n                {`${props.selectedCryptoUnit} `}\n                sent\n              </span>\n            </span>\n          </span>\n          <br />\n          <br />\n          Messages Sent: <b>{`${totalSent || 0}`}</b>\n          <br />\n          <br />\n          Messages Received: <b>{`${totalReceived || 0}`}</b>\n          <br />\n          <br />\n          Total Fees Paid:{\" \"}\n          <b>{`${cryptoUtils.msatToCurrentCryptoUnit(props, totalFees) || 0}${\n            props.selectedCryptoUnit\n          }`}</b>\n        </div>\n      ) : (\n        <div>Loading</div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatHistoryStatistics;\n","import Parser from 'html-react-parser';\n\nconst jdenticon = require(\"jdenticon\");\n\nlet iconCache = {};\n\nconst generateIdenticon = (text, size) => {\n  if(text in iconCache && iconCache[text] !== undefined) {\n    if(size in iconCache[text] && iconCache[text][size] !== undefined) {\n      return Parser(iconCache[text][size]);\n    }\n  }\n  const icon = jdenticon.toSvg(text, size);\n  iconCache[text] = {};\n  iconCache[text][size] = icon;\n  return Parser(icon);\n};\n\nexport default generateIdenticon;","import React from \"react\";\n\nimport { Modal } from \"antd\";\n\nimport { NotificationManager } from \"react-notifications\";\n\nimport { findAlias, findContactName } from \"../../utils/discussion-utils\";\nimport generateIdenticon from \"../../utils/identicon.js\";\n\nimport \"./user-preview.css\";\n\n/**\n * This component represents the modal for previewing a user.\n * @param {*} props The global variables.\n * @returns The JSX of the component.\n */\nconst UserPreview = (props) => {\n  return (\n    <div>\n      <Modal\n        visible={props.visible}\n        title={\n          <div>\n            <span className=\"user-preview-modal\">\n              {generateIdenticon(props.user?.address, 45)}\n            </span>\n            {`${findContactName(props, props.user?.address)} (${findAlias(\n              props,\n              props.user?.address\n            )})`}\n          </div>\n        }\n        onOk={() => {\n          props.setVisible(false);\n        }}\n        cancelButtonProps={{ style: { display: \"none\" } }}\n        onCancel={() => {\n          props.setVisible(false);\n        }}\n      >\n        <input\n          id={\"userPreviewAddress\"}\n          value={props.user?.address}\n          onChange={() => {}}\n        />\n        Address:\n        <br />\n        <span\n          className=\"user-preview-address\"\n          onClick={() => {\n            let copyText = document.getElementById(\"userPreviewAddress\");\n            copyText.select();\n            copyText.setSelectionRange(0, 99999);\n            document.execCommand(\"copy\");\n            NotificationManager.info(\"Copied to clipboard\");\n          }}\n        >\n          {props.user?.address}\n        </span>\n      </Modal>\n    </div>\n  );\n};\n\nexport default UserPreview;\n","const findUserByAddress = (props, addr) => {\n  let userLookup = props.users.find(\n    (elem) => {\n      return elem.address === addr;\n    }\n  );\n  return userLookup;\n};\n\nconst splitURI = (URI) => {\n  const res = URI.split('@');\n  if (res.length===2) {\n    return {\n      address: res[0],\n      hostport: res[1],\n      error: ''\n    };\n  } else {\n    return {\n      error: 'invalid format'\n    };\n  }\n};\n\nexport {\n  findUserByAddress,\n  splitURI\n};","import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport {\n  List,\n  Divider,\n  Modal,\n  Layout,\n  Button,\n  Tooltip,\n  Dropdown,\n  Menu,\n} from \"antd\";\nimport {\n  LoadingOutlined,\n  ExclamationCircleOutlined,\n  DownCircleOutlined,\n  SafetyOutlined,\n  CloseCircleOutlined,\n  CheckOutlined,\n  EllipsisOutlined,\n} from \"@ant-design/icons\";\n\nimport MessageInfo from \"./message-info\";\nimport ChatHistoryInput from \"./chat-history-input\";\nimport ChatHistoryStatistics from \"./chat-history-statistics\";\nimport UserPreview from \"./user-preview\";\nimport generateIdenticon from \"../../utils/identicon.js\";\nimport { findUserByAddress } from \"../../utils/users-utils.js\";\nimport { payloadToDom } from \"../../payload-protocol/parsers\";\n\nimport discussionClient from \"../../services/discussionServices\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\nimport {\n  concatUserNames,\n  concatUserAddresses,\n  routesToAddresses,\n  populateChatHistoryMetadata,\n} from \"../../utils/discussion-utils\";\nimport theme from \"../../style/theme\";\nimport \"./chat-history.css\";\nimport { JsonToTable } from \"react-json-to-table\";\n\nconst { GetDiscussionHistoryResponse } = require(\"../../rpc/rpc_pb\");\nconst cryptoUtils = require(\"../../utils/crypto-utils\");\n\n/**\n * This component represents the chat history page.\n * This page contains all functionalities responsible for chatting.\n * @param {*} props The global variables.\n */\nconst ChatHistory = (props) => {\n  const messagesPerBlock = 15;\n  const [oldListHeight, setOldListHeight] = useState(0);\n  const [lastMessageSeen, setLastMessageSeen] = useState(0);\n  const [noMoreHistory, setNoMoreHistory] = useState(false);\n\n  const [anonymousActive, setAnonymousActive] = useState(false);\n\n  const [feeModalVisible, setFeeModalVisible] = useState(false);\n  const [statisticsModalVisible, setStatisticsModalVisible] = useState(false);\n  const [messageInfoModalVisible, setMessageInfoModalVisible] = useState(false);\n  const [userPreviewVisible, setUserPreviewVisible] = useState(false);\n  const [userPreviewUser, setUserPreviewUser] = useState();\n\n  const [selectedMessage, setSelectedMessage] = useState();\n\n  const [pageLoaded, setPageLoaded] = useState(false);\n\n  const [anonymousBucket, setAnonymousBucket] = useState(false);\n\n  const [selectedMessageInfo, setSelectedMessageInfo] = useState();\n\n  // this function calculates store the payload of the selectedMessage in order to be displayed\n  const selectedMessageInfoHandler = () => {\n    setSelectedMessageInfo(JSON.parse(selectedMessage.payload));\n  };\n\n  const chatHistoryHeaderProps = {\n    anonymousBucket,\n    setAnonymousBucket,\n  };\n\n  const chatHistoryIcon = (\n    <>\n      {props.selectedDiscussion.participantsList.length > 1\n        ? generateIdenticon(\n          concatUserAddresses(props, [\n            props.selfInfo.address,\n            ...props.selectedDiscussion.participantsList,\n          ]),\n          50\n        )\n        : generateIdenticon(\n          concatUserAddresses(props, [\n            props.selectedDiscussion.participantsList,\n          ]),\n          50\n        )}\n    </>\n  );\n\n  const chatHistoryUsrName = (\n    <>\n      {anonymousBucket\n        ? \"Anonymous Messages\"\n        : concatUserNames(props, props.selectedDiscussion.participantsList)}\n    </>\n  );\n\n  /**\n   * Updates the last seen message of the currently selected discussion to the last message of the current chat history.\n   * @param {*} history The current chat history. Used to retrieve the last message's id.\n   */\n  const updateLastMessageSeen = (history) => {\n    discussionClient().updateDiscussionLastRead(\n      {\n        discussionId: props.selectedDiscussion.id,\n        lastReadMsgId: history[history.length - 1].id,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n        }\n        if (res) {\n          if (!document.hidden) {\n            setLastMessageSeen(history[history.length - 1].id);\n            props.selectedDiscussion.lastReadMsgId =\n              history[history.length - 1].id;\n          } else {\n          }\n        }\n      }\n    );\n  };\n\n  /**\n   * Calculates alignment for message text based on the current loaded chatLayout setting.\n   * @param {*} item The chat history message object.\n   * @returns The align direction.\n   */\n  const calculateTextAlign = (item) => {\n    switch (props.chatLayout) {\n    case \"normal\":\n      return findSenderName(item) === props.selfInfo.alias ? \"right\" : \"left\";\n    case \"left\":\n      return \"left\";\n    case \"right\":\n      return \"right\";\n    }\n  };\n\n  /**\n   * Calculates the chat bubble direction based on the current loaded chatLayout setting.\n   * @param {*} item The chat history message object.\n   * @returns The flex-row direction.\n   */\n  const calculateFlexRowDirection = (item) => {\n    switch (props.chatLayout) {\n    case \"normal\":\n      return findSenderName(item) === props.selfInfo.alias\n        ? \"row-reverse\"\n        : \"row\";\n    case \"left\":\n      return \"row\";\n    case \"right\":\n      return \"row-reverse\";\n    }\n    return findSenderName(item) === props.selfInfo.alias\n      ? \"row-reverse\"\n      : \"row\";\n  };\n\n  /**\n   * Calculates the message header's color to indicate unread status.\n   * @param {*} item The chat history message object.\n   * @returns The color of the header.\n   */\n  const calculateChatHistoryMessageColor = (item) => {\n    if (pageLoaded === false) {\n      return item.id > props.selectedDiscussion.lastReadMsgId &&\n        item.sender !== props.selfInfo.address\n        ? \"cyan\"\n        : \"inherit\";\n    } else {\n      return item.id > lastMessageSeen && item.sender !== props.selfInfo.address\n        ? \"cyan\"\n        : \"inherit\";\n    }\n  };\n\n  /**\n   * Calculates the display status for the message failure indicator.\n   * @param {*} item The chat history message object.\n   * @returns The display status of the indicator.\n   */\n  const calculatePartialFailureIndicatorDisplay = (item) => {\n    return item.sender === props.selfInfo.address\n      ? routesToAddresses(item.paymentRoutesList).length ===\n        props.selectedDiscussion.participantsList.length\n        ? \"none\"\n        : \"inline\"\n      : \"none\";\n  };\n\n  const atBottom = () => {\n    let elem = document.getElementById(\"chatHistoryListId\");\n    if (elem?.scrollHeight - elem?.scrollTop > elem?.clientHeight + 120) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * This function is called anytime the selected discussion changes.\n   */\n  useEffect(async () => {\n    if (props.selectedDiscussion) {\n      props.setChatHistory([]);\n      loadHistory(true, props.selectedDiscussion.id);\n      let elem = document.getElementById(\"chatHistoryListId\");\n      setAnonymousActive(false);\n      setPageLoaded(false);\n      setNoMoreHistory(false);\n      if (props.selectedDiscussion.participantsList[0] === \"\") {\n        props.setAnonymousBucket(true);\n      } else {\n        props.setAnonymousBucket(false);\n      }\n    }\n  }, [props.selectedDiscussion]);\n\n  /**\n   * This function is called anytime the current chat history changes.\n   */\n  useEffect(() => {\n    if (props.chatHistory.length !== 0) {\n      if (pageLoaded) {\n        if (atBottom()) {\n          updateChatScroll();\n          updateLastMessageSeen(props.chatHistory);\n        }\n      } else {\n        setPageLoaded(true);\n        updateLastMessageSeen(props.chatHistory);\n        setChatScroll();\n        setTimeout(function () {\n          setChatScroll();\n        }, 750);\n      }\n    }\n  }, [props.chatHistory]);\n\n  /**\n   * This function fetches the history of the currently selected discussion.\n   * It stores the response in the chatHistory variable.\n   */\n  async function loadHistory(fresh, discussionId) {\n    let reverse = true;\n    /**\n     * If lastId == 0 then discussion is either empty, or contains only\n     * one message with id == 0. In case the discussion has only one\n     * message with id == 0, we need to declare reverse = true in order\n     * for backend to normally return the response\n     */\n    if (props.selectedDiscussion.lastMsgId == 0) {\n      reverse = false;\n    }\n    let async_selectedDiscusion;\n    await props.setSelectedDiscussion((oldValue) => {\n      async_selectedDiscusion = oldValue;\n      return oldValue;\n    });\n    let chatHistory = [];\n    let previousId = !fresh ? props.chatHistory[0].id - 1 : 0;\n    if (previousId < 0) {\n      previousId = 0;\n    }\n    return await discussionClient()\n      .getDiscussionHistoryById({\n        id: props.selectedDiscussion.id,\n        pageOptions: {\n          reverse: reverse,\n          lastId: fresh ? props.selectedDiscussion.lastMsgId : previousId,\n          pageSize: fresh ? 50 : messagesPerBlock,\n        },\n      })\n      .on(\"data\", (res) => {\n        chatHistory.push(\n          GetDiscussionHistoryResponse.toObject(true, res).message\n        );\n      })\n      .on(\"end\", () => {\n        if (async_selectedDiscusion.id === discussionId) {\n          if (chatHistory.length === 0) {\n            setNoMoreHistory(true);\n          }\n          props.setChatHistory((oldHistory) => {\n            let res = [...oldHistory];\n            res.unshift(...chatHistory);\n            populateChatHistoryMetadata(res);\n            return res;\n          });\n        }\n      })\n      .on(\"error\", (e) => {\n        if (e.code == 13) {\n          setNoMoreHistory(true);\n        }\n        console.log(\"err\", e);\n      })\n      .on(\"status\", () => {});\n  }\n\n  /**\n   * This function scrolls to the bottom of the chat history with respect to animations.\n   */\n  const updateChatScroll = () => {\n    let element = document.getElementById(\"chatHistoryListId\");\n    if (element && !document.hidden) {\n      element.scroll({\n        top: element.scrollHeight,\n        behavior: props.smoothAnimations ? \"smooth\" : \"auto\",\n      });\n    }\n  };\n\n  /**\n   * This function scrolls to the bottom of the chat history without animations.\n   */\n  const setChatScroll = () => {\n    let element = document.getElementById(\"chatHistoryListId\");\n    if (element) {\n      element.scroll({\n        top: element.scrollHeight,\n        behavior: \"auto\",\n      });\n    }\n  };\n\n  /**\n   * This function returns a message object's sender's name.\n   * @param {*} item The message object.\n   */\n  const findSenderName = (item) => {\n    let lookup;\n    if (props.contacts) {\n      lookup = props.contacts.find((elem) => {\n        return elem.user.address === item.sender;\n      });\n    }\n    if (lookup) {\n      return lookup.displayName;\n    } else if (item.sender === props.selfInfo.address) {\n      return props.selfInfo.alias;\n    } else {\n      let userLookup = findUserByAddress(props, item.sender);\n      return userLookup ? userLookup.alias : \"Unknown\";\n    }\n  };\n\n  /**\n   * The JSX element for the payment info modal footer.\n   * @returns The JSX of the footer.\n   */\n  const totalFeesFooter = () => {\n    return (\n      <div>\n        {selectedMessage?.sender == props.selfInfo.address\n          ? \"Total Fees Paid:\"\n          : \"\"}\n        <b>\n          {`${cryptoUtils.msatToCurrentCryptoUnit(\n            props,\n            selectedMessage ? selectedMessage.totalFeesMsat : 0\n          )}`}\n        </b>\n        {`${props.selectedCryptoUnit}`}\n        <b>\n          {`  /  ${cryptoUtils.msatAmtToFiat(\n            props,\n            selectedMessage ? selectedMessage.totalFeesMsat : 0\n          )}`}\n        </b>\n        {` ${props.selectedFiatUnit}`}\n      </div>\n    );\n  };\n\n  /**\n   * Month index to month string.\n   */\n  const monthToStr = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sept\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  /**\n   * Returns a string representing a unix timestamp date representation\n   * @param {*} unix The unix timestamp\n   * @return {string} The date string\n   */\n  const unixToDate = (unix) => {\n    const date = new Date(unix * 1000);\n    const now = new Date();\n    let format;\n    const hours = date.getHours();\n    const minutes = \"0\" + date.getMinutes();\n    if (\n      now.getMonth() === date.getMonth() &&\n      now.getDate() === date.getDate()\n    ) {\n      format = hours + \":\" + minutes.substr(-2);\n    } else {\n      format = monthToStr[date.getMonth()] + \"-\" + date.getDate();\n      if (now.getUTCFullYear() !== date.getUTCFullYear()) {\n        format += \"-\" + date.getFullYear();\n      }\n      format += \" \" + hours + \":\" + minutes.substr(-2);\n    }\n\n    return format;\n  };\n\n  /**\n   * The chat history JSX\n   */\n  return (\n    <>\n      <div className=\"chat-history\">\n        <div\n          className=\"chat-hIstory-header\"\n          style={{\n            backgroundColor: theme.menuDarkLite,\n          }}\n        >\n          <DoubleRightOutlined\n            className=\"chatHistoryArrow\"\n            style={{\n              display: props.sideSquashed\n                ? props.sideActivated\n                  ? \"none\"\n                  : \"inherit\"\n                : \"none\",\n            }}\n            onClick={() => {\n              props.setSideActivated(true);\n            }}\n          />\n          <div className=\"chat-history-header-UserIcon\">{chatHistoryIcon}</div>\n          <div className=\"chat-history-header-UserName\">\n            {\" \"}\n            {chatHistoryUsrName}\n          </div>\n          <Dropdown\n            className=\"chat-history-dropdοwn\"\n            trigger=\"click\"\n            overlay={\n              <Menu>\n                <Menu.Item\n                  onClick={() => {\n                    setStatisticsModalVisible(true);\n                  }}\n                >\n                  Discussion Statistics\n                </Menu.Item>\n              </Menu>\n            }\n          >\n            <Button className=\"chat-history-btn\">\n              <EllipsisOutlined />\n            </Button>\n          </Dropdown>\n        </div>\n        <div className=\"chat-history-content\">\n          <Layout className=\"chat-history-layout\">\n            <Layout.Content\n              className=\"contentBody\"\n              onMouseDown={(e) => {\n                if (window.innerWidth > window.innerHeight) {\n                  e.preventDefault();\n                  document.getElementById(\"messageInputArea\")?.focus();\n                }\n              }}\n            >\n              <div\n                className=\"chatHistoryList\"\n                id=\"chatHistoryListId\"\n                style={{\n                  backgroundColor:\n                    anonymousActive || props.anonymousBucket\n                      ? \"rgb(35, 35, 35)\"\n                      : \"rgb(45, 45, 65)\",\n                }}\n              >\n                <div\n                  className=\"chat-history-arrowMore\"\n                  style={{\n                    left: props.sideSquashed ? \"calc(50%)\" : \"calc(50% + 50px)\",\n                    bottom: atBottom() ? \"-1000px\" : \"50px\",\n                    opacity: atBottom() ? \"0\" : \"100\",\n                  }}\n                >\n                  <DownCircleOutlined\n                    style={{\n                      color: props.chatHistory.length\n                        ? props.chatHistory[props.chatHistory.length - 1].id ===\n                          lastMessageSeen\n                          ? \"white\"\n                          : \"cyan\"\n                        : \"white\",\n                    }}\n                    onClick={() => {\n                      updateChatScroll();\n                      if (props.chatHistory.length !== 0) {\n                        updateLastMessageSeen(props.chatHistory);\n                      }\n                    }}\n                  />\n                </div>\n                <div>\n                  <Button\n                    className=\"chat-history-DownCircleOutlined-button\"\n                    style={{\n                      display:\n                        props.chatHistory.length >= 10 && !noMoreHistory\n                          ? \"inherit\"\n                          : \"none\",\n                    }}\n                    onClick={() => {\n                      let elem = document.getElementById(\"chatHistoryListId\");\n                      setOldListHeight(elem.scrollHeight);\n                      loadHistory(false, props.selectedDiscussion.id);\n                    }}\n                  >\n                    Load More Messages\n                  </Button>\n                  <List\n                    dataSource={props.chatHistory}\n                    locale={{\n                      emptyText: (\n                        <div>\n                          <LoadingOutlined\n                            className=\"chat-history-loadingOutlined\"\n                            style={{\n                              display: pageLoaded ? \"none\" : \"inherit\",\n                            }}\n                            spin\n                          />\n                          <h2\n                            style={{\n                              display: pageLoaded ? \"inherit\" : \"none\",\n                            }}\n                          >\n                            {props.anonymousBucket\n                              ? \"No anonymous messages received\"\n                              : \"Send your first message!\"}\n                          </h2>\n                        </div>\n                      ),\n                    }}\n                    renderItem={(item) => {\n                      return (\n                        <List.Item className=\"chat-history-listItem\">\n                          <div\n                            className=\"chatHistoryFlexWrapper\"\n                            style={{\n                              flexDirection: calculateFlexRowDirection(item),\n                              textAlign: calculateTextAlign(item),\n                            }}\n                          >\n                            <div\n                              className=\"chatHistoryFlexWrapperAfter\"\n                              style={{\n                                display: props.chatIdenticons\n                                  ? \"inherit\"\n                                  : \"none\",\n                                opacity: item[\"merge\"] ? \"0\" : \"1\",\n                              }}\n                              onClick={() => {\n                                setUserPreviewUser(\n                                  findUserByAddress(props, item.sender)\n                                );\n                                setUserPreviewVisible(true);\n                              }}\n                            >\n                              {generateIdenticon(item.sender, 25)}\n                            </div>\n                            <div\n                              className=\"chatHistoryMessageWrapper\"\n                              style={{\n                                marginTop: item[\"merge\"] ? \"0px\" : \"5px\",\n                              }}\n                            >\n                              <div\n                                style={{\n                                  display:\n                                    item[\"merge\"] === true &&\n                                    item.payload &&\n                                    item.amtMsat < 15000\n                                      ? \"none\"\n                                      : \"flex\",\n                                  flexDirection:\n                                    calculateFlexRowDirection(item),\n                                  fontSize: \"13px\",\n                                }}\n                              >\n                                <div className=\"chatHistoryMessageWrapperDiv\">\n                                  <b\n                                    className=\"chat-history-interlocutorsName\"\n                                    style={{\n                                      color:\n                                        calculateChatHistoryMessageColor(item),\n                                    }}\n                                    onClick={() => {\n                                      setUserPreviewUser(\n                                        findUserByAddress(props, item.sender)\n                                      );\n                                      setUserPreviewVisible(true);\n                                    }}\n                                  >\n                                    {findSenderName(item) !==\n                                    props.selfInfo.alias\n                                      ? findSenderName(item)\n                                      : \"You\"}\n                                  </b>\n                                </div>\n                                <Divider type=\"vertical\" />\n                                <div className=\"chatHistoryMessageWrapperDivider\">\n                                  {unixToDate(item.sentTimestamp.seconds)}\n                                </div>\n                                <Divider type=\"vertical\" />\n                                <span className=\"chatHistoryCost\">\n                                  <span\n                                    className=\"chat-history-spanAfterDivider\"\n                                    style={{\n                                      color:\n                                        findSenderName(item) !==\n                                        props.selfInfo.alias\n                                          ? \"green\"\n                                          : \"red\",\n                                      paddingLeft: item.payload ? \"0px\" : \"5px\",\n                                    }}\n                                    onClick={() => {\n                                      setSelectedMessage(item);\n                                      setFeeModalVisible(true);\n                                    }}\n                                  >\n                                    {`${cryptoUtils.msatToCurrentCryptoUnit(\n                                      props,\n                                      parseInt(item.amtMsat) +\n                                        parseInt(item.totalFeesMsat)\n                                    )}`}\n                                  </span>\n                                  <span>{props.selectedCryptoUnit}</span>\n                                  <span\n                                    className=\"chat-history-padding\"\n                                    style={{\n                                      display: item.payload\n                                        ? \"none\"\n                                        : \"inherit\",\n                                    }}\n                                  >\n                                    {findSenderName(item) !==\n                                    props.selfInfo.alias\n                                      ? \"from\"\n                                      : \"to\"}\n                                    <span className=\"chat-history-padding\">\n                                      {props.selectedDiscussion.participantsList\n                                        .length > 1\n                                        ? findSenderName(item) !==\n                                          props.selfInfo.alias\n                                          ? findSenderName(item)\n                                          : \"everyone\"\n                                        : concatUserNames(props, [\n                                          props.selectedDiscussion\n                                            .participantsList[0],\n                                        ])}\n                                    </span>\n                                  </span>\n                                </span>\n                                <Divider type=\"vertical\" />\n                                <span\n                                  style={{\n                                    color: item.senderVerified\n                                      ? \"green\"\n                                      : \"red\",\n                                  }}\n                                >\n                                  <Tooltip\n                                    title={\n                                      item.senderVerified\n                                        ? \"Verified Message\"\n                                        : \"Unverified Message\"\n                                    }\n                                  >\n                                    {item.senderVerified ? (\n                                      item.sender === props.selfInfo.address ? (\n                                        <CheckOutlined />\n                                      ) : (\n                                        <SafetyOutlined />\n                                      )\n                                    ) : (\n                                      <CloseCircleOutlined />\n                                    )}\n                                  </Tooltip>\n                                </span>\n                                <span\n                                  className=\"chat-history-setSelectedMessage\"\n                                  style={{\n                                    display:\n                                      calculatePartialFailureIndicatorDisplay(\n                                        item\n                                      ),\n                                  }}\n                                  onClick={() => {\n                                    setSelectedMessage(item);\n                                    setFeeModalVisible(true);\n                                  }}\n                                >\n                                  <Tooltip title=\"Some users did not receive the message / payment\">\n                                    <ExclamationCircleOutlined />\n                                  </Tooltip>\n                                </span>\n                              </div>\n                              <div\n                                className=\"chatHistoryMessage\"\n                                style={{\n                                  backgroundColor:\n                                    findSenderName(item) ===\n                                    props.selfInfo.alias\n                                      ? props.myMessageColor\n                                      : props.otherMessageColor,\n                                  display: item.payload\n                                    ? \"inline-block\"\n                                    : \"none\",\n                                  maxWidth:\n                                    props.chatLayout === \"normal\"\n                                      ? \"60%\"\n                                      : \"80%\",\n                                }}\n                              >\n                                {payloadToDom(\n                                  props,\n                                  item.payload,\n                                  item.sender === props.selfInfo.address,\n                                  item.amtMsat\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </List.Item>\n                      );\n                    }}\n                  />\n                </div>\n              </div>\n            </Layout.Content>\n            <footer\n              className=\"chat-history-footer\"\n              style={{\n                backgroundColor: theme.menuDarkLite,\n                display:\n                  props.selectedPage === \"chatHistory\" && !props.anonymousBucket\n                    ? \"block\"\n                    : \"none\",\n              }}\n            >\n              <ChatHistoryInput\n                {...props}\n                updateLastMessageSeen={updateLastMessageSeen}\n                updateChatScroll={updateChatScroll}\n                anonymousActive={anonymousActive}\n                setAnonymousActive={setAnonymousActive}\n              />\n            </footer>\n          </Layout>\n\n          <Modal\n            visible={!!feeModalVisible}\n            title={\n              selectedMessage?.sender == props.selfInfo.address ? (\n                <div className=\"chat-history-feeModal\">\n                  <p className=\"chat-history-feeModal-text\">\n                    Received by{\" \"}\n                    {concatUserNames(\n                      props,\n                      routesToAddresses(selectedMessage?.paymentRoutesList)\n                    )}\n                  </p>\n                  <Button\n                    className=\"chat-history-feeModal-button\"\n                    onClick={() => {\n                      setMessageInfoModalVisible(true),\n                      selectedMessageInfoHandler();\n                    }}\n                  >\n                    Raw Message\n                  </Button>\n                </div>\n              ) : (\n                <div className=\"chat-history-feeModal\">\n                  <p className=\"chat-history-feeModal-text\">Received by you</p>\n                  <Button\n                    className=\"chat-history-feeModal-button\"\n                    onClick={() => {\n                      setMessageInfoModalVisible(true),\n                      selectedMessageInfoHandler();\n                    }}\n                  >\n                    Raw Message\n                  </Button>\n                </div>\n              )\n            }\n            footer={[\n              <span key=\"\" className=\"chat-history-footer-span\">\n                {`Total Amount ${\n                  selectedMessage\n                    ? selectedMessage.sender === props.selfInfo.address\n                      ? \"Sent: \"\n                      : \"Received: \"\n                    : \"\"\n                }`}\n                <b>\n                  {`${cryptoUtils.msatToCurrentCryptoUnit(\n                    props,\n                    selectedMessage ? selectedMessage.amtMsat : 0\n                  )}`}\n                </b>\n                {`${props.selectedCryptoUnit}`}\n                <b>\n                  {`  /  ${cryptoUtils.msatAmtToFiat(\n                    props,\n                    selectedMessage ? selectedMessage.amtMsat : 0\n                  )}`}\n                </b>\n                {` ${props.selectedFiatUnit}`}\n                <br />\n                {selectedMessage?.sender === props.selfInfo.address\n                  ? totalFeesFooter()\n                  : \"\"}\n              </span>,\n              <Button\n                key=\"ok\"\n                onClick={() => {\n                  setFeeModalVisible(false);\n                }}\n              >\n                OK\n              </Button>,\n            ]}\n            onOk={() => {\n              setFeeModalVisible(false);\n            }}\n            onCancel={() => {\n              setFeeModalVisible(false);\n            }}\n            cancelButtonProps={{ style: { display: \"none\" } }}\n          >\n            {selectedMessage?.sender === props.selfInfo.address ? (\n              <MessageInfo {...props} selectedMessage={selectedMessage} />\n            ) : (\n              \"You can not retrieve payment information for received messages\"\n            )}\n          </Modal>\n          <Modal\n            title={\"Message information\"}\n            visible={messageInfoModalVisible}\n            onOk={() => {\n              setMessageInfoModalVisible(false);\n            }}\n            onCancel={() => {\n              setMessageInfoModalVisible(false);\n            }}\n          >\n            <JsonToTable\n              json={selectedMessageInfo}\n            />\n          </Modal>\n          <UserPreview\n            {...props}\n            visible={userPreviewVisible}\n            setVisible={setUserPreviewVisible}\n            user={userPreviewUser}\n          />\n          <Modal\n            title={\"Discussion Statistics\"}\n            visible={statisticsModalVisible}\n            onOk={() => {\n              setStatisticsModalVisible(false);\n            }}\n            onCancel={() => {\n              setStatisticsModalVisible(false);\n            }}\n            cancelButtonProps={{ style: { display: \"none\" } }}\n          >\n            <ChatHistoryStatistics {...props} />\n          </Modal>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ChatHistory;\n","import React, { useState } from \"react\";\nimport { Button, Form, Divider, Switch, Select, Collapse } from \"antd\";\nimport { LogoutOutlined } from \"@ant-design/icons\";\nimport { GithubPicker } from \"react-color\";\nimport \"./user-settings.css\";\nimport theme from \"../../style/theme\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\nconst messageColorsArray = [\n  \"black\",\n  \"darkslategray\",\n  \"brown\",\n  \"darkblue\",\n  \"darkgreen\",\n  \"darkslateblue\",\n  \"darkslategrey\",\n  \"indigo\",\n  \"olivedrab\",\n  \"sienna\",\n  \"saddlebrown\",\n  \"teal\",\n  \"steelblue\",\n  \"seagreen\",\n];\n\n/**\n * This component represents the user settings page, containing user and connection information.\n * @param {*} props The global variables.\n */\nconst UserSettings = (props) => {\n  // Current account related variables\n  const [url] = useState(window.localStorage.getItem(\"url\"));\n  /**\n   * The user settings page JSX.\n   */\n  return (\n    <>\n      <div className=\"user-settings\">\n        <div\n          className=\"user-settings-header\"\n          style={{\n            backgroundColor: theme.menuDarkLite,\n          }}\n        >\n          <DoubleRightOutlined\n            className=\"chatHistoryExpandForMobile\"\n            style={{\n              display: props.sideSquashed\n                ? props.sideActivated\n                  ? \"none\"\n                  : \"inherit\"\n                : \"none\",\n            }}\n            onClick={() => {\n              props.setSideActivated(true);\n            }}\n          />\n          <div className=\"user-settings-header-text\">Settings</div>\n        </div>\n        <div className=\"user-settings-main\">\n          <Form className=\"user-settings-form\">\n            <Collapse>\n              <Collapse.Panel header=\"View Settings\">\n                <Form.Item>\n                  <Switch\n                    checked={!!props.automaticImageLoading}\n                    className=\"user-settings-collapse\"\n                    onChange={(value) => {\n                      props.setAutomaticImageLoading(value);\n                      window.localStorage.setItem(\n                        \"automaticImageLoadingSetting\",\n                        value\n                      );\n                    }}\n                  />\n                  Allow automatic loading of externally linked images\n                </Form.Item>\n                <Form.Item>\n                  <Switch\n                    checked={!!props.smoothAnimations}\n                    className=\"user-settings-collapse\"\n                    onChange={(value) => {\n                      props.setSmoothAnimations(value);\n                      window.localStorage.setItem(\n                        \"smoothAnimationsSetting\",\n                        value\n                      );\n                    }}\n                  />\n                  Enable smooth animations and transitions\n                </Form.Item>\n                <Form.Item>\n                  <Switch\n                    checked={!!props.chatIdenticons}\n                    className=\"user-settings-collapse\"\n                    onChange={(value) => {\n                      props.setChatIdenticons(value);\n                      window.localStorage.setItem(\n                        \"chatIdenticonsSetting\",\n                        value\n                      );\n                    }}\n                  />\n                  Show user icons in chat messages\n                </Form.Item>\n                <Form.Item>\n                  <Select\n                    defaultValue={`${props.chatLayout}`}\n                    className=\"user-settings-formSelect\"\n                    onChange={(e) => {\n                      props.setChatLayout(e);\n                      window.localStorage.setItem(\"chatLayoutSetting\", e);\n                    }}\n                  >\n                    <Select.Option value=\"normal\">Normal</Select.Option>\n                    <Select.Option value=\"left\">Left Side</Select.Option>\n                    <Select.Option value=\"right\">Right Side</Select.Option>\n                  </Select>\n                  Messages Layout\n                </Form.Item>\n                <Form.Item>\n                  My Messages Color:\n                  <GithubPicker\n                    triangle=\"hide\"\n                    colors={messageColorsArray}\n                    color={props.myMessageColor}\n                    onChangeComplete={(color) => {\n                      props.setMyMessageColor(color.hex);\n                      window.localStorage.setItem(\n                        \"myMessageColorSetting\",\n                        color.hex\n                      );\n                    }}\n                  />\n                  <Button\n                    onClick={() => {\n                      props.setMyMessageColor(\"rgba(0, 0, 0, 0.0)\");\n                      window.localStorage.setItem(\n                        \"myMessageColorSetting\",\n                        \"rgba(0, 0, 0, 0.0)\"\n                      );\n                    }}\n                  >\n                    Transparent\n                  </Button>\n                </Form.Item>\n                <Form.Item>\n                  Other Messages Color:\n                  <GithubPicker\n                    className=\"user-settings-github\"\n                    triangle=\"hide\"\n                    colors={messageColorsArray}\n                    color={props.myMessageColor}\n                    onChangeComplete={(color) => {\n                      props.setOtherMessageColor(color.hex);\n                      window.localStorage.setItem(\n                        \"otherMessageColorSetting\",\n                        color.hex\n                      );\n                    }}\n                  />\n                  <Button\n                    onClick={() => {\n                      props.setOtherMessageColor(\"rgba(0, 0, 0, 0.0)\");\n                      window.localStorage.setItem(\n                        \"otherMessageColorSetting\",\n                        \"rgba(0, 0, 0, 0.0)\"\n                      );\n                    }}\n                  >\n                    Transparent\n                  </Button>\n                </Form.Item>\n                <Form.Item>\n                  <Switch\n                    checked={!!props.developerLogs}\n                    className=\"user-settings-collapse\"\n                    onChange={(value) => {\n                      props.setDeveloperLogs(value);\n                      window.localStorage.setItem(\n                        \"developerLogsSetting\",\n                        value\n                      );\n                    }}\n                  />\n                  Developer Logs (Page refresh required)\n                </Form.Item>\n              </Collapse.Panel>\n              <Collapse.Panel header=\"Crypto Settings\">\n                <Form.Item>\n                  <Select\n                    defaultValue={`${props.selectedCryptoUnit}`}\n                    className=\"user-settings-formSelect\"\n                    onChange={(e) => {\n                      props.setSelectedCryptoUnit(e);\n                      window.localStorage.setItem(\n                        \"selectedCryptoUnitSetting\",\n                        e\n                      );\n                    }}\n                  >\n                    <Select.Option value=\"mBTC\">mBTC</Select.Option>\n                    <Select.Option value=\"sat\">sat</Select.Option>\n                    <Select.Option value=\"msat\">msat</Select.Option>\n                  </Select>\n                  Select crypto unit to display\n                </Form.Item>\n                <Form.Item>\n                  <Select\n                    defaultValue={`${props.selectedFiatUnit}`}\n                    className=\"user-settings-formSelect\"\n                    onChange={(e) => {\n                      props.setSelectedFiatUnit(e);\n                      window.localStorage.setItem(\"selectedFiatUnitSetting\", e);\n                    }}\n                  >\n                    <Select.Option value=\"EUR\">EUR</Select.Option>\n                    <Select.Option value=\"USD\">USD</Select.Option>\n                  </Select>\n                  Select fiat unit to display\n                </Form.Item>\n              </Collapse.Panel>\n              <Collapse.Panel header=\"Account Info\">\n                <b>\n                  <Divider orientation=\"left\">\n                    <h2>Self Info</h2>\n                  </Divider>\n                </b>\n                <Form.Item label=\"Your Alias is:\">\n                  {props.selfInfo ? props.selfInfo.alias : \"Not Found\"}\n                </Form.Item>\n                <Form.Item label=\"Your Address is:\">\n                  {props.selfInfo ? props.selfInfo.address : \"Not Found\"}\n                </Form.Item>\n                <b>\n                  <Divider orientation=\"left\">\n                    <h2>Backend Info</h2>\n                  </Divider>\n                </b>\n                <Form.Item label=\"Address:\">{url}</Form.Item>\n                <Form.Item label=\"Version:\">{props.backendVersion}</Form.Item>\n              </Collapse.Panel>\n            </Collapse>\n          </Form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UserSettings;\n","import apiUrl from \"../config/api-url\";\nimport authCreds from \"../config/auth-creds\";\n\nconst { OpenChannelRequest, OpenChannelResponse } = require(\"../rpc/rpc_pb\");\nconst { ChannelServiceClient } = require(\"../rpc/rpc_grpc_web_pb.js\");\n\nconst rpcClient = new ChannelServiceClient(apiUrl(), {});\n\nconst client = new Object();\n\nclient.openChannel = (req, callback) => {\n  const request = new OpenChannelRequest();\n  request.setAddress(req.address ? req.address : \"\");\n  request.setAmtMsat(req.amtMsat ? req.amtMsat : \"\");\n  request.setPushAmtMsat(req.pushAmtMsat ? req.pushAmtMsat : \"\");\n  request.setMinInputConfs(req.minInputConfs ? req.minInputConfs : \"\");\n  request.setTargetConfirmationBlock(\n    req.targetConfirmationBlock ? req.targetConfirmationBlock : \"\"\n  );\n  return rpcClient.openChannel(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? OpenChannelResponse.toObject(res, res) : undefined)\n  );\n};\n\nconst channelClient = () => {\n  return client;\n};\n\nexport default channelClient;\n","import apiUrl from \"../config/api-url\";\nimport authCreds from \"../config/auth-creds\";\n\nconst {\n  VersionRequest,\n  Version,\n  SelfInfoRequest,\n  SelfInfoResponse,\n  SelfBalanceRequest,\n  SelfBalanceResponse,\n  GetNodesRequest,\n  NodeInfoResponse,\n  SearchNodeByAddressRequest,\n  SearchNodeByAliasRequest,\n  ConnectNodeRequest,\n  ConnectNodeResponse,\n} = require(\"../rpc/rpc_pb\");\nconst { NodeInfoServiceClient } = require(\"../rpc/rpc_grpc_web_pb.js\");\n\nconst rpcClient = new NodeInfoServiceClient(apiUrl(), {});\n\nconst client = new Object();\n\nclient.getVersion = (req, meta, callback) => {\n  const request = new VersionRequest();\n  return rpcClient.getVersion(\n    request,\n    { ...authCreds(), ...meta },\n    (err, res) => callback(err, res ? Version.toObject(true, res) : undefined)\n  );\n};\n\nclient.getSelfInfo = (req, meta, callback) => {\n  const request = new SelfInfoRequest();\n  return rpcClient.getSelfInfo(\n    request,\n    { ...authCreds(), ...meta },\n    (err, res) =>\n      callback(err, res ? SelfInfoResponse.toObject(true, res) : undefined)\n  );\n};\n\nclient.getSelfBalance = (req, callback) => {\n  const request = new SelfBalanceRequest();\n  return rpcClient.getSelfBalance(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? SelfBalanceResponse.toObject(true, res) : undefined)\n  );\n};\n\nclient.getNodes = (req, callback) => {\n  const request = new GetNodesRequest();\n  return rpcClient.getNodes(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? NodeInfoResponse.toObject(true, res) : undefined)\n  );\n};\n\nclient.searchNodeByAddress = (req, callback) => {\n  const request = new SearchNodeByAddressRequest();\n  request.setAddress(req.address);\n  return rpcClient.searchNodeByAddress(\n    request,\n    { ...authCreds() },\n    (err, res) =>\n      callback(err, res ? NodeInfoResponse.toObject(true, res) : undefined)\n  );\n};\n\nclient.searchNodeByAlias = (req, callback) => {\n  const request = new SearchNodeByAliasRequest();\n  request.setAlias(req.alias);\n  return rpcClient.searchNodeByAlias(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? NodeInfoResponse.toObject(true, res) : undefined)\n  );\n};\n\nclient.connectNode = (req, callback) => {\n  const request = new ConnectNodeRequest();\n  request.setAddress(req.address);\n  request.setHostport(req.hostport);\n  return rpcClient.connectNode(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? ConnectNodeResponse.toObject(true, res) : undefined)\n  );\n};\n\nconst nodeInfoClient = () => {\n  return client;\n};\n\nexport default nodeInfoClient;\n","import React, { useState } from \"react\";\n\nimport { Form, Divider, Modal, Input, Tabs } from \"antd\";\n\nimport { splitURI } from \"../../utils/users-utils\";\n\nimport channelClient from \"../../services/channelServices\";\nimport nodeInfoClient from \"../../services/nodeInfoServices\";\n\nimport { NotificationManager } from \"react-notifications\";\n\nimport \"./open-channel.css\";\n\nconst cryptoUtils = require(\"../../utils/crypto-utils\");\n\n/**\n * This component represents the modal for openning channels.\n * @param {*} props The global variables.\n * @returns The JSX of the modal.\n */\nconst OpenChannel = (props) => {\n  // Modal related variables\n  const [mode, setMode] = useState(\"basic\");\n  const [lightningAddress, setLightningAddress] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [pushAmount, setPushAmount] = useState(0);\n  const [minimumInputConfirmations, setMinimumInputConfirmations] = useState(1);\n  const [targetConfirmationBlocks, setTargetConfirmationBlocks] = useState(3);\n\n  /**\n   * Opens a channel to the specific address with current selected options.\n   * @param {*} address\n   */\n  const openChannel = (address) => {\n    const amtMsat = cryptoUtils.currentCryptoAmtToMsat(props, amount);\n    const pushAmtMsat = cryptoUtils.currentCryptoAmtToMsat(props, pushAmount);\n    channelClient().openChannel(\n      {\n        address: address,\n        amtMsat: amtMsat,\n        pushAmtMsat: pushAmtMsat,\n        minInputConfs: minimumInputConfirmations,\n        targetConfirmationBlocks: targetConfirmationBlocks,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n          NotificationManager.error(err.message);\n        }\n        if (res) {\n          console.log(res);\n          setLightningAddress(\"\");\n          setAmount(0);\n          setPushAmount(0);\n          setMinimumInputConfirmations(1);\n          setTargetConfirmationBlocks(3);\n          props.setVisible(false);\n          NotificationManager.success(\"Channel pending to open\");\n        }\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Modal\n        title=\"Open Channel\"\n        visible={props.visible}\n        okText=\"Open\"\n        onCancel={() => {\n          props.setVisible(false);\n        }}\n        onOk={async () => {\n          console.log(mode);\n          console.log(lightningAddress);\n          console.log(amount);\n          console.log(pushAmount);\n          console.log(minimumInputConfirmations);\n          console.log(targetConfirmationBlocks);\n          const split = splitURI(lightningAddress);\n          const address = split.address;\n          const hostport = split.hostport;\n          await nodeInfoClient().connectNode(\n            {\n              address: address,\n              hostport: hostport,\n            },\n            (err, res) => {\n              if (err) {\n                console.log(err);\n                NotificationManager.error(err.message);\n              }\n              if (res) {\n                console.log(res);\n                NotificationManager.success(\"Connected to Peer\");\n                openChannel(address);\n              }\n            }\n          );\n        }}\n      >\n        <Tabs\n          defaultActiveKey=\"1\"\n          onChange={(e) => {\n            switch (e) {\n            case \"1\":\n              setMode(\"basic\");\n              break;\n            case \"2\":\n              setMode(\"advanced\");\n              break;\n            }\n          }}\n        >\n          <Tabs.TabPane key=\"1\" tab=\"Basic\">\n            <Form layout=\"vertical\">\n              <Form.Item>\n                <div className=\"open-channel-item\">\n                  <Divider\n                    orientation=\"left\"\n                    className=\"open-channel-item-text\"\n                  >\n                    Node URI\n                  </Divider>\n                  <Input\n                    value={lightningAddress}\n                    onChange={(e) => {\n                      setLightningAddress(e.target.value);\n                    }}\n                    className=\"open-channel-item-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item>\n                <div className=\"open-channel-item\">\n                  <Divider\n                    orientation=\"left\"\n                    className=\"open-channel-item-text\"\n                  >\n                    Amount ({props.selectedCryptoUnit})\n                  </Divider>\n                  <Input\n                    value={amount.toString()}\n                    onChange={(e) => {\n                      setAmount(parseFloat(e.target.value));\n                    }}\n                    className=\"open-channel-item-input\"\n                  />\n                </div>\n              </Form.Item>\n            </Form>\n          </Tabs.TabPane>\n          <Tabs.TabPane key=\"2\" tab=\"Advanced\">\n            <Form layout=\"vertical\">\n              <Form.Item>\n                <div className=\"open-channel-item\">\n                  <Divider\n                    orientation=\"left\"\n                    className=\"open-channel-item-text\"\n                  >\n                    Node URI\n                  </Divider>\n                  <Input\n                    value={lightningAddress}\n                    onChange={(e) => {\n                      setLightningAddress(e.target.value);\n                    }}\n                    className=\"open-channel-item-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item>\n                <div className=\"open-channel-item\">\n                  <Divider\n                    orientation=\"left\"\n                    className=\"open-channel-item-text\"\n                  >\n                    Amount ({props.selectedCryptoUnit})\n                  </Divider>\n                  <Input\n                    value={amount.toString()}\n                    onChange={(e) => {\n                      setAmount(parseFloat(e.target.value));\n                    }}\n                    className=\"open-channel-item-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item>\n                <div className=\"open-channel-item\">\n                  <Divider\n                    orientation=\"left\"\n                    className=\"open-channel-item-text\"\n                  >\n                    Push Amount\n                  </Divider>\n                  <Input\n                    value={pushAmount.toString()}\n                    onChange={(e) => {\n                      setPushAmount(parseFloat(e.target.value));\n                    }}\n                    className=\"open-channel-item-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item>\n                <div className=\"open-channel-item\">\n                  <Divider\n                    orientation=\"left\"\n                    className=\"open-channel-item-text\"\n                  >\n                    Minimum Input Confirmations\n                  </Divider>\n                  <Input\n                    value={minimumInputConfirmations.toString()}\n                    onChange={(e) => {\n                      setMinimumInputConfirmations(parseFloat(e.target.value));\n                    }}\n                    className=\"open-channel-item-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item>\n                <div className=\"open-channel-item\">\n                  <Divider\n                    orientation=\"left\"\n                    className=\"open-channel-item-text\"\n                  >\n                    Target Confirmation Blocks\n                  </Divider>\n                  <Input\n                    value={targetConfirmationBlocks.toString()}\n                    onChange={(e) => {\n                      setTargetConfirmationBlocks(parseFloat(e.target.value));\n                    }}\n                    className=\"open-channel-item-input\"\n                  />\n                </div>\n              </Form.Item>\n            </Form>\n          </Tabs.TabPane>\n        </Tabs>\n      </Modal>\n    </div>\n  );\n};\n\nexport default OpenChannel;\n","import React, { useState } from \"react\";\n\nimport { Form, Divider, Modal, Input } from \"antd\";\n\nimport { splitURI } from \"../../utils/users-utils\";\nimport nodeInfoClient from \"../../services/nodeInfoServices\";\n\nimport { NotificationManager } from \"react-notifications\";\n\nimport \"./chat-history.css\";\nimport \"./open-channel.css\";\n\n/**\n * This component represents the modal responsible for connecting to other peers on the network.\n * @param {*} props The global variables\n * @returns\n */\nconst ConnectPeer = (props) => {\n  const [lightningAddress, setLightningAddress] = useState(\"\");\n  return (\n    <div>\n      <Modal\n        title=\"Connect to Peer\"\n        visible={props.visible}\n        okText=\"Connect\"\n        onCancel={() => {\n          props.setVisible(false);\n        }}\n        onOk={() => {\n          console.log(lightningAddress);\n          const params = splitURI(lightningAddress);\n          if (params.error === \"\") {\n            nodeInfoClient().connectNode(\n              {\n                address: params[\"address\"],\n                hostport: params[\"hostport\"],\n              },\n              (err, res) => {\n                if (err) {\n                  console.log(err);\n                  NotificationManager.error(\"Failed to connect to peer\");\n                }\n                if (res) {\n                  console.log(res);\n                  NotificationManager.success(\"Connected to peer\");\n                  props.setVisible(false);\n                  setLightningAddress(\"\");\n                }\n              }\n            );\n          } else {\n            NotificationManager.error(\"Invalid URI format\");\n          }\n        }}\n      >\n        <Form layout=\"vertical\">\n          <Form.Item>\n            <div className=\"open-channel-item\">\n              <Divider orientation=\"left\" className=\"open-channel-item-text\">\n                Node URI\n              </Divider>\n              <Input\n                value={lightningAddress}\n                onChange={(e) => {\n                  setLightningAddress(e.target.value);\n                }}\n                className=\"open-channel-item-input\"\n              />\n            </div>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ConnectPeer;\n","import React, { useEffect, useState } from \"react\";\nimport { Form, Divider, Collapse, Button } from \"antd\";\n\nimport OpenChannel from \"./open-channel\";\nimport ConnectPeer from \"./connect-peer\";\nimport nodeInfoClient from \"../../services/nodeInfoServices\";\n\nimport \"./user-funds.css\";\nimport theme from \"../../style/theme\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\n/**\n * This component represents the user funds page. It contains information about on-chain and off-chain balances.\n */\nconst UserFunds = (props) => {\n  // Wallet related variables\n  const [walletConfirmedBalance, setWalletConfirmedBalance] = useState(0);\n  const [walletUnconfirmedBalance, setWalletUnconfirmedBalance] = useState(0);\n  const [channelTotalBalance, setChannelTotalBalance] = useState(0);\n  const [pendingChannelBalance, setPendingChannelBalance] = useState(0);\n  const [channelRemoteBalance, setChannelRemoteBalance] = useState(0);\n\n  const [connectPeerModalVisible, setConnectPeerModalVisible] = useState(false);\n  const [openChannelModalVisible, setOpenChannelModalVisible] = useState(false);\n\n  /**\n   * This function is called once when the component loads.\n   * It fetches the self balance information from the corresponding endpoint.\n   */\n  useEffect(() => {\n    nodeInfoClient().getSelfBalance({}, (err, res) => {\n      if (err) {\n        console.log(err);\n        NotificationManager.error(err.message);\n      }\n      if (res) {\n        if (res.walletConfirmedSat) {\n          setWalletConfirmedBalance(Number(`${res.walletConfirmedSat}`));\n        }\n        if (res.walletUnconfirmedSat) {\n          setWalletUnconfirmedBalance(Number(`${res.walletUnconfirmedSat}`));\n        }\n        if (res.channelLocalMsat) {\n          setChannelTotalBalance(\n            Number(`${Math.floor(res.channelLocalMsat / 1000)}`)\n          );\n        }\n        if (res.pendingOpenLocalMsat) {\n          setPendingChannelBalance(\n            Number(`${Math.floor(res.pendingOpenLocalMsat / 1000)}`)\n          );\n        }\n        if (res.channelRemoteMsat) {\n          setChannelRemoteBalance(\n            Number(`${Math.floor(res.channelRemoteMsat / 1000)}`)\n          );\n        }\n      }\n    });\n  }, []);\n\n  /**\n   * The user funds page JSX.\n   */\n  return (\n    <div className=\"user-funds\">\n      <div\n        className=\"user-funds-header\"\n        style={{\n          backgroundColor: theme.menuDarkLite,\n        }}\n      >\n        <DoubleRightOutlined\n          className=\"chatHistoryExpandForMobile\"\n          style={{\n            display: props.sideSquashed\n              ? props.sideActivated\n                ? \"none\"\n                : \"inherit\"\n              : \"none\",\n          }}\n          onClick={() => {\n            props.setSideActivated(true);\n          }}\n        />\n        <div className=\"user-funds-header-text\">Funds</div>\n      </div>\n      <div className=\"users-funds-main\">\n        <Collapse>\n          <Collapse.Panel header=\"Channels\">\n            <Button\n              onClick={() => {\n                setOpenChannelModalVisible(true);\n              }}\n            >\n              Open Channel\n            </Button>\n          </Collapse.Panel>\n          <Collapse.Panel header=\"Peers\">\n            <Button\n              onClick={() => {\n                setConnectPeerModalVisible(true);\n              }}\n            >\n              Connect to Peer\n            </Button>\n          </Collapse.Panel>\n        </Collapse>\n        <Form className=\"user-funds-form\" layout=\"vertical\">\n          <b>\n            <Divider orientation=\"left\">\n              <h2>On-chain Funds</h2>\n            </Divider>\n          </b>\n          <Form.Item label=\"Wallet Confirmed Balance\">\n            <b>{walletConfirmedBalance} sat</b>\n          </Form.Item>\n          <Form.Item label=\"Wallet Unconfirmed Balance\">\n            <b>{walletUnconfirmedBalance} sat</b>\n          </Form.Item>\n          <b>\n            <Divider orientation=\"left\">\n              <h2>Off-chain Funds</h2>\n            </Divider>\n          </b>\n          <Form.Item label=\"Total Channel balance\">\n            <b>{channelTotalBalance} sat</b>\n          </Form.Item>\n          <Form.Item label=\"Pending Channel Balance\">\n            <b>{pendingChannelBalance} sat</b>\n          </Form.Item>\n        </Form>\n        <OpenChannel\n          {...props}\n          visible={openChannelModalVisible}\n          setVisible={setOpenChannelModalVisible}\n        />\n        <ConnectPeer\n          {...props}\n          visible={connectPeerModalVisible}\n          setVisible={setConnectPeerModalVisible}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default UserFunds;\n","import apiUrl from \"../config/api-url\";\nimport authCreds from \"../config/auth-creds\";\n\nconst {\n  GetContactsRequest,\n  GetContactsResponse,\n  AddContactRequest,\n  AddContactResponse,\n  RemoveContactByIDRequest,\n  RemoveContactResponse,\n  RemoveContactByAddressRequest,\n  ContactInfo,\n  NodeInfo,\n} = require(\"../rpc/rpc_pb\");\nconst { ContactServiceClient } = require(\"../rpc/rpc_grpc_web_pb.js\");\n\nconst rpcClient = new ContactServiceClient(apiUrl(), {});\n\nconst client = new Object();\n\nclient.getContacts = (req, callback) => {\n  const request = new GetContactsRequest();\n  return rpcClient.getContacts(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? GetContactsResponse.toObject(res, res) : undefined)\n  );\n};\n\nclient.addContact = (req, callback) => {\n  const request = new AddContactRequest();\n  const contact = new ContactInfo();\n  const node = new NodeInfo();\n  node.setAlias(req.contact.node.alias);\n  node.setAddress(req.contact.node.address);\n  contact.setNode(node);\n  contact.setId(req.contact.id);\n  contact.setDisplayName(req.contact.displayName);\n  request.setContact(contact);\n  return rpcClient.addContact(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? AddContactResponse.toObject(res, res) : undefined)\n  );\n};\n\nclient.removeContactByID = (req, callback) => {\n  const request = new RemoveContactByIDRequest();\n  request.setId(req.id);\n  return rpcClient.removeContactByID(request, { ...authCreds() }, (err, res) =>\n    callback(err, res ? RemoveContactResponse.toObject(res, res) : undefined)\n  );\n};\n\nclient.removeContactByAddress = (req, callback) => {\n  const request = new RemoveContactByAddressRequest();\n  request.setAddress(req.address);\n  return rpcClient.removeContactByAddress(\n    request,\n    { ...authCreds() },\n    (err, res) =>\n      callback(err, res ? RemoveContactResponse.toObject(res, res) : undefined)\n  );\n};\n\nconst contactClient = () => {\n  return client;\n};\n\nexport default contactClient;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Input, List, Modal } from \"antd\";\nimport {\n  SearchOutlined,\n  UserAddOutlined,\n  UserDeleteOutlined,\n  MessageOutlined,\n  LoadingOutlined,\n} from \"@ant-design/icons\";\nimport { NotificationManager } from \"react-notifications\";\n\nimport contactClient from \"../../services/contactServices\";\nimport nodeInfoClient from \"../../services/nodeInfoServices\";\nimport discussionClient from \"../../services/discussionServices\";\n\nimport \"./search-users.css\";\nimport theme from \"../../style/theme\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\n/**\n * This component represents the user searching page.\n * @param {*} props The global variables.\n */\nconst SearchUsers = (props) => {\n  // User searching related variables\n  const [aliasToSearch, setaliasToSearch] = useState(\"\");\n  const [addressToSearch, setAddressToSearch] = useState(\"\");\n  const [searchedAlias, setSearchedAlias] = useState();\n  const [searchedAddress, setSearchedAddress] = useState();\n  const [userSelected, setUserSelected] = useState();\n  const [friendlyName, setFriendlyName] = useState(\"\");\n  const [contactAddModalActive, setContactAddModalActive] = useState(false);\n  const [contactRemoveModalActive, setContactRemoveModalActive] =\n    useState(false);\n  const [searchAliasLoading, setSearchAliasLoading] = useState(false);\n  const [searchAliasEmptyText, setSearchAliasEmptyText] = useState('Search Users by Alias');\n  const [searchAddressLoading, setSearchAddressLoading] = useState(false);\n  const [searchAddressEmptyText, setSearchAddressEmptyText] = useState('Search Users by Alias');\n\n  const [enteredAlias, setEnteredAlias] = useState(\"\");\n  const [searchAliasTouched, setSearchAliasTouched] = useState(false);\n  const [aliasFormValid, setAliasFormValid] = useState(false);\n\n  const [enteredAddress, setEnteredAddress] = useState(\"\");\n  const [searchAddressTouched, setSearchAddressTouched] = useState(false);\n  const [addressFormValid, setAddressFormValid] = useState(false);\n\n\n  const enteredAliasIsValid = () => {\n    return enteredAlias.length >= 4;\n  };\n  const aliasInputIsInvalid = () => {\n    return !enteredAliasIsValid() && searchAliasTouched;\n  };\n\n  const enteredAddressIsValid = () => {\n    return enteredAddress.length >= 4;\n  };\n  const addressInputIsInvalid = () => {\n    return !enteredAddressIsValid() && searchAddressTouched;\n  };\n\n  useEffect(() => {\n    if (enteredAliasIsValid() && aliasFormValid == false) {\n      setAliasFormValid(true);\n    } else if (!enteredAliasIsValid() && aliasFormValid == true) {\n      setAliasFormValid(false);\n    }\n  }, [enteredAlias]);\n\n  useEffect(() => {\n    if (enteredAddressIsValid() && addressFormValid == false) {\n      setAddressFormValid(true);\n    } else if (!enteredAddressIsValid() && addressFormValid == true) {\n      setAddressFormValid(false);\n    }\n  }, [enteredAddress]);\n  /**\n   * Creates a new contact based on selected user and (optional) entered friendly name.\n   */\n  const createContact = () => {\n    let req = {\n      contact: {\n        node: {\n          alias: userSelected ? userSelected.alias : \"unknown\",\n          address: userSelected ? userSelected.address : \"unknown\",\n        },\n        id: 20,\n        displayName: friendlyName !== undefined ? friendlyName : \"\",\n      },\n    };\n    const parsedContact = {\n      user: req.contact.node,\n      id: req.contact.id,\n      displayName: req.contact.displayName,\n    };\n    contactClient().addContact(req, (err, res) => {\n      if (err) {\n        console.log(err);\n        NotificationManager.warning(\"Failed to add contact\");\n      }\n      if (res) {\n        console.log(res);\n        if (props.contacts) {\n          props.setContacts(props.contacts.concat([parsedContact]));\n        } else {\n          props.setContacts([parsedContact]);\n        }\n        NotificationManager.info(\"Contact Added\");\n      }\n      let disc = props.discussions.find((elem) => {\n        return elem.participantsList[0] === userSelected.address;\n      });\n      if (disc === undefined) {\n        console.log(\"Not in discussion, creating...\");\n        discussionClient().addDiscussion(\n          {\n            discussion: {\n              participants: [userSelected.address],\n            },\n          },\n          (err, res) => {\n            if (err) {\n              console.log(err);\n            }\n            if (res) {\n              console.log(res);\n              props.setDiscussions((oldDiscussions) => {\n                return oldDiscussions.concat(res.discussion);\n              });\n            }\n          }\n        );\n      }\n      setContactAddModalActive(false);\n    });\n  };\n\n  /**\n   * Deletes the selected contact.\n   */\n  const deleteContact = () => {\n    contactClient().removeContactByAddress(\n      {\n        address: userSelected.address,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n          NotificationManager.warning(\"Failed to remove contact\");\n        }\n        if (res) {\n          NotificationManager.success(\"Removed contact\");\n        }\n      }\n    );\n    props.setContacts(\n      props.contacts.filter((item) => {\n        return item.user.address !== userSelected.address;\n      })\n    );\n    setContactRemoveModalActive(false);\n  };\n\n  /**\n   * Searches users based on entered alias.\n   */\n  const searchUsersByAlias = () => {\n    setSearchAliasLoading(true);\n    setSearchAliasEmptyText('Loading');\n    nodeInfoClient().searchNodeByAlias(\n      {\n        alias: aliasToSearch,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n          NotificationManager.warning(err.message);\n        }\n        if (res) {\n          setSearchedAlias(res.nodesList);\n        }\n        setSearchAliasEmptyText('No results');\n        setSearchAliasLoading(false);\n      }\n    );\n  };\n\n  /**\n   * Searches users based on entered addresses.\n   */\n  const searchUsersByAddress = () => {\n    setSearchAddressLoading(true);\n    setSearchAddressEmptyText('Loading');\n    nodeInfoClient().searchNodeByAddress(\n      {\n        address: addressToSearch,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n          NotificationManager.warning(err.message);\n        }\n        if (res) {\n          console.log(res);\n          setSearchedAddress(res.nodesList);\n        }\n        setSearchAddressEmptyText('No results');\n        setSearchAddressLoading(false);\n      }\n    );\n  };\n\n  /**\n   * Validating if the user entered more than 4 characters and touched the inputs\n   */\n\n  const aliasInputChangeHandler = (event) => {\n    setEnteredAlias(event.target.value);\n    setaliasToSearch(event.target.value);\n  };\n\n  const aliasInputBlurHandler = (event) => {\n    setSearchAliasTouched(true);\n  };\n\n  const aliasFormSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setSearchAliasTouched(true);\n\n    if (enteredAlias.length < 4) {\n      return;\n    }\n\n    setEnteredAlias(\"\");\n    setSearchAliasTouched(false);\n  };\n\n  const addressInputChangeHandler = (event) => {\n    setEnteredAddress(event.target.value);\n    setAddressToSearch(event.target.value);\n  };\n\n  const addressInputBlurHandler = (event) => {\n    setSearchAddressTouched(true);\n  };\n\n  const addressFormSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setSearchAddressTouched(true);\n\n    if (enteredAddress.length < 4) {\n      return;\n    }\n\n    setEnteredAddress(\"\");\n    setSearchAddressTouched(false);\n  };\n\n  /**\n   * The search users page JSX.\n   */\n  return (\n    <>\n      <div className=\"search-users\">\n        <div\n          className=\"search-users-header\"\n          style={{\n            backgroundColor: theme.menuDarkLite,\n          }}\n        >\n          <div className=\"chatHistoryExpandForMobile\">\n            <DoubleRightOutlined\n              style={{\n                display: props.sideSquashed\n                  ? props.sideActivated\n                    ? \"none\"\n                    : \"inherit\"\n                  : \"none\",\n              }}\n              onClick={() => {\n                props.setSideActivated(true);\n              }}\n            />\n          </div>\n          <div className=\"search-users-header-text\">\n            Search Users on the Network\n          </div>\n        </div>\n        <div className=\"search-users-contents\">\n          <h3>Search Users {`(${props.users?.length} found)`}</h3>\n          <form onSubmit={aliasFormSubmissionHandler}>\n            <div className=\"search-wrapper\">\n              <div className=\"users-search\">\n                <Input\n                  title=\"Search by alias\"\n                  className=\"search-users-input\"\n                  placeholder=\"Enter Alias\"\n                  onChange={aliasInputChangeHandler}\n                  onBlur={aliasInputBlurHandler}\n                  value={enteredAlias}\n                  onKeyDown={\n                    aliasFormValid ? (\n                      (e) => {\n                        return e.key === \"Enter\"\n                          ? e.shiftKey\n                            ? undefined\n                            : searchUsersByAlias()\n                          : undefined;\n                      }\n                    ) : () => (\n                      <p className=\"error-validation\">Minimum 4 characters</p>\n                    )\n                  }\n                />\n                <Button\n                  className=\"search-users-button\"\n                  disabled={!aliasFormValid}\n                  onClick={() => {\n                    searchUsersByAlias();\n                  }}\n                >\n                  {searchAliasLoading ? (\n                    <LoadingOutlined spin />\n                  ) : (\n                    <SearchOutlined />\n                  )}\n                </Button>\n              </div>\n              {aliasInputIsInvalid() && (\n                <p className=\"error-validation\">Minimum 4 characters</p>\n              )}\n              <List\n                locale={{\n                  emptyText: searchAliasEmptyText,\n                }}\n                className=\"search-users-description\"\n                placeholder=\"\"\n                dataSource={searchedAlias || undefined}\n                itemLayout=\"horizontal\"\n                renderItem={(item) => {\n                  let inContacts;\n                  if (props.contacts) {\n                    inContacts = props.contacts.find((elem) => {\n                      return elem.user.address === item.address;\n                    });\n                  }\n                  let inDiscussion =\n                    props.discussions.length !== 0\n                      ? props.discussions.find((elem) => {\n                        return elem.participantsList.includes(item.address);\n                      })\n                      : false;\n                  return (\n                    <List.Item className=\"search-users-container\">\n                      <div className=\"search-users-containerDv\">\n                        {item.alias}\n                      </div>\n                      Address:\n                      <div className=\"search-users-containerAddress\">\n                        {` ${item.address}`}\n                      </div>\n                      <br />\n                      <div className=\"search-users-container-icons\">\n                        <Button\n                          onClick={() => {\n                            if (inDiscussion) {\n                              console.log(\"already in discussion\");\n                              props.setSelectedDiscussion(inDiscussion);\n                              props.setSelectedPage(\"chatHistory\");\n                            } else {\n                              console.log(\"creating discussion:\", item.address);\n                              discussionClient().addDiscussion(\n                                {\n                                  discussion: {\n                                    participants: [item.address],\n                                    options: {\n                                      anonymous: false,\n                                    },\n                                  },\n                                },\n                                (err, res) => {\n                                  if (err) {\n                                    console.log(err);\n                                    NotificationManager.warning(\n                                      \"Failed to add discussion\"\n                                    );\n                                  }\n                                  if (res) {\n                                    console.log(res);\n                                    props.setDiscussions((oldDiscussions) => {\n                                      return oldDiscussions.concat(\n                                        res.discussion\n                                      );\n                                    });\n                                    props.setSelectedDiscussion(res.discussion);\n                                    props.setSelectedPage(\"chatHistory\");\n                                  }\n                                }\n                              );\n                            }\n                          }}\n                        >\n                          <MessageOutlined />\n                        </Button>\n                        <Button\n                          className=\"search-users-button\"\n                          onClick={() => {\n                            setUserSelected(item);\n                            if (inContacts) {\n                              setContactRemoveModalActive(true);\n                            } else {\n                              setContactAddModalActive(true);\n                            }\n                          }}\n                        >\n                          {inContacts ? (\n                            <UserDeleteOutlined className=\"search-users-userDeleteOutlined\" />\n                          ) : (\n                            <UserAddOutlined className=\"search-users-userAddOutlined\" />\n                          )}\n                        </Button>\n                      </div>\n                    </List.Item>\n                  );\n                }}\n              />\n            </div>\n          </form>\n          <form onSubmit={addressFormSubmissionHandler}>\n            <div className=\"search-wrapper\">\n              <div className=\"users-search\">\n                <Input\n                  placeholder=\"Enter Address\"\n                  title=\"Search by address\"\n                  onChange={addressInputChangeHandler}\n                  onBlur={addressInputBlurHandler}\n                  onKeyDown={\n                    addressFormValid ? (\n                      (e) => {\n                        return e.key === \"Enter\"\n                          ? e.shiftKey\n                            ? undefined\n                            : searchUsersByAddress()\n                          : undefined;\n                      }\n                    ) : () => (\n                      <p className=\"error-validation\">Minimum 4 characters</p>\n                    )\n                  }\n                  className=\"search-users-input\"\n                />\n                <Button\n                  className=\"search-users-button\"\n                  onClick={() => {\n                    searchUsersByAddress();\n                  }}\n                  disabled={!addressFormValid}\n                >\n                  {searchAddressLoading ? (\n                    <LoadingOutlined spin />\n                  ) : (\n                    <SearchOutlined />\n                  )}\n                </Button>\n              </div>\n              {addressInputIsInvalid() && (\n                <p className=\"error-validation\">Minimum 4 characters</p>\n              )}\n              <List\n                locale={{\n                  emptyText: searchAddressEmptyText,\n                }}\n                className=\"search-users-description\"\n                placeholder=\"\"\n                dataSource={searchedAddress || undefined}\n                itemLayout=\"horizontal\"\n                renderItem={(item) => {\n                  let inContacts;\n                  if (props.contacts) {\n                    inContacts = props.contacts.find((elem) => {\n                      return elem.user.address === item.address;\n                    });\n                  }\n                  let inDiscussion =\n                    props.discussions.length !== 0\n                      ? props.discussions.find((elem) => {\n                        return elem.participantsList.includes(item.address);\n                      })\n                      : false;\n                  return (\n                    <List.Item className=\"userSearchContainer\">\n                      <div className=\"search-users-containerDv\">\n                        {item.alias}\n                      </div>\n                      Address:\n                      <div className=\"search-users-Address\">{` ${item.address}`}</div>\n                      <br />\n                      <div className=\"search-users-button\">\n                        <Button\n                          onClick={() => {\n                            if (inDiscussion) {\n                              console.log(\"already in discussion\");\n                              props.setSelectedDiscussion(inDiscussion);\n                              props.setSelectedPage(\"chatHistory\");\n                            } else {\n                              console.log(\"creating discussion:\", item.address);\n                              discussionClient().addDiscussion(\n                                {\n                                  discussion: {\n                                    participants: [item.address],\n                                    options: {\n                                      anonymous: false,\n                                    },\n                                  },\n                                },\n                                (err, res) => {\n                                  if (err) {\n                                    console.log(err);\n                                    NotificationManager.warning(\n                                      \"Failed to add discussion\"\n                                    );\n                                  }\n                                  if (res) {\n                                    console.log(res);\n                                    props.setDiscussions((oldDiscussions) => {\n                                      return oldDiscussions.concat(\n                                        res.discussion\n                                      );\n                                    });\n                                    props.setSelectedDiscussion(res.discussion);\n                                    props.setSelectedPage(\"chatHistory\");\n                                  }\n                                }\n                              );\n                            }\n                          }}\n                        >\n                          <MessageOutlined />\n                        </Button>\n                        <Button\n                          className=\"search-users-button\"\n                          onClick={() => {\n                            setUserSelected(item);\n                            if (inContacts) {\n                              setContactRemoveModalActive(true);\n                            } else {\n                              setContactAddModalActive(true);\n                            }\n                          }}\n                        >\n                          {inContacts ? (\n                            <UserDeleteOutlined className=\"search-users-userDeleteOutlined\" />\n                          ) : (\n                            <UserAddOutlined className=\"search-users-userAddOutlined\" />\n                          )}\n                        </Button>\n                      </div>\n                    </List.Item>\n                  );\n                }}\n              />\n              <Modal\n                visible={!!contactAddModalActive}\n                title=\"Enter Friendly name\"\n                onOk={() => {\n                  createContact();\n                }}\n                onCancel={() => {\n                  setContactAddModalActive(false);\n                }}\n                okButtonProps={{ type: \"default\" }}\n              >\n                You are adding\n                {` ${userSelected ? userSelected.alias : \"Unknown\"} `}\n                to contacts.\n                <Input\n                  className=\"search-users-inputModal\"\n                  onChange={(e) => {\n                    setFriendlyName(e.target.value);\n                  }}\n                  placeholder=\"Friendly Name\"\n                />\n              </Modal>\n              <Modal\n                visible={!!contactRemoveModalActive}\n                title=\"Deleting Contact\"\n                onOk={() => {\n                  deleteContact();\n                }}\n                onCancel={() => {\n                  setContactRemoveModalActive(false);\n                }}\n                okButtonProps={{ type: \"default\" }}\n              >\n                You are removing\n                {` ${userSelected ? userSelected.alias : \"Unknown\"} `}\n                from contacts.\n              </Modal>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SearchUsers;\n","import React, { useState } from \"react\";\nimport { Button, List, Modal } from \"antd\";\nimport { UserDeleteOutlined, MessageOutlined } from \"@ant-design/icons\";\nimport { NotificationManager } from \"react-notifications\";\n\nimport contactClient from \"../../services/contactServices\";\nimport discussionClient from \"../../services/discussionServices\";\nimport \"./contacts.css\";\nimport theme from \"../../style/theme\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\n/**\n * This component represents the contacts page.\n * This page manages the user's contacts.\n * @param {*} props The global variables.\n */\nconst Contacts = (props) => {\n  const [contactRemoveModalActive, setContactRemoveModalActive] =\n    useState(false);\n  const [userSelected, setUserSelected] = useState();\n\n  /**\n   * Deletes the currently selected user (userSelected) from contacts.\n   */\n  const deleteContact = () => {\n    contactClient().removeContactByAddress(\n      {\n        address: userSelected.address,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n          NotificationManager.warning(\"Failed to remove contact\");\n        }\n        if (res) {\n          NotificationManager.success(\"Removed contact\");\n        }\n      }\n    );\n    props.setContacts(\n      props.contacts.filter((item) => {\n        return item.user.address !== userSelected.address;\n      })\n    );\n    setContactRemoveModalActive(false);\n  };\n\n  /**\n   * The contacts page JSX.\n   */\n  return (\n    <>\n      <div className=\"contacts\">\n        <div\n          className=\"contacts-header\"\n          style={{\n            backgroundColor: theme.menuDarkLite,\n          }}\n          onClick={() => {\n            if (props.sideActivated === true) {\n              props.setSideActivated(false);\n            }\n          }}\n        >\n          <DoubleRightOutlined\n            className=\"chatHistoryExpandForMobile\"\n            style={{\n              display: props.sideSquashed\n                ? props.sideActivated\n                  ? \"none\"\n                  : \"inherit\"\n                : \"none\",\n            }}\n            onClick={() => {\n              props.setSideActivated(true);\n            }}\n          />\n          <div className=\"contacts-header-text\">Contacts</div>\n        </div>\n        <div\n          className=\"contacts-body\"\n          onClick={() => {\n            props.setSideActivated(false);\n          }}\n        >\n          <List\n            locale={{\n              emptyText: \"No Contacts\",\n            }}\n            className=\"contacts-list\"\n            placeholder=\"\"\n            dataSource={props.contacts || undefined}\n            itemLayout=\"horizontal\"\n            renderItem={(item) => {\n              let inDiscussion =\n                props.discussions.length !== 0\n                  ? props.discussions.find((elem) => {\n                    return (\n                      elem.participantsList.includes(item.user.address) &&\n                        elem.participantsList.length === 1\n                    );\n                  })\n                  : false;\n              return (\n                <List.Item className=\"userSearchContainer\">\n                  <div className=\"userSearchContainerAfter\">\n                    {`${item.displayName ? item.displayName : \"\"} (${\n                      item.user.alias\n                    })`}\n                  </div>\n                  Address:\n                  <div className=\"userSearchContainerAddress\">\n                    {` ${item.user.address}`}\n                  </div>\n                  <br />\n                  <Button\n                    className=\"userSearchContainerButton\"\n                    onClick={() => {\n                      setUserSelected(item.user);\n                      setContactRemoveModalActive(true);\n                    }}\n                  >\n                    {<UserDeleteOutlined className=\"userDeleteOutlined\" />}\n                  </Button>\n                  <Button\n                    className=\"userDeleteOutlinedButton\"\n                    onClick={() => {\n                      if (inDiscussion) {\n                        console.log(\"already in discussion\");\n                        props.setSelectedDiscussion(inDiscussion);\n                        props.setSelectedPage(\"chatHistory\");\n                      } else {\n                        console.log(\"creating discussion:\", item.user.address);\n                        discussionClient().addDiscussion(\n                          {\n                            discussion: {\n                              participants: [item.user.address],\n                              options: {\n                                anonymous: false,\n                              },\n                            },\n                          },\n                          (err, res) => {\n                            if (err) {\n                              console.log(err);\n                              NotificationManager.warning(\n                                \"Failed to add discussion\"\n                              );\n                            }\n                            if (res) {\n                              console.log(res);\n                              props.setDiscussions((oldDiscussions) => {\n                                return oldDiscussions.concat(res.discussion);\n                              });\n                              props.setSelectedDiscussion(res.discussion);\n                              props.setSelectedPage(\"chatHistory\");\n                            }\n                          }\n                        );\n                      }\n                    }}\n                  >\n                    <MessageOutlined />\n                  </Button>\n                </List.Item>\n              );\n            }}\n          />\n          <Modal\n            visible={!!contactRemoveModalActive}\n            title=\"Deleting Contact\"\n            onOk={() => {\n              deleteContact();\n            }}\n            onCancel={() => {\n              setContactRemoveModalActive(false);\n            }}\n            okButtonProps={{ type: \"default\" }}\n          >\n            You are removing\n            {` ${userSelected ? userSelected.alias : \"Unknown\"} `}\n            from contacts.\n          </Modal>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Contacts;\n","export default __webpack_public_path__ + \"static/media/arc-logo.b26a22a5.png\";","export default __webpack_public_path__ + \"static/media/programize_logo.8a1b915d.png\";","import React from \"react\";\n\nimport c13nLogo from \"../../media/arc-logo.png\";\nimport programizeLogo from \"../../media/programize_logo.png\";\nimport \"./logo.css\";\nimport theme from \"../../style/theme\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\n/**\n * This component represents the static C13N logo page.\n * It is the default page when application starts up, or the default page in case of erroneous page selection.\n */\nconst Logo = (props) => {\n  return (\n    <>\n      <div className=\"welcomePage\">\n        <div\n          className=\"welcomePage-header\"\n          style={{\n            backgroundColor: theme.menuDarkLite,\n          }}\n        >\n          <DoubleRightOutlined\n            className=\"chatHistoryExpandForMobile\"\n            style={{\n              display: props.sideSquashed\n                ? props.sideActivated\n                  ? \"none\"\n                  : \"inherit\"\n                : \"none\",\n            }}\n            onClick={() => {\n              props.setSideActivated(true);\n            }}\n          />\n          <div className=\"welcomePage-header-text\">\n            Messages and payments combined!\n          </div>\n        </div>\n        <div className=\"welcomePage-logo\">\n          <img src={c13nLogo} className=\"interactiveLogoC13n\" />\n          <img src={programizeLogo} className=\"interactiveLogoProgramize\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Logo;\n","import nodeInfoClient from \"../services/nodeInfoServices\";\n/**\n * The FE application version.\n */\nconst version = \"0.0.2\";\n\n/**\n * Acquires the returned backend version.\n * @param {*} setBackendVersion The setter of the state variable representing the version (used to acquire the value asynchronously).\n */\nconst getBackendVersion = (setBackendVersion) => {\n  nodeInfoClient.getVersion({}, (err, res) => {\n    if (err) {\n      return setBackendVersion(\"invalid\");\n    }\n    if (res) {\n      if (res.version) {\n        return setBackendVersion(res.version);\n      } else {\n        return setBackendVersion(\"invalid\");\n      }\n    }\n  });\n};\n\nexport { version, getBackendVersion };\n","/**\n   * This function adds an account to the local storage.\n   * @param {*} account Object containing account information\n   */\nconst addToAccounts = (props, account) => {\n  let res = props.accounts.filter((elem) => {\n    return elem.url !== account.url;\n  });\n  props.setAccounts((oldAccounts) => {\n    res.push(account);\n    saveAccounts(res);\n    return res;\n  });\n};\n\n/**\n   * This function removes an account from the local storage.\n   * @param {*} account Object containing account information\n   */\nconst removeFromAccounts = (props, account) => {\n  let res = props.accounts.filter((elem) => {\n    return elem.url !== account.url;\n  });\n  props.setAccounts(res);\n  saveAccounts(res);\n};\n\n/**\n   * This function loads the accounts saves in local storage.\n   */\nconst loadAccounts = (props) => {\n  let res = window.localStorage.getItem('accounts');\n  if (res) {\n    props.setAccounts(JSON.parse(res));\n  }\n};\n\n/**\n   * This function saves the accounts array in local storage.\n   * @param {*} accountsArray The accounts array.\n   */\nconst saveAccounts = (accountsArray) => {\n  window.localStorage.setItem('accounts', JSON.stringify(accountsArray));\n};\n\nexport {\n  addToAccounts,\n  removeFromAccounts,\n  loadAccounts,\n  saveAccounts\n};","import { List, Modal, Button, Form, Input } from \"antd\";\nimport { DeleteOutlined, LoginOutlined } from \"@ant-design/icons\";\nimport React, { useState, useEffect } from \"react\";\nimport { NotificationManager } from \"react-notifications\";\n\nimport nodeInfoClient from \"../services/nodeInfoServices\";\nimport { version } from \"../config/version\";\n\nimport { addToAccounts, removeFromAccounts } from \"../utils/accounts-utils\";\n\nimport \"./accounts.css\";\nimport c13nLogo from \"../media/arc-logo.png\";\nimport generateIdenticon from \"../utils/identicon\";\n\nconst { Version } = require(\"../rpc/rpc_pb.js\");\n\n/**\n * This component represents the account selection screen.\n * @param {*} props The global variables.\n */\nconst Accounts = (props) => {\n  // Modal related variables\n  const [addAccountModalVisible, setAddAccountModalVisible] = useState(false);\n  const [deleteAccountModalVisible, setDeleteAccountModalVisible] =\n    useState(false);\n  const [credentialsModalVisible, setCredentialsModalVisible] = useState(false);\n  const [usernameToUse, setUsernameToUse] = useState(\"\");\n  const [passwordToUse, setPasswordToUse] = useState(\"\");\n  const [urlToAdd, setUrlToAdd] = useState(\"\");\n  const [selectedAccount, setSelectedAccount] = useState();\n\n  /**\n   * This function is called once when the component loads.\n   * It checks for previously selected account in order to connect automatically on the same account.\n   */\n  useEffect(() => {\n    if (props.loadAccount === 0) {\n      let url = window.localStorage.getItem(\"url\");\n      if (url !== \"\" && url !== \"undefined\" && url !== null) {\n        console.log(\"Selected:\", url);\n        props.setSelectedPage(\"connectionScreen\");\n        let deadline = new Date();\n        deadline.setSeconds(deadline.getSeconds() + 1);\n        nodeInfoClient().getVersion(\n          {},\n          { deadline: deadline.getTime() },\n          (err, res) => {\n            if (err) {\n              console.log(err);\n              if (Date.now() < deadline) {\n                NotificationManager.error(\n                  \"Could not reach c13n backend\"\n                );\n              } else {\n                NotificationManager.error(err.message);\n              }\n              window.localStorage.setItem(\"url\", \"\");\n              window.localStorage.setItem(\"httpUsername\", \"\");\n              window.localStorage.setItem(\"httpPassword\", \"\");\n              props.setSelectedPage(\"accounts\");\n            }\n            if (res) {\n              if (res.version) {\n                props.setSelectedPage(\"logo\");\n                props.setBackendVersion(res.version);\n                console.log(res);\n                let backendMajor = res.version.split(\".\")[0];\n                let guiMajor = version.split(\".\")[0];\n                if (backendMajor !== guiMajor) {\n                  props.setSelectedPage(\"versionError\");\n                } else {\n                  props.setLoadAccount(1);\n                }\n              } else {\n                console.log(res);\n                NotificationManager.error(\"Unknown backend error!\");\n                window.localStorage.setItem(\"url\", \"\");\n                window.localStorage.setItem(\"httpUsername\", \"\");\n                window.localStorage.setItem(\"httpPassword\", \"\");\n                props.setSelectedPage(\"accounts\");\n              }\n            }\n          }\n        );\n      }\n    }\n  }, []);\n\n  /**\n   * Performs a login with current credentials.\n   */\n  const credentialsModalLogin = (account) => {\n    if (usernameToUse && passwordToUse) {\n      console.log(\"Logging:\", account);\n      window.localStorage.setItem(\"httpUsername\", usernameToUse);\n      window.localStorage.setItem(\"httpPassword\", passwordToUse);\n      window.localStorage.setItem(\"url\", account.url);\n      window.location.reload(true);\n      setCredentialsModalVisible(false);\n    }\n  };\n\n  /**\n   * The accounts page JSX.\n   */\n  return (\n    <div className=\"login-page\">\n      <div className=\"login-page-logo-container\">\n        <img src={c13nLogo} className=\"login-page-logo\" />\n      </div>\n      <h3 className=\"login-page-select\">Select a c13n Node</h3>\n      <List\n        className=\"login-page-accountsList\"\n        locale={{\n          emptyText: \"No Accounts\",\n        }}\n        dataSource={props.accounts.sort(function (a, b) {\n          return b.lastActive - a.lastActive;\n        })}\n        renderItem={(item) => {\n          return (\n            <List.Item className=\"accountsListItem\">\n              <Form className=\"accountsForm\">\n                <Form.Item\n                  className=\"accountsFormItem\"\n                  onClick={() => {\n                    if (item.url !== \"\") {\n                      setSelectedAccount(item);\n                      setCredentialsModalVisible(true);\n                    }\n                  }}\n                >\n                  {generateIdenticon(item.address, 30)}\n                  {item.url !== \"\" ? (\n                    item.url\n                  ) : (\n                    <span className=\"accountsFormItemError\">\n                      No URL provided\n                    </span>\n                  )}\n                </Form.Item>\n              </Form>\n              <div className=\"accountsButtons\">\n                <Button\n                  className=\"accountsButton\"\n                  onClick={() => {\n                    setSelectedAccount(item);\n                    setDeleteAccountModalVisible(true);\n                  }}\n                >\n                  <DeleteOutlined />\n                </Button>\n              </div>\n            </List.Item>\n          );\n        }}\n      />\n      <Button\n        className=\"login-page-addButton\"\n        onClick={() => {\n          setAddAccountModalVisible(true);\n        }}\n      >\n        <div className=\"login-page-addButton-Text\">+ Add New Node</div>\n      </Button>\n      <Modal\n        visible={!!addAccountModalVisible}\n        onOk={() => {\n          if (urlToAdd !== \"\") {\n            addToAccounts(props, { url: urlToAdd, address: \"\", lastActive: 0 });\n            setSelectedAccount({ url: urlToAdd, address: \"\", lastActive: 0 });\n            setUrlToAdd(\"\");\n            setAddAccountModalVisible(false);\n            credentialsModalLogin({\n              url: urlToAdd,\n              address: \"\",\n              lastActive: 0,\n            });\n          }\n        }}\n        onCancel={() => {\n          setAddAccountModalVisible(false);\n        }}\n        okButtonProps={{ type: \"default\" }}\n      >\n        <div className=\"login-page-modal-logo-container\">\n          <img src={c13nLogo} className=\"login-page-modal-logo\" />\n        </div>\n        <Input\n          placeholder=\"Node Address\"\n          value={urlToAdd}\n          className=\"accountsInput\"\n          onChange={(e) => {\n            setUrlToAdd(e.target.value);\n          }}\n        />\n        <Input\n          placeholder=\"Username\"\n          className=\"accountsInputCred\"\n          value={usernameToUse}\n          onChange={(e) => {\n            setUsernameToUse(e.target.value);\n          }}\n        />\n        <Input\n          placeholder=\"Password\"\n          className=\"accountsInputCred\"\n          type=\"password\"\n          value={passwordToUse}\n          onChange={(e) => {\n            setPasswordToUse(e.target.value);\n          }}\n          onKeyDown={(e) => {\n            return e.key === \"Enter\"\n              ? e.shiftKey\n                ? undefined\n                : credentialsModalLogin({\n                  url: urlToAdd,\n                  address: \"\",\n                  lastActive: 0,\n                })\n              : undefined;\n          }}\n        />\n      </Modal>\n      <Modal\n        visible={!!deleteAccountModalVisible}\n        onOk={() => {\n          removeFromAccounts(props, selectedAccount);\n          setDeleteAccountModalVisible(false);\n        }}\n        onCancel={() => {\n          setDeleteAccountModalVisible(false);\n        }}\n        okButtonProps={{ type: \"default\" }}\n      >\n        Delete Account?\n      </Modal>\n      <Modal\n        visible={!!credentialsModalVisible}\n        onOk={() => {\n          credentialsModalLogin(selectedAccount);\n        }}\n        onCancel={() => {\n          setCredentialsModalVisible(false);\n        }}\n        okButtonProps={{ type: \"default\" }}\n        cancelButtonProps={{ style: { display: \"none\" } }}\n      >\n        <div className=\"login-page-modal-logo-container\">\n          <img src={c13nLogo} className=\"login-page-modal-logo\" />\n        </div>\n        <Input\n          placeholder=\"Username\"\n          className=\"accountsInputCred\"\n          value={usernameToUse}\n          onChange={(e) => {\n            setUsernameToUse(e.target.value);\n          }}\n        />\n        <Input\n          placeholder=\"Password\"\n          className=\"accountsInputCred\"\n          type=\"password\"\n          value={passwordToUse}\n          onChange={(e) => {\n            setPasswordToUse(e.target.value);\n          }}\n          onKeyDown={(e) => {\n            return e.key === \"Enter\"\n              ? e.shiftKey\n                ? undefined\n                : credentialsModalLogin(selectedAccount)\n              : undefined;\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Accounts;\n","import React from \"react\";\n\nimport { Button, Form } from \"antd\";\n\nimport { version } from \"../../config/version\";\n\nimport \"./version-error.css\";\n\nconst formLayout = {\n  labelCol: { span: 10 },\n  wrapperCol: { span: 10 },\n};\n/**\n * This component represents the error screen for incompatible BE/FE version.\n * @param {} props The global variables.\n * @returns The JSX of the error screen.\n */\nconst VersionScreen = (props) => {\n  return (\n    <div className=\"version-error-versionScreen\">\n      <h3>Incompatible Backend version</h3>\n      <Form {...formLayout}>\n        <Form.Item label=\"Backend Version\">{props.backendVersion}</Form.Item>\n        <Form.Item label=\"GUI Version\">{version}</Form.Item>\n      </Form>\n      <Button\n        onClick={() => {\n          window.localStorage.setItem(\"url\", \"\");\n          window.location.reload(true);\n        }}\n        className=\"version-error-button\"\n      >\n        Choose another C13N backend\n      </Button>\n    </div>\n  );\n};\n\nexport default VersionScreen;\n","import React from \"react\";\n\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nimport \"./connection-screen.css\";\n\n/**\n * This component represents the connection screen.\n * @returns The connection screen JSX.\n */\nconst ConnectionScreen = () => {\n  return (\n    <div className=\"connection-screen-dv\">\n      <h2>Connecting</h2>\n      <LoadingOutlined spin />\n    </div>\n  );\n};\n\nexport default ConnectionScreen;\n","import React, { useState } from \"react\";\nimport { Button, Input, List, Modal } from \"antd\";\nimport {\n  SearchOutlined,\n  LoadingOutlined,\n  PlusOutlined,\n  MinusOutlined,\n  CheckOutlined,\n} from \"@ant-design/icons\";\nimport { NotificationManager } from \"react-notifications\";\n\nimport nodeInfoClient from \"../../services/nodeInfoServices\";\nimport discussionClient from \"../../services/discussionServices\";\nimport \"./group-chat.css\";\nimport theme from \"../../style/theme\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\n/**\n * This component represents the contacts page.\n * This page manages the user's contacts.\n * @param {*} props The global variables.\n */\nconst GroupChat = (props) => {\n  const [aliasToSearch, setAliasToSearch] = useState(\"\");\n  const [searchedAlias, setSearchedAlias] = useState();\n  const [searchLoading, setSearchLoading] = useState(false);\n\n  const [searchGroupTouched, setSearchGroupTouched] = useState(false);\n\n  const enteredGroupIsValid = aliasToSearch.length >= 4;\n  const groupInputIsInvalid = !enteredGroupIsValid && searchGroupTouched;\n\n  const [groupModalVisible, setGroupModalVisible] = useState(false);\n\n  /**\n   * Check if given user belongs in the participant list.\n   * @param {*} user The user object.\n   * @returns Found status.\n   */\n  const isInParticipants = (user) => {\n    let res = props.selectedParticipants.find((elem) => {\n      if (elem.address == user.address) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    return res;\n  };\n\n  /**\n   * Creates the formed group discussion.\n   */\n  const createGroupDiscussion = () => {\n    if (props.selectedParticipants.length > 1) {\n      let addr_list = [];\n      props.selectedParticipants.forEach((elem) => {\n        addr_list.push(elem.address);\n      });\n      console.log(addr_list);\n      discussionClient().addDiscussion(\n        {\n          discussion: {\n            participants: addr_list,\n            options: {\n              anonymous: false,\n            },\n          },\n        },\n        (err, res) => {\n          if (err) {\n            console.log(err);\n            NotificationManager.warning(\"Failed to add discussion\");\n          }\n          if (res) {\n            console.log(res);\n            NotificationManager.success(\"Created group discussion\");\n            props.setDiscussions((oldDiscussions) => {\n              return oldDiscussions.concat(res.discussion);\n            });\n            props.setSelectedDiscussion(res.discussion);\n            props.setSelectedPage(\"chatHistory\");\n          }\n        }\n      );\n      props.setSelectedParticipants([]);\n    } else {\n      NotificationManager.error(\"Not enough participants\");\n    }\n  };\n\n  /**\n   * Searches users based on entered alias.\n   */\n  const searchUsersByAlias = () => {\n    setSearchLoading(true);\n    nodeInfoClient().searchNodeByAlias(\n      {\n        alias: aliasToSearch,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n          NotificationManager.warning(err.message);\n        }\n        if (res) {\n          setSearchedAlias(res.nodesList);\n        }\n        setSearchLoading(false);\n      }\n    );\n  };\n\n  const groupBlurHandler = (event) => {\n    setSearchGroupTouched(true);\n  };\n\n  let groupFormIsValid = false;\n\n  if (enteredGroupIsValid) {\n    groupFormIsValid = true;\n  }\n\n  const groupFormSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setSearchGroupTouched(true);\n\n    if (aliasToSearch.length < 4) {\n      return;\n    }\n\n    setAliasToSearch(\"\");\n    setSearchGroupTouched(false);\n  };\n\n  /**\n   * The group chat page JSX.\n   */\n  return (\n    <>\n      <div className=\"group-chat\">\n        <div\n          className=\"group-chat-header\"\n          style={{\n            backgroundColor: theme.menuDarkLite,\n          }}\n        >\n          <DoubleRightOutlined\n            className=\"chatHistoryExpandForMobile\"\n            style={{\n              display: props.sideSquashed\n                ? props.sideActivated\n                  ? \"none\"\n                  : \"inherit\"\n                : \"none\",\n            }}\n            onClick={() => {\n              props.setSideActivated(true);\n            }}\n          />\n          <div className=\"group-chat-header-text\">\n            Search Users on the Network\n          </div>\n        </div>\n        <div className=\"group-chat-main\">\n          <Button\n            onClick={() => {\n              setGroupModalVisible(true);\n            }}\n          >\n            Preview Group\n          </Button>\n          <br />\n          <form onSubmit={groupFormSubmissionHandler}>\n            <div className=\"group-chat-searchAlias-wrapper\">\n              <div className=\"group-chat-search\">\n                <Input\n                  title=\"Search by alias\"\n                  placeholder=\"Enter Alias\"\n                  onBlur={groupBlurHandler}\n                  value={aliasToSearch}\n                  onChange={(e) => {\n                    setAliasToSearch(e.target.value);\n                  }}\n                  onKeyDown={\n                    groupFormIsValid\n                      ? (e) => {\n                        return e.key === \"Enter\"\n                          ? e.shiftKey\n                            ? undefined\n                            : searchUsersByAlias()\n                          : undefined;\n                      }\n                      : () => (\n                        <p className=\"error-validation\">\n                            Minimum 4 characters\n                        </p>\n                      )\n                  }\n                  className=\"group-chat-input\"\n                />\n                <Button\n                  disabled={!groupFormIsValid}\n                  className=\"group-search-button\"\n                  onClick={() => {\n                    searchUsersByAlias();\n                  }}\n                >\n                  {searchLoading ? (\n                    <LoadingOutlined spin />\n                  ) : (\n                    <SearchOutlined />\n                  )}\n                </Button>\n              </div>\n              {groupInputIsInvalid && (\n                <p className=\"error-validation\">Minimum 4 characters</p>\n              )}\n              <List\n                locale={{\n                  emptyText: \"Search Users by Alias\",\n                }}\n                className=\"usersList\"\n                placeholder=\"\"\n                dataSource={searchedAlias || undefined}\n                itemLayout=\"horizontal\"\n                renderItem={(item) => {\n                  let inContacts;\n                  if (props.contacts) {\n                    inContacts = props.contacts.find((elem) => {\n                      return elem.user.address === item.address;\n                    });\n                  }\n                  let inDiscussion =\n                    props.discussions.length !== 0\n                      ? props.discussions.find((elem) => {\n                        return elem.participantsList.includes(item.address);\n                      })\n                      : false;\n                  return (\n                    <List.Item className=\"userSearchContainer\">\n                      <div className=\"userSearchContainerDv\">{item.alias}</div>\n                      Address:\n                      <div className=\"group-chat-address\">{` ${item.address}`}</div>\n                      <br />\n                      <div className=\"group-chat-addressDv\">\n                        <Button\n                          onClick={(e) => {\n                            props.setSelectedParticipants((oldParticipants) => {\n                              let filtered = oldParticipants.filter((elem) => {\n                                if (item.address === elem.address) {\n                                  return 0;\n                                } else {\n                                  return 1;\n                                }\n                              });\n                              filtered.push(item);\n                              return filtered;\n                            });\n                          }}\n                        >\n                          {isInParticipants(item) ? (\n                            <CheckOutlined />\n                          ) : (\n                            <PlusOutlined />\n                          )}\n                        </Button>\n                      </div>\n                    </List.Item>\n                  );\n                }}\n              />\n            </div>\n          </form>\n          <Modal\n            visible={!!groupModalVisible}\n            okText=\"Create\"\n            onOk={() => {\n              createGroupDiscussion();\n              setGroupModalVisible(false);\n            }}\n            onCancel={() => {\n              setGroupModalVisible(false);\n            }}\n          >\n            <div>\n              <List\n                locale={{\n                  emptyText: \"No Participants Added\",\n                }}\n                className=\"usersList\"\n                placeholder=\"\"\n                dataSource={props.selectedParticipants || undefined}\n                itemLayout=\"horizontal\"\n                renderItem={(item) => {\n                  return (\n                    <List.Item className=\"userSearchContainer\">\n                      <div className=\"group-chat-containerDv\">{item.alias}</div>\n                      Address:\n                      <div className=\"group-chat-containerDv-address\">\n                        {` ${item.address}`}\n                      </div>\n                      <Button\n                        onClick={() => {\n                          props.setSelectedParticipants((oldParticipants) => {\n                            let filtered = oldParticipants.filter((elem) => {\n                              if (item.address === elem.address) {\n                                return 0;\n                              } else {\n                                return 1;\n                              }\n                            });\n                            return filtered;\n                          });\n                        }}\n                      >\n                        <MinusOutlined />\n                      </Button>\n                    </List.Item>\n                  );\n                }}\n              />\n            </div>\n          </Modal>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default GroupChat;\n","import React, { useState } from \"react\";\n\nimport ChatHistory from \"./content-pages/chat-history\";\nimport UserSettings from \"./content-pages/user-settings\";\nimport UserFunds from \"./content-pages/user-funds\";\nimport SearchUsers from \"./content-pages/search-users\";\nimport Contacts from \"./content-pages/contacts\";\nimport Logo from \"./content-pages/logo\";\nimport Accounts from \"./accounts\";\nimport VersionScreen from \"./content-pages/version-error\";\nimport ConnectionScreen from \"./content-pages/connection-screen\";\nimport GroupChat from \"./content-pages/group-chat\";\n\nimport \"./contents.css\";\n/**\n * This component represents the main area of the application.\n * It returns the corresponding page based on props.selectedPage.\n *\n * @param {*} props The global variables.\n */\nconst Contents = (props) => {\n  // Variable to indicate if current discussion is the anonymous received messages discussion\n  const [\n    anonymousBucket,\n    setAnonymousBucket\n  ] = useState(false);\n\n  const contentsProps = {\n    anonymousBucket,\n    setAnonymousBucket,\n  };\n\n  /**\n   * This function returns the corresponding page for the currently selected page.\n   * The returned page is loaded in the body of this component.\n   */\n  const getContentPage = () => {\n    let page;\n    switch (props.selectedPage) {\n    case \"chatHistory\":\n      page = <ChatHistory {...props} {...contentsProps} />;\n      break;\n    case \"userSettings\":\n      page = <UserSettings {...props} />;\n      break;\n    case \"searchUsers\":\n      page = <SearchUsers {...props} />;\n      break;\n    case \"contacts\":\n      page = <Contacts {...props} />;\n      break;\n    case \"logo\":\n      page = <Logo {...props} />;\n      break;\n    case \"accounts\":\n      page = <Accounts {...props} />;\n      break;\n    case \"userFunds\":\n      page = <UserFunds {...props} />;\n      break;\n    case \"versionError\":\n      page = <VersionScreen {...props} />;\n      break;\n    case \"connectionScreen\":\n      page = <ConnectionScreen />;\n      break;\n    case \"groupChat\":\n      page = <GroupChat {...props} />;\n    }\n    return page;\n  };\n\n  /**\n   * The contents page JSX.\n   */\n  return (\n    <div\n      className=\"content-body\"\n      onClick={() => {\n        if (props.sideActivated === true) {\n          props.setSideActivated(false);\n        }\n      }}\n    >\n      {getContentPage()}\n    </div>\n  );\n};\n\nexport default Contents;\n","import React, { useState } from \"react\";\nimport { List, Button, Input, Radio, Menu, Dropdown, Modal } from \"antd\";\nimport {\n  SearchOutlined,\n  LoadingOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\n\nimport discussionClient from \"../services/discussionServices\";\n\nimport { version } from \"../config/version\";\nimport generateIdenticon from \"../utils/identicon.js\";\nimport { findUserByAddress } from \"../utils/users-utils.js\";\nimport c13nLogo from \"../media/arc-logo.png\";\n\nimport { NotificationManager } from \"react-notifications\";\n\nimport theme from \"../style/theme\";\n\nimport {\n  concatUserAddresses,\n  concatUserNames,\n} from \"../utils/discussion-utils\";\n\nimport \"./side.css\";\n\nconst cryptoUtils = require(\"../utils/crypto-utils\");\n\n/**\n * This component represents the left side panel of the application.\n * It contains the user's info and options on the top left area, as\n * well as the discussions panel.\n * @param {*} props The global variables.\n */\nconst Side = (props) => {\n  // Discussion Filtering Variables\n  const [stringToSearch, SetStringToSearch] = useState(\"\");\n  const [selectedSearchOption, setSelectedSearchOption] = useState(\"Name\");\n  const [selectedSideDiscussion, setSelectedSideDiscussion] = useState();\n\n  const [deleteDiscussionModalActive, setDeleteDiscussionModalActive] =\n    useState(false);\n\n  /**\n   * Calculates if there exist unread messages in a given discussion.\n   * @param {*} item The discussion object.\n   * @returns The unread status.\n   */\n  const calculateUnreadStatus = (item) => {\n    return item.lastReadMsgId !== item.lastMsgId;\n  };\n\n  /**\n   * Calculates the number of discussions that contain unread messages in order to update the tab title.\n   */\n  const titleNotificationChecker = () => {\n    if (props.discussions) {\n      let messageCounter = 0;\n      const res = props.discussions.forEach((disc) => {\n        if (disc.lastMsgId !== disc.lastReadMsgId) {\n          messageCounter++;\n        }\n      });\n      if (messageCounter == 0) {\n        document.title = \"c13n\";\n      } else {\n        document.title = `*(${messageCounter}) c13n`;\n      }\n    }\n  };\n\n  /**\n   * Calculates the discussions that pass the currently selected filter options.\n   * @returns The discussions array.\n   */\n  const discussionsToShow = () => {\n    titleNotificationChecker();\n    if (props.discussions) {\n      const res = props.discussions\n        .filter((item) => {\n          let name = concatUserNames(props, item.participantsList);\n          let address = concatUserAddresses(props, item.participantsList);\n          if (selectedSearchOption === \"Name\") {\n            return name.toLowerCase().includes(stringToSearch.toLowerCase());\n          }\n          if (selectedSearchOption === \"Address\") {\n            return address.toLowerCase().includes(stringToSearch.toLowerCase());\n          }\n        })\n        .sort((a, b) => {\n          return a.lastMsgId > b.lastMsgId ? -1 : 1;\n        });\n      return res;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * The side panel JSX.\n   */\n  return (\n    <div\n      className={`sidePanel ${\n        props.sideSquashed\n          ? props.sideActivated\n            ? \"sidePanel-mobile\"\n            : \"\"\n          : \"\"\n      } `}\n    >\n      <Dropdown\n        trigger=\"hover\"\n        overlay={\n          <Menu>\n            <Menu.Item\n              onClick={() => {\n                props.setSelectedDiscussion();\n                props.setSelectedPage(\"userSettings\");\n                props.setSideActivated(false);\n              }}\n            >\n              Settings\n            </Menu.Item>\n            <Menu.Item\n              onClick={() => {\n                props.updateCurrentFunds();\n                props.setSelectedDiscussion();\n                props.setSelectedPage(\"userFunds\");\n                props.setSideActivated(false);\n              }}\n            >\n              Funds\n            </Menu.Item>\n            <Menu.Item\n              className=\"fullscreen\"\n              onClick={() => {\n                document.body.requestFullscreen();\n              }}\n            >\n              Go Fullscreen\n            </Menu.Item>\n            <Menu.Item\n              onClick={() => {\n                props.setFundsInitVisible(true);\n                props.setFundsInitDisabled(false);\n              }}\n            >\n              Show Welcome Dialog\n            </Menu.Item>\n            <Menu.Item\n              onClick={() => {\n                props.setLoadAccount(0);\n                window.localStorage.removeItem(\"url\");\n                window.localStorage.removeItem(\"httpUsername\");\n                window.localStorage.removeItem(\"httpPassword\", \"\");\n                window.location.reload(true);\n              }}\n            >\n              Disconnect\n            </Menu.Item>\n          </Menu>\n        }\n      >\n        <div\n          className=\"side-user-info\"\n          style={{\n            color: props.backendStatus ? \"white\" : \"gray\",\n          }}\n        >\n          <div className=\"side-user-info-icon\">\n            {props.backendStatus && props.selfInfo.address ? (\n              generateIdenticon(props.selfInfo.address, 60)\n            ) : (\n              <LoadingOutlined spin />\n            )}\n          </div>\n          <span className=\"side-user-info-name\">\n            <span\n              className=\"side-user-info-name-text\"\n              style={{\n                color: props.msgStreamActive ? \"inherit\" : \"gray\",\n              }}\n            >\n              {props.selfInfo ? props.selfInfo.alias : \"You\"}\n            </span>\n            <span className=\"side-user-info-name-navigationDots\">...</span>\n          </span>\n          <div id=\"currentFundsWrapper\" className=\"currentFundsWrapper\">\n            <span id=\"currentFundsWrapperChange\">\n              {cryptoUtils.parseLastFundChange(props)}\n            </span>\n            <span className=\"currentFundsWrapperChangeLogo\">\n              {props.selectedCryptoUnit && props.lastFundChange !== 0\n                ? props.selectedCryptoUnit\n                : \"\"}\n            </span>\n            <div className=\"currentFundsWrapperSatoshis\">\n              {` ${cryptoUtils.parseCurrentFunds(props)}`}\n            </div>\n            <span className=\"currentFundsWrapperSatoshisLogo\">\n              {props.selectedCryptoUnit ? props.selectedCryptoUnit : \"\"}\n            </span>\n            <div className=\"currentFundsWrapperEuro\">\n              {cryptoUtils.parseCurrentFiatAmount(props)}\n            </div>\n            <span className=\"currentFundsWrapperEuroLogo\">\n              {props.selectedFiatUnit}\n            </span>\n          </div>\n        </div>\n      </Dropdown>\n      <div className=\"side-buttons-wrapper\">\n        <Button\n          className=\"side-button-homePage\"\n          onClick={() => {\n            props.changePage(\"contacts\", \"hide\");\n          }}\n        >\n          <div className=\"side-button-homePage-c13nLogo-wrapper\">\n            <img src={c13nLogo} className=\"side-button-homePage-c13nLogo\" />\n          </div>\n\n          <div className=\"side-button-homePage-text\">Home</div>\n        </Button>\n        <Button\n          className=\"side-button-searchUsers\"\n          onClick={() => {\n            props.changePage(\"searchUsers\", \"hide\");\n          }}\n        >\n          <div className=\"side-button-searchUsers-searchLogo-wrapper\">\n            {\" \"}\n            <SearchOutlined className=\"side-button-searchUsers-searchLogo\" />\n          </div>\n\n          <div className=\"side-button-searchUsers-text\">Search</div>\n        </Button>\n        <Button\n          className=\"side-button-groupChat\"\n          onClick={() => {\n            props.changePage(\"groupChat\", \"hide\");\n          }}\n        >\n          <div className=\"side-button-groupChat-groupsearchlogo-wrapper\">\n            <PlusOutlined className=\"side-button-groupChat-groupsearchlogo\" />\n          </div>\n          <div className=\"side-button-groupChat-text\">Group Discussion</div>\n        </Button>\n      </div>\n      <div\n        className=\"side-contacts-wrapper\"\n        style={{\n          backgroundColor: theme.menuDark,\n        }}\n      >\n        <List\n          className=\"discussionsList\"\n          style={{\n            scrollbarColor: `${theme.menuNormal} ${theme.menuDark}`,\n            // maxHeight: 'min(50vh, 750px)',\n          }}\n          locale={{\n            emptyText: \"No Discussions\",\n          }}\n          dataSource={discussionsToShow()}\n          itemLayout=\"horizontal\"\n          renderItem={(item) => {\n            const userLookup = findUserByAddress(\n              props,\n              item.participantsList[0]\n            );\n            return (\n              <List.Item\n                className=\"userContainer\"\n                style={{\n                  backgroundColor:\n                    props.selectedDiscussion === item ? theme.menuNormal : \"\",\n                }}\n              >\n                <div\n                  className=\"SideListItem\"\n                  onClick={() => {\n                    props.changePage(\"chatHistory\", \"hide\");\n                    props.setSelectedDiscussion(item);\n                  }}\n                >\n                  {item.participantsList.length > 1\n                    ? generateIdenticon(\n                      concatUserAddresses(props, [\n                        props.selfInfo.address,\n                        ...item.participantsList,\n                      ]),\n                      30\n                    )\n                    : generateIdenticon(\n                      concatUserAddresses(props, [item.participantsList]),\n                      30\n                    )}\n                </div>\n                <div\n                  className=\"sideContactUserWrapper\"\n                  onClick={() => {\n                    props.changePage(\"chatHistory\", \"hide\");\n                    props.setSelectedDiscussion(item);\n                  }}\n                >\n                  <b\n                    className=\"sideContactUserWrapperB\"\n                    style={{\n                      color: calculateUnreadStatus(item) ? \"cyan\" : \"inherit\",\n                    }}\n                  >\n                    {concatUserNames(props, item.participantsList).length > 0\n                      ? concatUserNames(props, item.participantsList)\n                      : \"Anonymous\"}\n                  </b>\n                  <br />\n                  <div className=\"sideContactUserWrapperDiv\">\n                    {item.participantsList.length == 1\n                      ? userLookup\n                        ? `${userLookup.address.substring(\n                          0,\n                          5\n                        )}...${userLookup.address.substring(61, 66)}`\n                        : \"\"\n                      : \"Group Discussion\"}\n                  </div>\n                </div>\n\n                <Dropdown\n                  trigger=\"click\"\n                  overlay={\n                    <Menu>\n                      <Menu.Item disabled>Rename</Menu.Item>\n                      <Menu.Item\n                        onClick={() => {\n                          setDeleteDiscussionModalActive(true);\n                        }}\n                      >\n                        Delete\n                      </Menu.Item>\n                    </Menu>\n                  }\n                >\n                  <div\n                    className=\"sideDropdown\"\n                    onClick={() => {\n                      setSelectedSideDiscussion(item);\n                    }}\n                  >\n                    <div>...</div>\n                  </div>\n                </Dropdown>\n              </List.Item>\n            );\n          }}\n        />\n        <div className=\"side-filter\">\n          <Input\n            placeholder=\"Filter...\"\n            className=\"side-input-filter\"\n            onChange={(e) => {\n              SetStringToSearch(e.target.value);\n            }}\n          />\n          <Radio.Group\n            onChange={(e) => {\n              setSelectedSearchOption(e.target.value);\n            }}\n            value={selectedSearchOption}\n            optionType=\"button\"\n            size=\"small\"\n          >\n            <Radio.Button value=\"Name\" className=\"side-input-filter\">\n              Name\n            </Radio.Button>\n            <Radio.Button value=\"Address\" className=\"side-input-filter\">\n              Address\n            </Radio.Button>\n          </Radio.Group>\n        </div>\n        <div className=\"side-input-version\">\n          {`Version ${version} | ${props.chainInfo?.chain} ${props.chainInfo?.network}`}\n        </div>\n      </div>\n      <Modal\n        visible={!!deleteDiscussionModalActive}\n        onOk={() => {\n          discussionClient().removeDiscussion(\n            {\n              id: selectedSideDiscussion.id,\n            },\n            (err, res) => {\n              if (err) {\n                NotificationManager.error(\"Failed to delete discussion\");\n                console.log(err);\n              }\n              if (res) {\n                NotificationManager.success(\"Deleted discussion\");\n                props.setSelectedPage(\"logo\");\n                props.setDiscussions((oldDiscussions) => {\n                  let res = oldDiscussions.filter((elem) => {\n                    return elem.id !== selectedSideDiscussion.id;\n                  });\n                  return res;\n                });\n              }\n            }\n          );\n          setDeleteDiscussionModalActive(false);\n        }}\n        onCancel={() => {\n          setDeleteDiscussionModalActive(false);\n        }}\n        okButtonProps={{ type: \"default\" }}\n      >\n        <h3>Delete discussion?</h3>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Side;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Button, Modal, Tabs, Slider, Input, Form, Divider } from \"antd\";\n\nimport { splitURI } from \"../../utils/users-utils\";\n\nimport channelClient from \"../../services/channelServices\";\nimport nodeInfoClient from \"../../services/nodeInfoServices\";\n\nimport { NotificationManager } from \"react-notifications\";\nimport \"./funds-initialization.css\";\n\n/**\n * This component represents the modal responsible for showing the dialog to help you bootstrap your wallet and lightning channels.\n * @param {*} props The global variables.\n * @returns The Modal JSX.\n */\nconst FundsInitialization = (props) => {\n  const [key, setKey] = useState(\"1\");\n  const url = window.localStorage.getItem(\"url\");\n  const rtl_link = `https://${url}/rtl/lnd/onchain/receive/utxos`;\n  const mainnetURI =\n    \"028cdd87b6f8f38d98c8a6b9bafedcd2907f68943991a4a3e7b9877887252cb692@62.38.75.208:9735\";\n  const testnetURI =\n    \"0355e471ad1cd9f9df398a47f18a5bf2f4548f4086d50c7e0ceb7b81ba931fb7ad@62.38.75.208:19735\";\n  const defaultAmount = 50000;\n  const defaultPushAmount = Math.floor(50000 * 0.03);\n  const minChannelAmount = 20000;\n\n  const [loading, setLoading] = useState(false);\n\n  const [mode, setMode] = useState(\"auto\");\n  const [lightningAddress, setLightningAddress] = useState(\"\");\n  const [amount, setAmount] = useState(defaultAmount);\n  const [pushAmount, setPushAmount] = useState(defaultPushAmount);\n  const [minimumInputConfirmations, setMinimumInputConfirmations] = useState(1);\n  const [targetConfirmationBlocks, setTargetConfirmationBlocks] = useState(3);\n\n  /**\n   * Dynamically updates the push amount depending on current selected channel amount.\n   */\n  useEffect(() => {\n    setPushAmount(Math.floor(amount * 0.03));\n  }, [amount]);\n\n  /**\n   * Returns the address for channel openning depending on user selected options on the modal.\n   * @returns The string representing the address.\n   */\n  const getAddress = () => {\n    switch (mode) {\n    case \"auto\":\n      return props.chainInfo?.network === \"testnet\" ? testnetURI : mainnetURI;\n    case \"basic\":\n      return lightningAddress;\n    case \"advanced\":\n      return lightningAddress;\n    }\n  };\n\n  /**\n   * Opens a channel with selected address and options.\n   * @param {*} address The address to open a channel with.\n   */\n  const openChannel = (address) => {\n    const amtMsat = amount * 1000;\n    const pushAmtMsat = pushAmount * 1000;\n    channelClient().openChannel(\n      {\n        address: address,\n        amtMsat: amtMsat,\n        pushAmtMsat: pushAmtMsat,\n        minInputConfs: minimumInputConfirmations,\n        targetConfirmationBlocks: targetConfirmationBlocks,\n      },\n      (err, res) => {\n        if (err) {\n          console.log(err);\n          setLoading(false);\n          NotificationManager.error(err.message);\n        }\n        if (res) {\n          console.log(res);\n          setLightningAddress(\"\");\n          setAmount(defaultAmount);\n          setPushAmount(defaultPushAmount);\n          setMinimumInputConfirmations(1);\n          setTargetConfirmationBlocks(3);\n          props.setVisible(false);\n          setLoading(false);\n          NotificationManager.success(\"Channel pending to open\");\n        }\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Modal\n        title=\"Welcome to c13n\"\n        visible={props.visible}\n        okText={key === \"1\" ? \"Next\" : \"Open Channel\"}\n        cancelText={\"Don't show again\"}\n        onCancel={() => {\n          props.setVisible(false);\n        }}\n        cancelButtonProps={{\n          onClick: () => {\n            props.setDisabled(true);\n            props.setVisible(false);\n          },\n        }}\n        okButtonProps={{\n          disabled: loading,\n        }}\n        onOk={() => {\n          if (key === \"1\") {\n            setKey(\"2\");\n          } else {\n            setLoading(true);\n            const addr = getAddress();\n            const split = splitURI(addr);\n            const address = split.address;\n            const hostport = split.hostport;\n            nodeInfoClient().connectNode(\n              {\n                address: address,\n                hostport: hostport,\n              },\n              (err, res) => {\n                if (err) {\n                  console.log(err);\n                  NotificationManager.error(err.message);\n                  setLoading(false);\n                }\n                if (res) {\n                  console.log(res);\n                  NotificationManager.success(\"Connected to peer\");\n                  openChannel(address);\n                }\n              }\n            );\n          }\n        }}\n      >\n        <Tabs\n          key={key}\n          defaultActiveKey={key}\n          onChange={(e) => {\n            setKey(e);\n          }}\n        >\n          <Tabs.TabPane tab=\"Buy Bitcoin\" key=\"1\">\n            Before anything else, you must add some bitcoin to your wallet.\n            <br />\n            <br />\n            <b>Step 1: Generate a receiving address</b>\n            <br />\n            Login to your{\" \"}\n            <a href={rtl_link} target=\"_blank\">\n              RTL wallet\n            </a>\n            , select <b>On-Chain</b>, click <b>Generate Address</b> and copy it.\n            <br />\n            <br />\n            <b>Step 2: Get some bitcoin.</b>\n            <br />\n            Use the copied address in one of the following services to buy\n            bitcoin.\n            <br />\n            {props.chainInfo?.network === \"mainnet\" ? (\n              <span>\n                <a href=\"https://buy.moonpay.com\" target=\"_blank\">\n                  MoonPay\n                </a>\n                <br />\n                <a href=\"https://www.kraken.com\" target=\"_blank\">\n                  Kraken\n                </a>\n              </span>\n            ) : (\n              <span>\n                <a href=\"https://testnet-faucet.mempool.co/\" target=\"_blank\">\n                  Mempool Faucet\n                </a>\n                <br />\n                <a href=\"https://bitcoinfaucet.uo1.net/\" target=\"_blank\">\n                  Uo1 Faucet\n                </a>\n              </span>\n            )}\n            <br />\n            <br />\n            You will see the funds almost immediately but you will be able to\n            use them after 10-30 minutes.\n          </Tabs.TabPane>\n\n          <Tabs.TabPane tab=\"Open Channel\" key=\"2\">\n            To enable instant messages and low-fee transactions you need to use\n            some of your funds to open a Lightning Payment Channel.\n            <br />\n            <br />\n            This is your financial relationship with another node on the\n            Lightning Network. It is implemented using multi-signature Bitcoin\n            transactions that share control over the commited bitcoin between\n            you and that node. This relationship offers everyone security and\n            privacy for both messages and payments.\n            <br />\n            <br />\n            The funds dedicated to a channel still belong to you and you are\n            able to spend them instantly and with very low fees.\n            <br />\n            <br />\n            <Button\n              type=\"secondary\"\n              className=\"funds-initialization-btn\"\n              style={{\n                borderBottom:\n                  mode === \"auto\" ? \"1px solid white\" : \"1px solid gray\",\n                fontWeight: mode === \"auto\" ? \"bold\" : \"normal\",\n              }}\n              onClick={() => {\n                setMode(\"auto\");\n              }}\n            >\n              Connect to c13n\n            </Button>\n            <Button\n              type=\"secondary\"\n              className=\"funds-initialization-btn\"\n              style={{\n                borderBottom:\n                  mode !== \"auto\" ? \"1px solid white\" : \"1px solid gray\",\n                fontWeight: mode !== \"auto\" ? \"bold\" : \"normal\",\n              }}\n              onClick={() => {\n                setMode(\"basic\");\n              }}\n            >\n              Connect manually\n            </Button>\n            <Tabs\n              style={{\n                display:\n                  key === \"2\" ? (mode !== \"auto\" ? \"inherit\" : \"none\") : \"none\",\n              }}\n              defaultActiveKey=\"1\"\n              onChange={(e) => {\n                switch (e) {\n                case \"1\":\n                  setMode(\"basic\");\n                  break;\n                case \"2\":\n                  setMode(\"advanced\");\n                  break;\n                }\n              }}\n            >\n              <Tabs.TabPane key=\"1\" tab=\"Basic\" />\n              <Tabs.TabPane key=\"2\" tab=\"Advanced\" />\n            </Tabs>\n            <Form\n              style={{\n                display: key === \"2\" ? \"inherit\" : \"none\",\n              }}\n              layout=\"vertical\"\n            >\n              <Form.Item\n                style={{\n                  display: mode !== \"auto\" ? \"inherit\" : \"none\",\n                }}\n              >\n                <div className=\"funds-initialization-info\">\n                  <Divider\n                    className=\"funds-initialization-info-divider\"\n                    orientation=\"left\"\n                  >\n                    Node URI\n                  </Divider>\n                  <Input\n                    className=\"funds-initialization-info-input\"\n                    value={lightningAddress}\n                    onChange={(e) => {\n                      setLightningAddress(e.target.value);\n                    }}\n                    className=\"funds-initialization-info-input\"\n                  />\n                </div>\n              </Form.Item>\n\n              <Form.Item>\n                <div className=\"funds-initialization-amount\">\n                  <Divider\n                    className=\"funds-initialization-amount-divider\"\n                    orientation=\"left\"\n                  >\n                    Amount (sat)\n                  </Divider>\n                  <Slider\n                    className=\"funds-initialization-amount-slider\"\n                    min={minChannelAmount}\n                    max={props.balance?.walletConfirmedSat}\n                    defaultValue={defaultAmount}\n                    onChange={(e) => {\n                      setAmount(e);\n                    }}\n                  />\n                  <Input\n                    value={amount}\n                    onChange={(e) => {\n                      setAmount(parseFloat(e.target.value));\n                    }}\n                    className=\"funds-initialization-amount-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item\n                style={{\n                  display: mode === \"advanced\" ? \"inherit\" : \"none\",\n                }}\n              >\n                <div className=\"funds-initialization-info\">\n                  <Divider\n                    className=\"funds-initialization-info-divider\"\n                    orientation=\"left\"\n                  >\n                    Push Amount (sat)\n                  </Divider>\n                  <Input\n                    value={pushAmount.toString()}\n                    onChange={(e) => {\n                      setPushAmount(parseFloat(e.target.value));\n                    }}\n                    className=\"funds-initialization-info-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item\n                style={{\n                  display: mode === \"advanced\" ? \"inherit\" : \"none\",\n                }}\n              >\n                <div className=\"funds-initialization-info\">\n                  <Divider\n                    className=\"funds-initialization-info-divider\"\n                    orientation=\"left\"\n                  >\n                    Minimum Input Confirmations\n                  </Divider>\n                  <Input\n                    value={minimumInputConfirmations.toString()}\n                    onChange={(e) => {\n                      setMinimumInputConfirmations(parseFloat(e.target.value));\n                    }}\n                    className=\"funds-initialization-info-input\"\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item\n                style={{\n                  display: mode === \"advanced\" ? \"inherit\" : \"none\",\n                }}\n              >\n                <div className=\"funds-initialization-info\">\n                  <Divider\n                    className=\"funds-initialization-info-divider\"\n                    orientation=\"left\"\n                  >\n                    Target Confirmation Blocks\n                  </Divider>\n                  <Input\n                    value={targetConfirmationBlocks.toString()}\n                    onChange={(e) => {\n                      setTargetConfirmationBlocks(parseFloat(e.target.value));\n                    }}\n                    className=\"funds-initialization-info-input\"\n                  />\n                </div>\n              </Form.Item>\n            </Form>\n          </Tabs.TabPane>\n        </Tabs>\n        <span\n          className=\"funds-initialization-suggested\"\n          style={{\n            display: mode === \"advanced\" ? \"inline\" : \"none\",\n          }}\n        >\n          (suggested)\n        </span>\n      </Modal>\n    </div>\n  );\n};\n\nexport default FundsInitialization;\n","const https = require('https');\n\nconst getExchangeRates = (setExchangeRates) => {\n  let data = '';\n  https.get('https://api.coinbase.com/v2/exchange-rates?currency=BTC', (resp) => {\n    resp.on('data', (chunk) => {\n      data += chunk;\n    });\n    resp.on('end', () => {\n      let res = JSON.parse(data);\n      setExchangeRates(res.data.rates);\n    });\n  }).on('error', (err) => {\n    console.error(err);\n  });\n};\n\nexport default getExchangeRates;\n","export default __webpack_public_path__ + \"static/media/notification.1187a1b6.mp3\";","import React, { useState, useEffect } from \"react\";\nimport {\n  NotificationManager,\n  NotificationContainer,\n} from \"react-notifications\";\nimport WindowSizeListener from \"react-window-size-listener\";\n\nimport Contents from \"./contents\";\nimport Side from \"./side\";\nimport FundsInitialization from \"./content-pages/funds-initialization\";\n\nimport contactClient from \"../services/contactServices\";\nimport discussionClient from \"../services/discussionServices\";\nimport nodeInfoClient from \"../services/nodeInfoServices\";\nimport messageClient from \"../services/messageServices\";\n\nimport getExchangeRates from \"../utils/fiat-rates\";\nimport sleep from \"../utils/system\";\nimport { addToAccounts, loadAccounts } from \"../utils/accounts-utils\";\nimport {\n  loadAutomaticImageLoadingSetting,\n  loadSmoothAnimationsSetting,\n  loadSelectedCryptoUnit,\n  loadSelectedFiatUnit,\n  loadChatIdenticonsSetting,\n  loadChatLayoutSetting,\n  loadMyMessageColor,\n  loadOtherMessageColor,\n  loadDeveloperLogsSetting,\n} from \"../utils/settings\";\n\nimport { appendToChatHistory } from \"../utils/discussion-utils\";\n\nimport c13nLogo from \"../media/arc-logo.png\";\nimport notificationAudio from \"../media/notification.mp3\";\n\nimport { concatUserNames } from \"../utils/discussion-utils\";\nimport channelClient from \"../services/channelServices\";\nimport \"./main.css\";\n\nconst { GetDiscussionsResponse } = require(\"../rpc/rpc_pb\");\nconst { SubscribeMessageResponse } = require(\"../rpc/rpc_pb\");\n\nconst cryptoUtils = require(\"../utils/crypto-utils\");\n\n/**\n * Root component of the application. Must be nested inside a notification\n * manager wrapper for notifications to work.\n */\n\nconst Main = () => {\n  // Connection Variables\n  const [initialConnection, setInitialConnection] = useState(true);\n  const [backendStatus, setBackendStatus] = useState(false);\n  const [msgRxUp, setMsgRxUp] = useState(0);\n  const [msgStreamActive, setMsgStreamActive] = useState(false);\n  const [backendVersion, setBackendVersion] = useState(\"\");\n\n  // Node Variables\n  const [selfInfo, setSelfInfo] = useState();\n  const [chainInfo, setChainInfo] = useState();\n  const [contacts, setContacts] = useState();\n  const [users, setUsers] = useState([]);\n  const [currentFunds, setCurrentFunds] = useState(-1);\n  const [lastFundChange, setLastFundChange] = useState(0);\n\n  // Discussion Variables\n  const [discussions, setDiscussions] = useState([]);\n  const [selectedDiscussion, setSelectedDiscussion] = useState();\n  const [chatHistory, setChatHistory] = useState([]);\n  const [selectedParticipants, setSelectedParticipants] = useState([]);\n\n  // Account Variables\n  const [accounts, setAccounts] = useState([]);\n  const [loadAccount, setLoadAccount] = useState(0);\n\n  // View Variables\n  const [selectedPage, setSelectedPage] = useState(\"accounts\");\n  const [sideSquashed, setSideSquashed] = useState(false);\n  const [sideActivated, setSideActivated] = useState(false);\n\n  // Settings Variables\n  const [automaticImageLoading, setAutomaticImageLoading] = useState(false);\n  const [smoothAnimations, setSmoothAnimations] = useState(false);\n  const [selectedCryptoUnit, setSelectedCryptoUnit] = useState();\n  const [selectedFiatUnit, setSelectedFiatUnit] = useState();\n  const [chatLayout, setChatLayout] = useState();\n  const [chatIdenticons, setChatIdenticons] = useState();\n  const [myMessageColor, setMyMessageColor] = useState();\n  const [otherMessageColor, setOtherMessageColor] = useState();\n  const [developerLogs, setDeveloperLogs] = useState();\n\n  // Crypto Variables\n  const [exchangeRates, setExchangeRates] = useState();\n\n  // Funds Initialization Variables\n  const [fundsInitVisible, setFundsInitVisible] = useState(false);\n  const [fundsInitDisabled, setFundsInitDisabled] = useState(false);\n  const [balance, setBalance] = useState();\n\n  /**\n   * This function loads the static data of the currently active account.\n   */\n  const fetchAccountData = () => {\n    fetchUsers();\n    fetchContacts();\n    fetchDiscussions();\n  };\n\n  /**\n   * Loads the application settings from local storage.\n   */\n  const loadSettings = () => {\n    loadAutomaticImageLoadingSetting(setAutomaticImageLoading);\n    loadSmoothAnimationsSetting(setSmoothAnimations);\n    loadSelectedCryptoUnit(setSelectedCryptoUnit);\n    loadSelectedFiatUnit(setSelectedFiatUnit);\n    loadChatIdenticonsSetting(setChatIdenticons);\n    loadChatLayoutSetting(setChatLayout);\n    loadMyMessageColor(setMyMessageColor);\n    loadOtherMessageColor(setOtherMessageColor);\n    loadDeveloperLogsSetting(setDeveloperLogs);\n  };\n\n  /**\n   * Changes the active contents page.\n   * @param {*} pageName Name of the page.\n   * @param {*} sideMenuAction Side bar behavior (if set to 'hide' it will automatically close the side bar on the mobile view).\n   */\n  const changePage = (pageName, sideMenuAction) => {\n    setSelectedDiscussion();\n    setSelectedPage(pageName);\n    if (sideMenuAction === \"hide\") {\n      setSideActivated(false);\n    }\n  };\n\n  /**\n   * Calculates if the welcome dialog for funds initialization should be displayed.\n   */\n  const calculateFundsInitialization = () => {\n    let modalDisabled;\n    setFundsInitDisabled((oldValue) => {\n      modalDisabled = oldValue;\n      return oldValue;\n    });\n    nodeInfoClient().getSelfBalance({}, (err, res) => {\n      if (err) {\n        console.log(err);\n      }\n      if (res) {\n        setBalance(res);\n        const channelZero =\n          res.channelLocalMsat === 0 && res.pendingOpenLocalMsat === 0;\n        if (channelZero && !modalDisabled) {\n          setFundsInitVisible(true);\n        }\n      }\n    });\n  };\n\n  /**\n   * Updates current funds and triggers the balance change indicator.\n   */\n  const updateCurrentFunds = () => {\n    nodeInfoClient().getSelfBalance({}, (err, res) => {\n      if (err) {\n        console.log(err);\n      }\n      if (res) {\n        if (res.channelLocalMsat) {\n          const newAmount = Math.floor(res.channelLocalMsat / 1000);\n          let oldAmount = currentFunds;\n          setCurrentFunds((oldFunds) => {\n            oldAmount = oldFunds;\n            return newAmount;\n          });\n          let fundColor;\n          if (oldAmount === -1) {\n            fundColor = \"white\";\n          } else if (newAmount > oldAmount) {\n            fundColor = \"#00FF00\";\n          } else if (newAmount < oldAmount) {\n            fundColor = \"#FF0000\";\n          } else if (newAmount === oldAmount) {\n            fundColor = \"white\";\n          }\n          let fundsWrapper = document.getElementById(\"currentFundsWrapper\");\n          setTimeout(function () {\n            fundsWrapper.style.transition = \"0s\";\n            fundsWrapper.style.color = fundColor;\n          }, 1);\n          setTimeout(function () {\n            fundsWrapper.style.transition = smoothAnimations ? \"0.4s\" : \"0s\";\n            fundsWrapper.style.color = \"white\";\n          }, 200);\n          setTimeout(function () {\n            setLastFundChange(0);\n          }, 4000);\n        }\n      }\n    });\n  };\n\n  const mainProps = {\n    users,\n    setUsers,\n    selfInfo,\n    setSelfInfo,\n    selectedDiscussion,\n    setSelectedDiscussion,\n    contacts,\n    setContacts,\n    chatHistory,\n    setChatHistory,\n    selectedPage,\n    setSelectedPage,\n    backendStatus,\n    setBackendStatus,\n    discussions,\n    setDiscussions,\n    accounts,\n    setAccounts,\n    fetchAccountData,\n    loadAccount,\n    setLoadAccount,\n    sideSquashed,\n    setSideSquashed,\n    sideActivated,\n    setSideActivated,\n    automaticImageLoading,\n    setAutomaticImageLoading,\n    currentFunds,\n    updateCurrentFunds,\n    lastFundChange,\n    setLastFundChange,\n    smoothAnimations,\n    setSmoothAnimations,\n    selectedCryptoUnit,\n    setSelectedCryptoUnit,\n    selectedFiatUnit,\n    setSelectedFiatUnit,\n    exchangeRates,\n    backendVersion,\n    setBackendVersion,\n    chatLayout,\n    setChatLayout,\n    chatIdenticons,\n    setChatIdenticons,\n    myMessageColor,\n    setMyMessageColor,\n    otherMessageColor,\n    setOtherMessageColor,\n    selectedParticipants,\n    setSelectedParticipants,\n    msgStreamActive,\n    developerLogs,\n    setDeveloperLogs,\n    changePage,\n    chainInfo,\n    balance,\n    setFundsInitVisible,\n    setFundsInitDisabled,\n  };\n\n  /**\n   * This function runs asynchronously and checks for backend connection status based on fixed interval.\n   */\n  async function upStatusChecker() {\n    while (true) {\n      let deadline = new Date();\n      deadline.setSeconds(deadline.getSeconds() + 4);\n      nodeInfoClient().getSelfInfo(\n        {},\n        { deadline: deadline.getTime() },\n        (err, res) => {\n          if (err) {\n            console.log(err);\n            setBackendStatus(false);\n            NotificationManager.error(\"Server unreachable\");\n          }\n          if (res) {\n            let initial = true;\n            setInitialConnection((old) => {\n              initial = old;\n              return old;\n            });\n            let oldStatus = true;\n            setBackendStatus((old) => {\n              oldStatus = old;\n              return old;\n            });\n            if (initial) {\n              setChainInfo(res.chainsList[0]);\n              setSelfInfo(res.info);\n              addToAccounts(mainProps, {\n                url: localStorage.getItem(\"url\"),\n                address: res.info.address,\n                lastActive: Date.now(),\n              });\n              setBackendStatus(true);\n            } else {\n              if (oldStatus === false) {\n                window.location.reload(true);\n              }\n            }\n            setInitialConnection(false);\n          }\n        }\n      );\n      calculateFundsInitialization();\n      await sleep(8000);\n    }\n  }\n\n  /**\n   * This function fetches the users from backend.\n   */\n  const fetchUsers = () => {\n    console.log(\"Fetching Nodes...\");\n    nodeInfoClient().getNodes({}, (err, res) => {\n      if (err) {\n        console.log(err);\n        NotificationManager.error(\"Failed to fetch network\");\n      }\n      if (res) {\n        setUsers(res.nodesList);\n      }\n      console.log(\"Done Fetching Nodes...\");\n    });\n  };\n\n  /**\n   * This function fetches the contacts from backend.\n   */\n  const fetchContacts = () => {\n    contactClient().getContacts({}, (err, res) => {\n      if (err) {\n        console.log(err);\n        NotificationManager.error(\"Failed to fetch contacts\");\n      }\n      if (res) {\n        const parsedContacts = res.contactsList.map((item) => {\n          return {\n            user: item.node,\n            id: item.id,\n            displayName: item.displayName,\n          };\n        });\n        setContacts(parsedContacts);\n      }\n    });\n  };\n\n  /**\n   * This function fetches the discussions from the backend.\n   */\n  async function fetchDiscussions() {\n    let discussionsArray = [];\n    await discussionClient()\n      .getDiscussions({})\n      .on(\"data\", (res) => {\n        discussionsArray.push(\n          GetDiscussionsResponse.toObject(true, res).discussion\n        );\n      })\n      .on(\"end\", () => {\n        console.log(\"Got Discussions:\", discussionsArray);\n        setDiscussions(discussionsArray);\n      })\n      .on(\"error\", (e) => {\n        console.log(\"err\", e);\n      })\n      .on(\"status\", () => {});\n  }\n\n  const initializeExchangeRates = async () => {\n    getExchangeRates(setExchangeRates);\n  };\n\n  /**\n   * This function sets up the async functions that require a selected account.\n   */\n  useEffect(() => {\n    if (loadAccount !== 0) {\n      upStatusChecker();\n      loadSettings();\n      updateCurrentFunds();\n      initializeExchangeRates();\n      setInterval(() => {\n        getExchangeRates(setExchangeRates);\n      }, 300000);\n    }\n  }, [loadAccount]);\n\n  /**\n   * This function is called once when component loads.\n   * It loads the saved accounts from local storage to feed them to accounts page.\n   */\n  useEffect(() => {\n    loadAccounts(mainProps);\n    if (window.innerWidth < 520) {\n      setSideSquashed(true);\n    }\n  }, []);\n\n  /**\n   * Initializes account data and activates message subscription stream when backend status is active.\n   */\n  useEffect(() => {\n    if (backendStatus == true && loadAccount == 1) {\n      fetchAccountData();\n      setMsgRxUp(true);\n    }\n  }, [backendStatus]);\n\n  /**\n   * This function sets up an RX stream to listen for incoming messages.\n   * It is triggered by changes on variable 'msgRxUp', when it is false, it sets up\n   * the stream and switches it to true.\n   */\n  useEffect(async () => {\n    let streamValue;\n    await setMsgStreamActive((oldValue) => {\n      streamValue = oldValue;\n      return oldValue;\n    });\n    if (!streamValue && loadAccount == 1) {\n      console.log(\"Subscribing to messages...\");\n      let startTime = new Date();\n      let deadline = new Date();\n      deadline.setHours(deadline.getHours() + 2400);\n      await sleep(1000);\n      setMsgStreamActive(true);\n      messageClient()\n        .subscribeMessages({}, { deadline: deadline.getTime() })\n        .on(\"data\", (resp) => {\n          try {\n            const res = SubscribeMessageResponse.toObject(resp, resp);\n            setUsers((oldUsers) => {\n              mainProps[\"users\"] = oldUsers;\n              return oldUsers;\n            });\n            updateCurrentFunds();\n            setLastFundChange(`+${Number(res.receivedMessage.amtMsat / 1000)}`);\n            let curPage;\n            setSelectedPage((oldPage) => {\n              curPage = oldPage;\n              return oldPage;\n            });\n            if (curPage !== \"accounts\") {\n              console.log(\"Received: \", res);\n              let alias;\n              let discussion;\n\n              // Attempt to find what discussion the received message is part of\n              setDiscussions((oldDiscussions) => {\n                discussion = oldDiscussions.find((elem) => {\n                  return elem.id === res.receivedMessage.discussionId;\n                });\n                if (discussion === undefined) {\n                  fetchDiscussions();\n                }\n                return oldDiscussions;\n              });\n\n              // Look up the user who sent the message\n              setUsers((oldUsers) => {\n                let aliasLookup = oldUsers.find((elem) => {\n                  return elem.address === res.receivedMessage.sender;\n                });\n                if (aliasLookup) {\n                  alias = aliasLookup.alias;\n                } else {\n                  alias = \"Unknown\";\n                }\n                return oldUsers;\n              });\n\n              let directlyToRoom = false;\n\n              setSelectedDiscussion((oldSelectedDiscussion) => {\n                if (oldSelectedDiscussion) {\n                  if (\n                    oldSelectedDiscussion.id ===\n                    res.receivedMessage.discussionId\n                  ) {\n                    directlyToRoom = true;\n                  }\n                }\n                return oldSelectedDiscussion;\n              });\n\n              if (directlyToRoom) {\n                appendToChatHistory(mainProps, res.receivedMessage);\n              }\n\n              if (!document.hasFocus()) {\n                let audio = new Audio(notificationAudio);\n                audio.play();\n                let message = {};\n                try {\n                  message = JSON.parse(res.receivedMessage.payload);\n                } catch (e) {\n                  message.content = res.receivedMessage.payload;\n                }\n                new Notification(\n                  `${\n                    concatUserNames(mainProps, [res.receivedMessage.sender]) ||\n                    \"Unknown\"\n                  }: ${\n                    !message.content\n                      ? `Sent you ${cryptoUtils.msatToCurrentCryptoUnit(\n                        mainProps,\n                        res.receivedMessage.amtMsat\n                      )}${selectedCryptoUnit}`\n                      : message.content.length < 30\n                        ? message.content\n                        : message.content.substring(0, 25) + \"...\"\n                  }`,\n                  {\n                    icon: c13nLogo,\n                  }\n                );\n              }\n\n              if (discussion) {\n                discussion.lastMsgId = res.receivedMessage.id;\n                if (!directlyToRoom) {\n                  NotificationManager.info(\n                    `${\n                      res.receivedMessage.payload === \"\"\n                        ? `Sent you ${cryptoUtils.msatToCurrentCryptoUnit(\n                          mainProps,\n                          res.receivedMessage.amtMsat\n                        )}${selectedCryptoUnit}`\n                        : res.receivedMessage.payload.length < 20\n                          ? res.receivedMessage.payload\n                          : res.receivedMessage.payload.substring(0, 15) + \"...\"\n                    }`,\n                    `${alias || \"Unknown\"}:`,\n                    4000,\n                    () => {\n                      setSelectedPage(\"chatHistory\");\n                      setSelectedDiscussion(discussion);\n                    }\n                  );\n                }\n              } else {\n                NotificationManager.info(\"\", \"New Discussion!\", 4000);\n              }\n            }\n          } catch (err) {\n            console.log(\"MessageSub err: \", err);\n          }\n        })\n        .on(\"end\", () => {\n          console.log(\"MsgRx Stopped\");\n          console.log(\"MsgRxUp: \", msgRxUp);\n        })\n        .on(\"error\", (e) => {\n          setMsgStreamActive(false);\n          setMsgRxUp(Date.now());\n          console.log(\n            \"Stream was active for: \",\n            new Date().getTime() - startTime.getTime()\n          );\n          console.log(\"Stopping Async Rx Function\");\n          console.log(\"err\", e);\n        })\n        .on(\"status\", (e) => {\n          console.log(\"Subscription status\");\n        });\n    }\n  }, [msgRxUp]);\n\n  // This funciton is used in order to test that the notifications are working as expected.\n  const showTestNotification = () => {\n    NotificationManager.success(\"copied\", \"\", 1000);\n  };\n\n  /**\n   * The main page JSX.\n   */\n  return (\n    <>\n      <div\n        className=\"main-page\"\n        onClick={\n          !(\"Notification\" in window)\n            ? console.log(\"This browser does not support notifications.\")\n            : () => {\n              Notification.requestPermission();\n            }\n        }\n      >\n        <NotificationContainer\n          enterTimeout={smoothAnimations ? 200 : 0}\n          leaveTimeout={smoothAnimations ? 200 : 0}\n        />\n        <WindowSizeListener\n          onResize={(size) => {\n            let width = size.windowWidth;\n            if (selectedPage === \"chatHistory\") {\n              let element = document.getElementById(\"chatHistoryListId\");\n              if (element) {\n                element.scroll({\n                  top: element.scrollHeight,\n                  behavior: smoothAnimations ? \"smooth\" : \"auto\",\n                });\n              }\n            }\n            if (width < 620) {\n              setSideSquashed(true);\n            } else {\n              setSideSquashed(false);\n              setSideActivated(false);\n            }\n          }}\n        >\n          <Side {...mainProps} />\n          <Contents {...mainProps} />\n        </WindowSizeListener>\n        <FundsInitialization\n          {...mainProps}\n          visible={fundsInitVisible}\n          setVisible={setFundsInitVisible}\n          balance={balance}\n          setDisabled={setFundsInitDisabled}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Main;\n","const loadAutomaticImageLoadingSetting = (setAutomaticImageLoading) => {\n  let res = window.localStorage.getItem('automaticImageLoadingSetting');\n  setAutomaticImageLoading(res !== 'false');\n};\n\nconst loadSmoothAnimationsSetting = (setSmoothAnimations) => {\n  let res = window.localStorage.getItem('smoothAnimationsSetting');\n  setSmoothAnimations(res !== 'false');\n};\n\nconst loadSelectedCryptoUnit = (setSelectedCryptoUnit) => {\n  let res = window.localStorage.getItem('selectedCryptoUnitSetting');\n  if (res === 'sat' || res === 'msat' || res === 'mBTC') {\n    setSelectedCryptoUnit(res);\n  } else {\n    setSelectedCryptoUnit('sat');\n  }\n};\n\nconst loadSelectedFiatUnit = (setSelectedFiatUnit) => {\n  let res = window.localStorage.getItem('selectedFiatUnitSetting');\n  if (res === 'EUR' || res === 'USD') {\n    setSelectedFiatUnit(res);\n  } else {\n    setSelectedFiatUnit('EUR');\n  }\n};\n\nconst loadChatIdenticonsSetting = (setChatIdenticons) => {\n  let res = window.localStorage.getItem('chatIdenticonsSetting');\n  setChatIdenticons(res !== 'false');\n};\n\nconst loadChatLayoutSetting = (setChatLayout) => {\n  let res = window.localStorage.getItem('chatLayoutSetting');\n  if (res === 'normal' || res === 'left' || res === 'right') {\n    setChatLayout(res);\n  } else {\n    setChatLayout('normal');\n  }\n};\n\nconst loadMyMessageColor = (setMyMessageColor) => {\n  let res = window.localStorage.getItem('myMessageColorSetting');\n  if(res !== 'undefined' && res !== undefined && res !== null) {\n    setMyMessageColor(res);\n  } else {\n    setMyMessageColor('darkslategrey');\n  }\n};\n\nconst loadOtherMessageColor = (setOtherMessageColor) => {\n  let res = window.localStorage.getItem('otherMessageColorSetting');\n  if(res !== 'undefined' && res !== undefined && res !== null) {\n    setOtherMessageColor(res);\n  } else {\n    setOtherMessageColor('sienna');\n  }\n};\n\nconst loadDeveloperLogsSetting = (setDeveloperLogs) => {\n  let res = window.localStorage.getItem('developerLogsSetting');\n  setDeveloperLogs(res === 'true');\n  if(res !== 'true') {\n    console.log('Production mode');\n    console.log = function() {};\n  }\n};\n\nexport {\n  loadAutomaticImageLoadingSetting,\n  loadSmoothAnimationsSetting,\n  loadSelectedCryptoUnit,\n  loadSelectedFiatUnit,\n  loadChatIdenticonsSetting,\n  loadChatLayoutSetting,\n  loadMyMessageColor,\n  loadOtherMessageColor,\n  loadDeveloperLogsSetting\n};","import Main from \"./components/main\";\n\nfunction App() {\n  return (\n    <>\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./style/index.css\";\nimport \"../node_modules/react-notifications/dist/react-notifications.css\";\nimport \"../node_modules/antd/dist/antd.dark.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');\nvar validator_pb = require('./validator_pb.js');\ngoog.exportSymbol('proto.services.AddContactRequest', null, global);\ngoog.exportSymbol('proto.services.AddContactResponse', null, global);\ngoog.exportSymbol('proto.services.AddDiscussionRequest', null, global);\ngoog.exportSymbol('proto.services.AddDiscussionResponse', null, global);\ngoog.exportSymbol('proto.services.Chain', null, global);\ngoog.exportSymbol('proto.services.ConnectNodeRequest', null, global);\ngoog.exportSymbol('proto.services.ConnectNodeResponse', null, global);\ngoog.exportSymbol('proto.services.ContactInfo', null, global);\ngoog.exportSymbol('proto.services.DiscussionInfo', null, global);\ngoog.exportSymbol('proto.services.DiscussionOptions', null, global);\ngoog.exportSymbol('proto.services.EstimateMessageRequest', null, global);\ngoog.exportSymbol('proto.services.EstimateMessageResponse', null, global);\ngoog.exportSymbol('proto.services.GetContactsRequest', null, global);\ngoog.exportSymbol('proto.services.GetContactsResponse', null, global);\ngoog.exportSymbol('proto.services.GetDiscussionHistoryByIDRequest', null, global);\ngoog.exportSymbol('proto.services.GetDiscussionHistoryResponse', null, global);\ngoog.exportSymbol('proto.services.GetDiscussionStatisticsRequest', null, global);\ngoog.exportSymbol('proto.services.GetDiscussionStatisticsResponse', null, global);\ngoog.exportSymbol('proto.services.GetDiscussionsRequest', null, global);\ngoog.exportSymbol('proto.services.GetDiscussionsResponse', null, global);\ngoog.exportSymbol('proto.services.GetNodesRequest', null, global);\ngoog.exportSymbol('proto.services.KeySetPageOptions', null, global);\ngoog.exportSymbol('proto.services.Message', null, global);\ngoog.exportSymbol('proto.services.MessageOptions', null, global);\ngoog.exportSymbol('proto.services.NodeInfo', null, global);\ngoog.exportSymbol('proto.services.NodeInfoResponse', null, global);\ngoog.exportSymbol('proto.services.OpenChannelRequest', null, global);\ngoog.exportSymbol('proto.services.OpenChannelResponse', null, global);\ngoog.exportSymbol('proto.services.PageOptions', null, global);\ngoog.exportSymbol('proto.services.PaymentHop', null, global);\ngoog.exportSymbol('proto.services.PaymentRoute', null, global);\ngoog.exportSymbol('proto.services.RemoveContactByAddressRequest', null, global);\ngoog.exportSymbol('proto.services.RemoveContactByIDRequest', null, global);\ngoog.exportSymbol('proto.services.RemoveContactResponse', null, global);\ngoog.exportSymbol('proto.services.RemoveDiscussionRequest', null, global);\ngoog.exportSymbol('proto.services.RemoveDiscussionResponse', null, global);\ngoog.exportSymbol('proto.services.SearchNodeByAddressRequest', null, global);\ngoog.exportSymbol('proto.services.SearchNodeByAliasRequest', null, global);\ngoog.exportSymbol('proto.services.SelfBalanceRequest', null, global);\ngoog.exportSymbol('proto.services.SelfBalanceResponse', null, global);\ngoog.exportSymbol('proto.services.SelfInfoRequest', null, global);\ngoog.exportSymbol('proto.services.SelfInfoResponse', null, global);\ngoog.exportSymbol('proto.services.SendMessageRequest', null, global);\ngoog.exportSymbol('proto.services.SendMessageResponse', null, global);\ngoog.exportSymbol('proto.services.SubscribeMessageRequest', null, global);\ngoog.exportSymbol('proto.services.SubscribeMessageResponse', null, global);\ngoog.exportSymbol('proto.services.UpdateDiscussionLastReadRequest', null, global);\ngoog.exportSymbol('proto.services.UpdateDiscussionResponse', null, global);\ngoog.exportSymbol('proto.services.Version', null, global);\ngoog.exportSymbol('proto.services.VersionRequest', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.PageOptions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.PageOptions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.PageOptions.displayName = 'proto.services.PageOptions';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.PageOptions.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.PageOptions.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.PageOptions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.PageOptions.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      skipRecent: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.PageOptions}\n */\nproto.services.PageOptions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.PageOptions;\n  return proto.services.PageOptions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.PageOptions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.PageOptions}\n */\nproto.services.PageOptions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSkipRecent(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPageSize(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.PageOptions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.PageOptions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.PageOptions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.PageOptions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSkipRecent();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getPageSize();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 skip_recent = 1;\n * @return {number}\n */\nproto.services.PageOptions.prototype.getSkipRecent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PageOptions.prototype.setSkipRecent = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 page_size = 2;\n * @return {number}\n */\nproto.services.PageOptions.prototype.getPageSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PageOptions.prototype.setPageSize = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.KeySetPageOptions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.KeySetPageOptions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.KeySetPageOptions.displayName = 'proto.services.KeySetPageOptions';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.KeySetPageOptions.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.KeySetPageOptions.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.KeySetPageOptions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.KeySetPageOptions.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      lastId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      reverse: jspb.Message.getFieldWithDefault(msg, 3, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.KeySetPageOptions}\n */\nproto.services.KeySetPageOptions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.KeySetPageOptions;\n  return proto.services.KeySetPageOptions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.KeySetPageOptions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.KeySetPageOptions}\n */\nproto.services.KeySetPageOptions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLastId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPageSize(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setReverse(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.KeySetPageOptions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.KeySetPageOptions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.KeySetPageOptions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.KeySetPageOptions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLastId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getPageSize();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getReverse();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 last_id = 1;\n * @return {number}\n */\nproto.services.KeySetPageOptions.prototype.getLastId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.KeySetPageOptions.prototype.setLastId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 page_size = 2;\n * @return {number}\n */\nproto.services.KeySetPageOptions.prototype.getPageSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.KeySetPageOptions.prototype.setPageSize = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bool reverse = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.services.KeySetPageOptions.prototype.getReverse = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.services.KeySetPageOptions.prototype.setReverse = function(value) {\n  jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.VersionRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.VersionRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.VersionRequest.displayName = 'proto.services.VersionRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.VersionRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.VersionRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.VersionRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.VersionRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.VersionRequest}\n */\nproto.services.VersionRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.VersionRequest;\n  return proto.services.VersionRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.VersionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.VersionRequest}\n */\nproto.services.VersionRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.VersionRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.VersionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.VersionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.VersionRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.Version = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.Version, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.Version.displayName = 'proto.services.Version';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.Version.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.Version.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.Version} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.Version.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      version: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      commit: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      commitHash: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.Version}\n */\nproto.services.Version.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.Version;\n  return proto.services.Version.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.Version} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.Version}\n */\nproto.services.Version.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVersion(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCommit(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCommitHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.Version.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.Version.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.Version} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.Version.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getVersion();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCommit();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCommitHash();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string version = 1;\n * @return {string}\n */\nproto.services.Version.prototype.getVersion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Version.prototype.setVersion = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string commit = 2;\n * @return {string}\n */\nproto.services.Version.prototype.getCommit = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Version.prototype.setCommit = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string commit_hash = 3;\n * @return {string}\n */\nproto.services.Version.prototype.getCommitHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Version.prototype.setCommitHash = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.NodeInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.NodeInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.NodeInfo.displayName = 'proto.services.NodeInfo';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.NodeInfo.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.NodeInfo.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.NodeInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.NodeInfo.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      alias: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      address: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.NodeInfo}\n */\nproto.services.NodeInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.NodeInfo;\n  return proto.services.NodeInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.NodeInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.NodeInfo}\n */\nproto.services.NodeInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAlias(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.NodeInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.NodeInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.NodeInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.NodeInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAlias();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string alias = 1;\n * @return {string}\n */\nproto.services.NodeInfo.prototype.getAlias = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.NodeInfo.prototype.setAlias = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string address = 2;\n * @return {string}\n */\nproto.services.NodeInfo.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.NodeInfo.prototype.setAddress = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SelfInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SelfInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SelfInfoRequest.displayName = 'proto.services.SelfInfoRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SelfInfoRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SelfInfoRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SelfInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SelfInfoRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SelfInfoRequest}\n */\nproto.services.SelfInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SelfInfoRequest;\n  return proto.services.SelfInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SelfInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SelfInfoRequest}\n */\nproto.services.SelfInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SelfInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SelfInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SelfInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SelfInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.Chain = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.Chain, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.Chain.displayName = 'proto.services.Chain';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.Chain.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.Chain.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.Chain} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.Chain.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      chain: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      network: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.Chain}\n */\nproto.services.Chain.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.Chain;\n  return proto.services.Chain.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.Chain} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.Chain}\n */\nproto.services.Chain.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChain(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNetwork(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.Chain.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.Chain.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.Chain} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.Chain.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChain();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getNetwork();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string chain = 1;\n * @return {string}\n */\nproto.services.Chain.prototype.getChain = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Chain.prototype.setChain = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string network = 2;\n * @return {string}\n */\nproto.services.Chain.prototype.getNetwork = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Chain.prototype.setNetwork = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SelfInfoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.SelfInfoResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.services.SelfInfoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SelfInfoResponse.displayName = 'proto.services.SelfInfoResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.services.SelfInfoResponse.repeatedFields_ = [2];\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SelfInfoResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SelfInfoResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SelfInfoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SelfInfoResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      info: (f = msg.getInfo()) && proto.services.NodeInfo.toObject(includeInstance, f),\n      chainsList: jspb.Message.toObjectList(msg.getChainsList(),\n        proto.services.Chain.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SelfInfoResponse}\n */\nproto.services.SelfInfoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SelfInfoResponse;\n  return proto.services.SelfInfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SelfInfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SelfInfoResponse}\n */\nproto.services.SelfInfoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.NodeInfo;\n      reader.readMessage(value,proto.services.NodeInfo.deserializeBinaryFromReader);\n      msg.setInfo(value);\n      break;\n    case 2:\n      var value = new proto.services.Chain;\n      reader.readMessage(value,proto.services.Chain.deserializeBinaryFromReader);\n      msg.addChains(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SelfInfoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SelfInfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SelfInfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SelfInfoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInfo();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.NodeInfo.serializeBinaryToWriter\n    );\n  }\n  f = message.getChainsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.services.Chain.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional NodeInfo info = 1;\n * @return {?proto.services.NodeInfo}\n */\nproto.services.SelfInfoResponse.prototype.getInfo = function() {\n  return /** @type{?proto.services.NodeInfo} */ (\n    jspb.Message.getWrapperField(this, proto.services.NodeInfo, 1));\n};\n\n\n/** @param {?proto.services.NodeInfo|undefined} value */\nproto.services.SelfInfoResponse.prototype.setInfo = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.SelfInfoResponse.prototype.clearInfo = function() {\n  this.setInfo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.SelfInfoResponse.prototype.hasInfo = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated Chain chains = 2;\n * @return {!Array<!proto.services.Chain>}\n */\nproto.services.SelfInfoResponse.prototype.getChainsList = function() {\n  return /** @type{!Array<!proto.services.Chain>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.services.Chain, 2));\n};\n\n\n/** @param {!Array<!proto.services.Chain>} value */\nproto.services.SelfInfoResponse.prototype.setChainsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.services.Chain=} opt_value\n * @param {number=} opt_index\n * @return {!proto.services.Chain}\n */\nproto.services.SelfInfoResponse.prototype.addChains = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.services.Chain, opt_index);\n};\n\n\nproto.services.SelfInfoResponse.prototype.clearChainsList = function() {\n  this.setChainsList([]);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SelfBalanceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SelfBalanceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SelfBalanceRequest.displayName = 'proto.services.SelfBalanceRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SelfBalanceRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SelfBalanceRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SelfBalanceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SelfBalanceRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SelfBalanceRequest}\n */\nproto.services.SelfBalanceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SelfBalanceRequest;\n  return proto.services.SelfBalanceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SelfBalanceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SelfBalanceRequest}\n */\nproto.services.SelfBalanceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SelfBalanceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SelfBalanceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SelfBalanceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SelfBalanceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SelfBalanceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SelfBalanceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SelfBalanceResponse.displayName = 'proto.services.SelfBalanceResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SelfBalanceResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SelfBalanceResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SelfBalanceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SelfBalanceResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      walletConfirmedSat: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      walletUnconfirmedSat: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      channelLocalMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      channelRemoteMsat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      pendingOpenLocalMsat: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      pendingOpenRemoteMsat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n      unsettledLocalMsat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n      unsettledRemoteMsat: jspb.Message.getFieldWithDefault(msg, 8, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SelfBalanceResponse}\n */\nproto.services.SelfBalanceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SelfBalanceResponse;\n  return proto.services.SelfBalanceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SelfBalanceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SelfBalanceResponse}\n */\nproto.services.SelfBalanceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setWalletConfirmedSat(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setWalletUnconfirmedSat(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setChannelLocalMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setChannelRemoteMsat(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPendingOpenLocalMsat(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPendingOpenRemoteMsat(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setUnsettledLocalMsat(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setUnsettledRemoteMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SelfBalanceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SelfBalanceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SelfBalanceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SelfBalanceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getWalletConfirmedSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getWalletUnconfirmedSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getChannelLocalMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getChannelRemoteMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getPendingOpenLocalMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getPendingOpenRemoteMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getUnsettledLocalMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getUnsettledRemoteMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 wallet_confirmed_sat = 1;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getWalletConfirmedSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setWalletConfirmedSat = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 wallet_unconfirmed_sat = 2;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getWalletUnconfirmedSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setWalletUnconfirmedSat = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint64 channel_local_msat = 3;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getChannelLocalMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setChannelLocalMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional uint64 channel_remote_msat = 4;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getChannelRemoteMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setChannelRemoteMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional uint64 pending_open_local_msat = 5;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getPendingOpenLocalMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setPendingOpenLocalMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional uint64 pending_open_remote_msat = 6;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getPendingOpenRemoteMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setPendingOpenRemoteMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional uint64 unsettled_local_msat = 7;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getUnsettledLocalMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setUnsettledLocalMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional uint64 unsettled_remote_msat = 8;\n * @return {number}\n */\nproto.services.SelfBalanceResponse.prototype.getUnsettledRemoteMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SelfBalanceResponse.prototype.setUnsettledRemoteMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetNodesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetNodesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetNodesRequest.displayName = 'proto.services.GetNodesRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetNodesRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetNodesRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetNodesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetNodesRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetNodesRequest}\n */\nproto.services.GetNodesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetNodesRequest;\n  return proto.services.GetNodesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetNodesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetNodesRequest}\n */\nproto.services.GetNodesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetNodesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetNodesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetNodesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetNodesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SearchNodeByAddressRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SearchNodeByAddressRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SearchNodeByAddressRequest.displayName = 'proto.services.SearchNodeByAddressRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SearchNodeByAddressRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SearchNodeByAddressRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SearchNodeByAddressRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SearchNodeByAddressRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SearchNodeByAddressRequest}\n */\nproto.services.SearchNodeByAddressRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SearchNodeByAddressRequest;\n  return proto.services.SearchNodeByAddressRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SearchNodeByAddressRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SearchNodeByAddressRequest}\n */\nproto.services.SearchNodeByAddressRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SearchNodeByAddressRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SearchNodeByAddressRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SearchNodeByAddressRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SearchNodeByAddressRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.services.SearchNodeByAddressRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.SearchNodeByAddressRequest.prototype.setAddress = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SearchNodeByAliasRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SearchNodeByAliasRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SearchNodeByAliasRequest.displayName = 'proto.services.SearchNodeByAliasRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SearchNodeByAliasRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SearchNodeByAliasRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SearchNodeByAliasRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SearchNodeByAliasRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      alias: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SearchNodeByAliasRequest}\n */\nproto.services.SearchNodeByAliasRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SearchNodeByAliasRequest;\n  return proto.services.SearchNodeByAliasRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SearchNodeByAliasRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SearchNodeByAliasRequest}\n */\nproto.services.SearchNodeByAliasRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAlias(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SearchNodeByAliasRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SearchNodeByAliasRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SearchNodeByAliasRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SearchNodeByAliasRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAlias();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string alias = 1;\n * @return {string}\n */\nproto.services.SearchNodeByAliasRequest.prototype.getAlias = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.SearchNodeByAliasRequest.prototype.setAlias = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.NodeInfoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.NodeInfoResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.services.NodeInfoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.NodeInfoResponse.displayName = 'proto.services.NodeInfoResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.services.NodeInfoResponse.repeatedFields_ = [1];\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.NodeInfoResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.NodeInfoResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.NodeInfoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.NodeInfoResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      nodesList: jspb.Message.toObjectList(msg.getNodesList(),\n        proto.services.NodeInfo.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.NodeInfoResponse}\n */\nproto.services.NodeInfoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.NodeInfoResponse;\n  return proto.services.NodeInfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.NodeInfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.NodeInfoResponse}\n */\nproto.services.NodeInfoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.NodeInfo;\n      reader.readMessage(value,proto.services.NodeInfo.deserializeBinaryFromReader);\n      msg.addNodes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.NodeInfoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.NodeInfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.NodeInfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.NodeInfoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNodesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.services.NodeInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated NodeInfo nodes = 1;\n * @return {!Array<!proto.services.NodeInfo>}\n */\nproto.services.NodeInfoResponse.prototype.getNodesList = function() {\n  return /** @type{!Array<!proto.services.NodeInfo>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.services.NodeInfo, 1));\n};\n\n\n/** @param {!Array<!proto.services.NodeInfo>} value */\nproto.services.NodeInfoResponse.prototype.setNodesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.services.NodeInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.services.NodeInfo}\n */\nproto.services.NodeInfoResponse.prototype.addNodes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.NodeInfo, opt_index);\n};\n\n\nproto.services.NodeInfoResponse.prototype.clearNodesList = function() {\n  this.setNodesList([]);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.ConnectNodeRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.ConnectNodeRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.ConnectNodeRequest.displayName = 'proto.services.ConnectNodeRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.ConnectNodeRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.ConnectNodeRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.ConnectNodeRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.ConnectNodeRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      address: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      hostport: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.ConnectNodeRequest}\n */\nproto.services.ConnectNodeRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.ConnectNodeRequest;\n  return proto.services.ConnectNodeRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.ConnectNodeRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.ConnectNodeRequest}\n */\nproto.services.ConnectNodeRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHostport(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.ConnectNodeRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.ConnectNodeRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.ConnectNodeRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.ConnectNodeRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getHostport();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.services.ConnectNodeRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.ConnectNodeRequest.prototype.setAddress = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string hostport = 2;\n * @return {string}\n */\nproto.services.ConnectNodeRequest.prototype.getHostport = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.ConnectNodeRequest.prototype.setHostport = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.ConnectNodeResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.ConnectNodeResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.ConnectNodeResponse.displayName = 'proto.services.ConnectNodeResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.ConnectNodeResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.ConnectNodeResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.ConnectNodeResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.ConnectNodeResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.ConnectNodeResponse}\n */\nproto.services.ConnectNodeResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.ConnectNodeResponse;\n  return proto.services.ConnectNodeResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.ConnectNodeResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.ConnectNodeResponse}\n */\nproto.services.ConnectNodeResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.ConnectNodeResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.ConnectNodeResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.ConnectNodeResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.ConnectNodeResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.OpenChannelRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.OpenChannelRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.OpenChannelRequest.displayName = 'proto.services.OpenChannelRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.OpenChannelRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.OpenChannelRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.OpenChannelRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.OpenChannelRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      address: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      amtMsat: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      pushAmtMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      minInputConfs: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      targetConfirmationBlock: jspb.Message.getFieldWithDefault(msg, 5, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.OpenChannelRequest}\n */\nproto.services.OpenChannelRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.OpenChannelRequest;\n  return proto.services.OpenChannelRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.OpenChannelRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.OpenChannelRequest}\n */\nproto.services.OpenChannelRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtMsat(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPushAmtMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setMinInputConfs(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTargetConfirmationBlock(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.OpenChannelRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.OpenChannelRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.OpenChannelRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.OpenChannelRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getPushAmtMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getMinInputConfs();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getTargetConfirmationBlock();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.services.OpenChannelRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.OpenChannelRequest.prototype.setAddress = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional uint64 amt_msat = 2;\n * @return {number}\n */\nproto.services.OpenChannelRequest.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.OpenChannelRequest.prototype.setAmtMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint64 push_amt_msat = 3;\n * @return {number}\n */\nproto.services.OpenChannelRequest.prototype.getPushAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.OpenChannelRequest.prototype.setPushAmtMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int32 min_input_confs = 4;\n * @return {number}\n */\nproto.services.OpenChannelRequest.prototype.getMinInputConfs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.services.OpenChannelRequest.prototype.setMinInputConfs = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional uint32 target_confirmation_block = 5;\n * @return {number}\n */\nproto.services.OpenChannelRequest.prototype.getTargetConfirmationBlock = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.services.OpenChannelRequest.prototype.setTargetConfirmationBlock = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.OpenChannelResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.OpenChannelResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.OpenChannelResponse.displayName = 'proto.services.OpenChannelResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.OpenChannelResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.OpenChannelResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.OpenChannelResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.OpenChannelResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      fundingTxid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      outputIndex: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.OpenChannelResponse}\n */\nproto.services.OpenChannelResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.OpenChannelResponse;\n  return proto.services.OpenChannelResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.OpenChannelResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.OpenChannelResponse}\n */\nproto.services.OpenChannelResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFundingTxid(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setOutputIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.OpenChannelResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.OpenChannelResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.OpenChannelResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.OpenChannelResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFundingTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getOutputIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string funding_txid = 1;\n * @return {string}\n */\nproto.services.OpenChannelResponse.prototype.getFundingTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.OpenChannelResponse.prototype.setFundingTxid = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional uint32 output_index = 2;\n * @return {number}\n */\nproto.services.OpenChannelResponse.prototype.getOutputIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.OpenChannelResponse.prototype.setOutputIndex = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.ContactInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.ContactInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.ContactInfo.displayName = 'proto.services.ContactInfo';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.ContactInfo.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.ContactInfo.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.ContactInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.ContactInfo.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      node: (f = msg.getNode()) && proto.services.NodeInfo.toObject(includeInstance, f),\n      id: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      displayName: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.ContactInfo}\n */\nproto.services.ContactInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.ContactInfo;\n  return proto.services.ContactInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.ContactInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.ContactInfo}\n */\nproto.services.ContactInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.NodeInfo;\n      reader.readMessage(value,proto.services.NodeInfo.deserializeBinaryFromReader);\n      msg.setNode(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDisplayName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.ContactInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.ContactInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.ContactInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.ContactInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNode();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.NodeInfo.serializeBinaryToWriter\n    );\n  }\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getDisplayName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional NodeInfo node = 1;\n * @return {?proto.services.NodeInfo}\n */\nproto.services.ContactInfo.prototype.getNode = function() {\n  return /** @type{?proto.services.NodeInfo} */ (\n    jspb.Message.getWrapperField(this, proto.services.NodeInfo, 1));\n};\n\n\n/** @param {?proto.services.NodeInfo|undefined} value */\nproto.services.ContactInfo.prototype.setNode = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.ContactInfo.prototype.clearNode = function() {\n  this.setNode(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.ContactInfo.prototype.hasNode = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional uint64 id = 2;\n * @return {number}\n */\nproto.services.ContactInfo.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.ContactInfo.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string display_name = 3;\n * @return {string}\n */\nproto.services.ContactInfo.prototype.getDisplayName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.ContactInfo.prototype.setDisplayName = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetContactsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetContactsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetContactsRequest.displayName = 'proto.services.GetContactsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetContactsRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetContactsRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetContactsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetContactsRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetContactsRequest}\n */\nproto.services.GetContactsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetContactsRequest;\n  return proto.services.GetContactsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetContactsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetContactsRequest}\n */\nproto.services.GetContactsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetContactsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetContactsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetContactsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetContactsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetContactsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.GetContactsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.services.GetContactsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetContactsResponse.displayName = 'proto.services.GetContactsResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.services.GetContactsResponse.repeatedFields_ = [1];\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetContactsResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetContactsResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetContactsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetContactsResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      contactsList: jspb.Message.toObjectList(msg.getContactsList(),\n        proto.services.ContactInfo.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetContactsResponse}\n */\nproto.services.GetContactsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetContactsResponse;\n  return proto.services.GetContactsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetContactsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetContactsResponse}\n */\nproto.services.GetContactsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.ContactInfo;\n      reader.readMessage(value,proto.services.ContactInfo.deserializeBinaryFromReader);\n      msg.addContacts(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetContactsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetContactsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetContactsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetContactsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getContactsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.services.ContactInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated ContactInfo contacts = 1;\n * @return {!Array<!proto.services.ContactInfo>}\n */\nproto.services.GetContactsResponse.prototype.getContactsList = function() {\n  return /** @type{!Array<!proto.services.ContactInfo>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.services.ContactInfo, 1));\n};\n\n\n/** @param {!Array<!proto.services.ContactInfo>} value */\nproto.services.GetContactsResponse.prototype.setContactsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.services.ContactInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.services.ContactInfo}\n */\nproto.services.GetContactsResponse.prototype.addContacts = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.ContactInfo, opt_index);\n};\n\n\nproto.services.GetContactsResponse.prototype.clearContactsList = function() {\n  this.setContactsList([]);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.AddContactRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.AddContactRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.AddContactRequest.displayName = 'proto.services.AddContactRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.AddContactRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.AddContactRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.AddContactRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.AddContactRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      contact: (f = msg.getContact()) && proto.services.ContactInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.AddContactRequest}\n */\nproto.services.AddContactRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.AddContactRequest;\n  return proto.services.AddContactRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.AddContactRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.AddContactRequest}\n */\nproto.services.AddContactRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.ContactInfo;\n      reader.readMessage(value,proto.services.ContactInfo.deserializeBinaryFromReader);\n      msg.setContact(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.AddContactRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.AddContactRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.AddContactRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.AddContactRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getContact();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.ContactInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ContactInfo contact = 1;\n * @return {?proto.services.ContactInfo}\n */\nproto.services.AddContactRequest.prototype.getContact = function() {\n  return /** @type{?proto.services.ContactInfo} */ (\n    jspb.Message.getWrapperField(this, proto.services.ContactInfo, 1));\n};\n\n\n/** @param {?proto.services.ContactInfo|undefined} value */\nproto.services.AddContactRequest.prototype.setContact = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.AddContactRequest.prototype.clearContact = function() {\n  this.setContact(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.AddContactRequest.prototype.hasContact = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.AddContactResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.AddContactResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.AddContactResponse.displayName = 'proto.services.AddContactResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.AddContactResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.AddContactResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.AddContactResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.AddContactResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      contact: (f = msg.getContact()) && proto.services.ContactInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.AddContactResponse}\n */\nproto.services.AddContactResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.AddContactResponse;\n  return proto.services.AddContactResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.AddContactResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.AddContactResponse}\n */\nproto.services.AddContactResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.ContactInfo;\n      reader.readMessage(value,proto.services.ContactInfo.deserializeBinaryFromReader);\n      msg.setContact(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.AddContactResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.AddContactResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.AddContactResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.AddContactResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getContact();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.ContactInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ContactInfo contact = 1;\n * @return {?proto.services.ContactInfo}\n */\nproto.services.AddContactResponse.prototype.getContact = function() {\n  return /** @type{?proto.services.ContactInfo} */ (\n    jspb.Message.getWrapperField(this, proto.services.ContactInfo, 1));\n};\n\n\n/** @param {?proto.services.ContactInfo|undefined} value */\nproto.services.AddContactResponse.prototype.setContact = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.AddContactResponse.prototype.clearContact = function() {\n  this.setContact(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.AddContactResponse.prototype.hasContact = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.RemoveContactByIDRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.RemoveContactByIDRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.RemoveContactByIDRequest.displayName = 'proto.services.RemoveContactByIDRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.RemoveContactByIDRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.RemoveContactByIDRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.RemoveContactByIDRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.RemoveContactByIDRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.RemoveContactByIDRequest}\n */\nproto.services.RemoveContactByIDRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.RemoveContactByIDRequest;\n  return proto.services.RemoveContactByIDRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.RemoveContactByIDRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.RemoveContactByIDRequest}\n */\nproto.services.RemoveContactByIDRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.RemoveContactByIDRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.RemoveContactByIDRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.RemoveContactByIDRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.RemoveContactByIDRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 id = 1;\n * @return {number}\n */\nproto.services.RemoveContactByIDRequest.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.RemoveContactByIDRequest.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.RemoveContactByAddressRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.RemoveContactByAddressRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.RemoveContactByAddressRequest.displayName = 'proto.services.RemoveContactByAddressRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.RemoveContactByAddressRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.RemoveContactByAddressRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.RemoveContactByAddressRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.RemoveContactByAddressRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.RemoveContactByAddressRequest}\n */\nproto.services.RemoveContactByAddressRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.RemoveContactByAddressRequest;\n  return proto.services.RemoveContactByAddressRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.RemoveContactByAddressRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.RemoveContactByAddressRequest}\n */\nproto.services.RemoveContactByAddressRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.RemoveContactByAddressRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.RemoveContactByAddressRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.RemoveContactByAddressRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.RemoveContactByAddressRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.services.RemoveContactByAddressRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.RemoveContactByAddressRequest.prototype.setAddress = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.RemoveContactResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.RemoveContactResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.RemoveContactResponse.displayName = 'proto.services.RemoveContactResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.RemoveContactResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.RemoveContactResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.RemoveContactResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.RemoveContactResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.RemoveContactResponse}\n */\nproto.services.RemoveContactResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.RemoveContactResponse;\n  return proto.services.RemoveContactResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.RemoveContactResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.RemoveContactResponse}\n */\nproto.services.RemoveContactResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.RemoveContactResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.RemoveContactResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.RemoveContactResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.RemoveContactResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.Message = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.Message.repeatedFields_, null);\n};\ngoog.inherits(proto.services.Message, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.Message.displayName = 'proto.services.Message';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.services.Message.repeatedFields_ = [10];\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.Message.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.Message.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.Message} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.Message.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      discussionId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      sender: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      receiver: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      senderVerified: jspb.Message.getFieldWithDefault(msg, 11, false),\n      payload: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      amtMsat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n      totalFeesMsat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n      sentTimestamp: (f = msg.getSentTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      receivedTimestamp: (f = msg.getReceivedTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      paymentRoutesList: jspb.Message.toObjectList(msg.getPaymentRoutesList(),\n        proto.services.PaymentRoute.toObject, includeInstance),\n      preimage: jspb.Message.getFieldWithDefault(msg, 12, \"\"),\n      payReq: jspb.Message.getFieldWithDefault(msg, 13, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.Message}\n */\nproto.services.Message.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.Message;\n  return proto.services.Message.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.Message} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.Message}\n */\nproto.services.Message.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDiscussionId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSender(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReceiver(value);\n      break;\n    case 11:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSenderVerified(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPayload(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtMsat(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalFeesMsat(value);\n      break;\n    case 8:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setSentTimestamp(value);\n      break;\n    case 9:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setReceivedTimestamp(value);\n      break;\n    case 10:\n      var value = new proto.services.PaymentRoute;\n      reader.readMessage(value,proto.services.PaymentRoute.deserializeBinaryFromReader);\n      msg.addPaymentRoutes(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPreimage(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPayReq(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.Message.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.Message.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.Message} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.Message.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getDiscussionId();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getSender();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getReceiver();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getSenderVerified();\n  if (f) {\n    writer.writeBool(\n      11,\n      f\n    );\n  }\n  f = message.getPayload();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getTotalFeesMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getSentTimestamp();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n  f = message.getReceivedTimestamp();\n  if (f != null) {\n    writer.writeMessage(\n      9,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n  f = message.getPaymentRoutesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      10,\n      f,\n      proto.services.PaymentRoute.serializeBinaryToWriter\n    );\n  }\n  f = message.getPreimage();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = message.getPayReq();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 id = 1;\n * @return {number}\n */\nproto.services.Message.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.Message.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional uint64 discussion_id = 2;\n * @return {number}\n */\nproto.services.Message.prototype.getDiscussionId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.Message.prototype.setDiscussionId = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string sender = 3;\n * @return {string}\n */\nproto.services.Message.prototype.getSender = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Message.prototype.setSender = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string receiver = 4;\n * @return {string}\n */\nproto.services.Message.prototype.getReceiver = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Message.prototype.setReceiver = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional bool sender_verified = 11;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.services.Message.prototype.getSenderVerified = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));\n};\n\n\n/** @param {boolean} value */\nproto.services.Message.prototype.setSenderVerified = function(value) {\n  jspb.Message.setProto3BooleanField(this, 11, value);\n};\n\n\n/**\n * optional string payload = 5;\n * @return {string}\n */\nproto.services.Message.prototype.getPayload = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Message.prototype.setPayload = function(value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional int64 amt_msat = 6;\n * @return {number}\n */\nproto.services.Message.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.services.Message.prototype.setAmtMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional int64 total_fees_msat = 7;\n * @return {number}\n */\nproto.services.Message.prototype.getTotalFeesMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.services.Message.prototype.setTotalFeesMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional google.protobuf.Timestamp sent_timestamp = 8;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.services.Message.prototype.getSentTimestamp = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));\n};\n\n\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\nproto.services.Message.prototype.setSentTimestamp = function(value) {\n  jspb.Message.setWrapperField(this, 8, value);\n};\n\n\nproto.services.Message.prototype.clearSentTimestamp = function() {\n  this.setSentTimestamp(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.Message.prototype.hasSentTimestamp = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional google.protobuf.Timestamp received_timestamp = 9;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.services.Message.prototype.getReceivedTimestamp = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));\n};\n\n\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\nproto.services.Message.prototype.setReceivedTimestamp = function(value) {\n  jspb.Message.setWrapperField(this, 9, value);\n};\n\n\nproto.services.Message.prototype.clearReceivedTimestamp = function() {\n  this.setReceivedTimestamp(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.Message.prototype.hasReceivedTimestamp = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n/**\n * repeated PaymentRoute payment_routes = 10;\n * @return {!Array<!proto.services.PaymentRoute>}\n */\nproto.services.Message.prototype.getPaymentRoutesList = function() {\n  return /** @type{!Array<!proto.services.PaymentRoute>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.services.PaymentRoute, 10));\n};\n\n\n/** @param {!Array<!proto.services.PaymentRoute>} value */\nproto.services.Message.prototype.setPaymentRoutesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 10, value);\n};\n\n\n/**\n * @param {!proto.services.PaymentRoute=} opt_value\n * @param {number=} opt_index\n * @return {!proto.services.PaymentRoute}\n */\nproto.services.Message.prototype.addPaymentRoutes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.services.PaymentRoute, opt_index);\n};\n\n\nproto.services.Message.prototype.clearPaymentRoutesList = function() {\n  this.setPaymentRoutesList([]);\n};\n\n\n/**\n * optional string preimage = 12;\n * @return {string}\n */\nproto.services.Message.prototype.getPreimage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Message.prototype.setPreimage = function(value) {\n  jspb.Message.setProto3StringField(this, 12, value);\n};\n\n\n/**\n * optional string pay_req = 13;\n * @return {string}\n */\nproto.services.Message.prototype.getPayReq = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.Message.prototype.setPayReq = function(value) {\n  jspb.Message.setProto3StringField(this, 13, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.PaymentRoute = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.PaymentRoute.repeatedFields_, null);\n};\ngoog.inherits(proto.services.PaymentRoute, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.PaymentRoute.displayName = 'proto.services.PaymentRoute';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.services.PaymentRoute.repeatedFields_ = [1];\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.PaymentRoute.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.PaymentRoute.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.PaymentRoute} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.PaymentRoute.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      hopsList: jspb.Message.toObjectList(msg.getHopsList(),\n        proto.services.PaymentHop.toObject, includeInstance),\n      totalTimelock: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      routeAmtMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      routeFeesMsat: jspb.Message.getFieldWithDefault(msg, 4, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.PaymentRoute}\n */\nproto.services.PaymentRoute.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.PaymentRoute;\n  return proto.services.PaymentRoute.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.PaymentRoute} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.PaymentRoute}\n */\nproto.services.PaymentRoute.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.PaymentHop;\n      reader.readMessage(value,proto.services.PaymentHop.deserializeBinaryFromReader);\n      msg.addHops(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTotalTimelock(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRouteAmtMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRouteFeesMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.PaymentRoute.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.PaymentRoute.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.PaymentRoute} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.PaymentRoute.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHopsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.services.PaymentHop.serializeBinaryToWriter\n    );\n  }\n  f = message.getTotalTimelock();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = message.getRouteAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getRouteFeesMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated PaymentHop hops = 1;\n * @return {!Array<!proto.services.PaymentHop>}\n */\nproto.services.PaymentRoute.prototype.getHopsList = function() {\n  return /** @type{!Array<!proto.services.PaymentHop>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.services.PaymentHop, 1));\n};\n\n\n/** @param {!Array<!proto.services.PaymentHop>} value */\nproto.services.PaymentRoute.prototype.setHopsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.services.PaymentHop=} opt_value\n * @param {number=} opt_index\n * @return {!proto.services.PaymentHop}\n */\nproto.services.PaymentRoute.prototype.addHops = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.PaymentHop, opt_index);\n};\n\n\nproto.services.PaymentRoute.prototype.clearHopsList = function() {\n  this.setHopsList([]);\n};\n\n\n/**\n * optional uint32 total_timelock = 2;\n * @return {number}\n */\nproto.services.PaymentRoute.prototype.getTotalTimelock = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PaymentRoute.prototype.setTotalTimelock = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int64 route_amt_msat = 3;\n * @return {number}\n */\nproto.services.PaymentRoute.prototype.getRouteAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PaymentRoute.prototype.setRouteAmtMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 route_fees_msat = 4;\n * @return {number}\n */\nproto.services.PaymentRoute.prototype.getRouteFeesMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PaymentRoute.prototype.setRouteFeesMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.PaymentHop = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.PaymentHop, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.PaymentHop.displayName = 'proto.services.PaymentHop';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.PaymentHop.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.PaymentHop.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.PaymentHop} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.PaymentHop.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      chanId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      hopAddress: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      amtToForwardMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      feeMsat: jspb.Message.getFieldWithDefault(msg, 4, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.PaymentHop}\n */\nproto.services.PaymentHop.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.PaymentHop;\n  return proto.services.PaymentHop.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.PaymentHop} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.PaymentHop}\n */\nproto.services.PaymentHop.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setChanId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHopAddress(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtToForwardMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.PaymentHop.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.PaymentHop.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.PaymentHop} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.PaymentHop.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getHopAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAmtToForwardMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFeeMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 1;\n * @return {number}\n */\nproto.services.PaymentHop.prototype.getChanId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PaymentHop.prototype.setChanId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string hop_address = 2;\n * @return {string}\n */\nproto.services.PaymentHop.prototype.getHopAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.PaymentHop.prototype.setHopAddress = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional int64 amt_to_forward_msat = 3;\n * @return {number}\n */\nproto.services.PaymentHop.prototype.getAmtToForwardMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PaymentHop.prototype.setAmtToForwardMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 fee_msat = 4;\n * @return {number}\n */\nproto.services.PaymentHop.prototype.getFeeMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.services.PaymentHop.prototype.setFeeMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.MessageOptions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.MessageOptions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.MessageOptions.displayName = 'proto.services.MessageOptions';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.MessageOptions.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.MessageOptions.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.MessageOptions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.MessageOptions.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      feeLimitMsat: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      anonymous: jspb.Message.getFieldWithDefault(msg, 2, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.MessageOptions}\n */\nproto.services.MessageOptions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.MessageOptions;\n  return proto.services.MessageOptions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.MessageOptions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.MessageOptions}\n */\nproto.services.MessageOptions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeLimitMsat(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAnonymous(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.MessageOptions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.MessageOptions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.MessageOptions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.MessageOptions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFeeLimitMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getAnonymous();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 fee_limit_msat = 1;\n * @return {number}\n */\nproto.services.MessageOptions.prototype.getFeeLimitMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.MessageOptions.prototype.setFeeLimitMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bool anonymous = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.services.MessageOptions.prototype.getAnonymous = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.services.MessageOptions.prototype.setAnonymous = function(value) {\n  jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.EstimateMessageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.EstimateMessageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.EstimateMessageRequest.displayName = 'proto.services.EstimateMessageRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.EstimateMessageRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.EstimateMessageRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.EstimateMessageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.EstimateMessageRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      discussionId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      payload: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      amtMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      options: (f = msg.getOptions()) && proto.services.MessageOptions.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.EstimateMessageRequest}\n */\nproto.services.EstimateMessageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.EstimateMessageRequest;\n  return proto.services.EstimateMessageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.EstimateMessageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.EstimateMessageRequest}\n */\nproto.services.EstimateMessageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDiscussionId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPayload(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtMsat(value);\n      break;\n    case 4:\n      var value = new proto.services.MessageOptions;\n      reader.readMessage(value,proto.services.MessageOptions.deserializeBinaryFromReader);\n      msg.setOptions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.EstimateMessageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.EstimateMessageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.EstimateMessageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.EstimateMessageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDiscussionId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getPayload();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getOptions();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.services.MessageOptions.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional uint64 discussion_id = 1;\n * @return {number}\n */\nproto.services.EstimateMessageRequest.prototype.getDiscussionId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.EstimateMessageRequest.prototype.setDiscussionId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string payload = 2;\n * @return {string}\n */\nproto.services.EstimateMessageRequest.prototype.getPayload = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.EstimateMessageRequest.prototype.setPayload = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional int64 amt_msat = 3;\n * @return {number}\n */\nproto.services.EstimateMessageRequest.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.EstimateMessageRequest.prototype.setAmtMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional MessageOptions options = 4;\n * @return {?proto.services.MessageOptions}\n */\nproto.services.EstimateMessageRequest.prototype.getOptions = function() {\n  return /** @type{?proto.services.MessageOptions} */ (\n    jspb.Message.getWrapperField(this, proto.services.MessageOptions, 4));\n};\n\n\n/** @param {?proto.services.MessageOptions|undefined} value */\nproto.services.EstimateMessageRequest.prototype.setOptions = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.services.EstimateMessageRequest.prototype.clearOptions = function() {\n  this.setOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.EstimateMessageRequest.prototype.hasOptions = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.EstimateMessageResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.EstimateMessageResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.EstimateMessageResponse.displayName = 'proto.services.EstimateMessageResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.EstimateMessageResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.EstimateMessageResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.EstimateMessageResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.EstimateMessageResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      successProb: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),\n      message: (f = msg.getMessage()) && proto.services.Message.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.EstimateMessageResponse}\n */\nproto.services.EstimateMessageResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.EstimateMessageResponse;\n  return proto.services.EstimateMessageResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.EstimateMessageResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.EstimateMessageResponse}\n */\nproto.services.EstimateMessageResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setSuccessProb(value);\n      break;\n    case 2:\n      var value = new proto.services.Message;\n      reader.readMessage(value,proto.services.Message.deserializeBinaryFromReader);\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.EstimateMessageResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.EstimateMessageResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.EstimateMessageResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.EstimateMessageResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSuccessProb();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.services.Message.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional double success_prob = 1;\n * @return {number}\n */\nproto.services.EstimateMessageResponse.prototype.getSuccessProb = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));\n};\n\n\n/** @param {number} value */\nproto.services.EstimateMessageResponse.prototype.setSuccessProb = function(value) {\n  jspb.Message.setProto3FloatField(this, 1, value);\n};\n\n\n/**\n * optional Message message = 2;\n * @return {?proto.services.Message}\n */\nproto.services.EstimateMessageResponse.prototype.getMessage = function() {\n  return /** @type{?proto.services.Message} */ (\n    jspb.Message.getWrapperField(this, proto.services.Message, 2));\n};\n\n\n/** @param {?proto.services.Message|undefined} value */\nproto.services.EstimateMessageResponse.prototype.setMessage = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.services.EstimateMessageResponse.prototype.clearMessage = function() {\n  this.setMessage(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.EstimateMessageResponse.prototype.hasMessage = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SendMessageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SendMessageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SendMessageRequest.displayName = 'proto.services.SendMessageRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SendMessageRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SendMessageRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SendMessageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SendMessageRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      discussionId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      payload: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      amtMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      payReq: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      options: (f = msg.getOptions()) && proto.services.MessageOptions.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SendMessageRequest}\n */\nproto.services.SendMessageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SendMessageRequest;\n  return proto.services.SendMessageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SendMessageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SendMessageRequest}\n */\nproto.services.SendMessageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDiscussionId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPayload(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtMsat(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPayReq(value);\n      break;\n    case 4:\n      var value = new proto.services.MessageOptions;\n      reader.readMessage(value,proto.services.MessageOptions.deserializeBinaryFromReader);\n      msg.setOptions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SendMessageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SendMessageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SendMessageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SendMessageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDiscussionId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getPayload();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getPayReq();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getOptions();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.services.MessageOptions.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional uint64 discussion_id = 1;\n * @return {number}\n */\nproto.services.SendMessageRequest.prototype.getDiscussionId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SendMessageRequest.prototype.setDiscussionId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string payload = 2;\n * @return {string}\n */\nproto.services.SendMessageRequest.prototype.getPayload = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.SendMessageRequest.prototype.setPayload = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional int64 amt_msat = 3;\n * @return {number}\n */\nproto.services.SendMessageRequest.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.SendMessageRequest.prototype.setAmtMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional string pay_req = 5;\n * @return {string}\n */\nproto.services.SendMessageRequest.prototype.getPayReq = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.services.SendMessageRequest.prototype.setPayReq = function(value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional MessageOptions options = 4;\n * @return {?proto.services.MessageOptions}\n */\nproto.services.SendMessageRequest.prototype.getOptions = function() {\n  return /** @type{?proto.services.MessageOptions} */ (\n    jspb.Message.getWrapperField(this, proto.services.MessageOptions, 4));\n};\n\n\n/** @param {?proto.services.MessageOptions|undefined} value */\nproto.services.SendMessageRequest.prototype.setOptions = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.services.SendMessageRequest.prototype.clearOptions = function() {\n  this.setOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.SendMessageRequest.prototype.hasOptions = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SendMessageResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SendMessageResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SendMessageResponse.displayName = 'proto.services.SendMessageResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SendMessageResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SendMessageResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SendMessageResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SendMessageResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      sentMessage: (f = msg.getSentMessage()) && proto.services.Message.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SendMessageResponse}\n */\nproto.services.SendMessageResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SendMessageResponse;\n  return proto.services.SendMessageResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SendMessageResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SendMessageResponse}\n */\nproto.services.SendMessageResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.Message;\n      reader.readMessage(value,proto.services.Message.deserializeBinaryFromReader);\n      msg.setSentMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SendMessageResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SendMessageResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SendMessageResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SendMessageResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentMessage();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.Message.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Message sent_message = 1;\n * @return {?proto.services.Message}\n */\nproto.services.SendMessageResponse.prototype.getSentMessage = function() {\n  return /** @type{?proto.services.Message} */ (\n    jspb.Message.getWrapperField(this, proto.services.Message, 1));\n};\n\n\n/** @param {?proto.services.Message|undefined} value */\nproto.services.SendMessageResponse.prototype.setSentMessage = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.SendMessageResponse.prototype.clearSentMessage = function() {\n  this.setSentMessage(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.SendMessageResponse.prototype.hasSentMessage = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SubscribeMessageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SubscribeMessageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SubscribeMessageRequest.displayName = 'proto.services.SubscribeMessageRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SubscribeMessageRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SubscribeMessageRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SubscribeMessageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SubscribeMessageRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SubscribeMessageRequest}\n */\nproto.services.SubscribeMessageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SubscribeMessageRequest;\n  return proto.services.SubscribeMessageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SubscribeMessageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SubscribeMessageRequest}\n */\nproto.services.SubscribeMessageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SubscribeMessageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SubscribeMessageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SubscribeMessageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SubscribeMessageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.SubscribeMessageResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.SubscribeMessageResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.SubscribeMessageResponse.displayName = 'proto.services.SubscribeMessageResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.SubscribeMessageResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.SubscribeMessageResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.SubscribeMessageResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.SubscribeMessageResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      receivedMessage: (f = msg.getReceivedMessage()) && proto.services.Message.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.SubscribeMessageResponse}\n */\nproto.services.SubscribeMessageResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.SubscribeMessageResponse;\n  return proto.services.SubscribeMessageResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.SubscribeMessageResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.SubscribeMessageResponse}\n */\nproto.services.SubscribeMessageResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.Message;\n      reader.readMessage(value,proto.services.Message.deserializeBinaryFromReader);\n      msg.setReceivedMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.SubscribeMessageResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.SubscribeMessageResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.SubscribeMessageResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.SubscribeMessageResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getReceivedMessage();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.Message.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Message received_message = 1;\n * @return {?proto.services.Message}\n */\nproto.services.SubscribeMessageResponse.prototype.getReceivedMessage = function() {\n  return /** @type{?proto.services.Message} */ (\n    jspb.Message.getWrapperField(this, proto.services.Message, 1));\n};\n\n\n/** @param {?proto.services.Message|undefined} value */\nproto.services.SubscribeMessageResponse.prototype.setReceivedMessage = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.SubscribeMessageResponse.prototype.clearReceivedMessage = function() {\n  this.setReceivedMessage(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.SubscribeMessageResponse.prototype.hasReceivedMessage = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.DiscussionInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.DiscussionInfo.repeatedFields_, null);\n};\ngoog.inherits(proto.services.DiscussionInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.DiscussionInfo.displayName = 'proto.services.DiscussionInfo';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.services.DiscussionInfo.repeatedFields_ = [2];\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.DiscussionInfo.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.DiscussionInfo.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.DiscussionInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.DiscussionInfo.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      participantsList: jspb.Message.getRepeatedField(msg, 2),\n      options: (f = msg.getOptions()) && proto.services.DiscussionOptions.toObject(includeInstance, f),\n      lastReadMsgId: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      lastMsgId: jspb.Message.getFieldWithDefault(msg, 5, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.DiscussionInfo}\n */\nproto.services.DiscussionInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.DiscussionInfo;\n  return proto.services.DiscussionInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.DiscussionInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.DiscussionInfo}\n */\nproto.services.DiscussionInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addParticipants(value);\n      break;\n    case 3:\n      var value = new proto.services.DiscussionOptions;\n      reader.readMessage(value,proto.services.DiscussionOptions.deserializeBinaryFromReader);\n      msg.setOptions(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLastReadMsgId(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLastMsgId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.DiscussionInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.DiscussionInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.DiscussionInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.DiscussionInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getParticipantsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      2,\n      f\n    );\n  }\n  f = message.getOptions();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.services.DiscussionOptions.serializeBinaryToWriter\n    );\n  }\n  f = message.getLastReadMsgId();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getLastMsgId();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 id = 1;\n * @return {number}\n */\nproto.services.DiscussionInfo.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.DiscussionInfo.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * repeated string participants = 2;\n * @return {!Array<string>}\n */\nproto.services.DiscussionInfo.prototype.getParticipantsList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/** @param {!Array<string>} value */\nproto.services.DiscussionInfo.prototype.setParticipantsList = function(value) {\n  jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.services.DiscussionInfo.prototype.addParticipants = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\nproto.services.DiscussionInfo.prototype.clearParticipantsList = function() {\n  this.setParticipantsList([]);\n};\n\n\n/**\n * optional DiscussionOptions options = 3;\n * @return {?proto.services.DiscussionOptions}\n */\nproto.services.DiscussionInfo.prototype.getOptions = function() {\n  return /** @type{?proto.services.DiscussionOptions} */ (\n    jspb.Message.getWrapperField(this, proto.services.DiscussionOptions, 3));\n};\n\n\n/** @param {?proto.services.DiscussionOptions|undefined} value */\nproto.services.DiscussionInfo.prototype.setOptions = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.services.DiscussionInfo.prototype.clearOptions = function() {\n  this.setOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.DiscussionInfo.prototype.hasOptions = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional uint64 last_read_msg_id = 4;\n * @return {number}\n */\nproto.services.DiscussionInfo.prototype.getLastReadMsgId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.services.DiscussionInfo.prototype.setLastReadMsgId = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional uint64 last_msg_id = 5;\n * @return {number}\n */\nproto.services.DiscussionInfo.prototype.getLastMsgId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.services.DiscussionInfo.prototype.setLastMsgId = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.DiscussionOptions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.DiscussionOptions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.DiscussionOptions.displayName = 'proto.services.DiscussionOptions';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.DiscussionOptions.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.DiscussionOptions.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.DiscussionOptions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.DiscussionOptions.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      feeLimitMsat: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      anonymous: jspb.Message.getFieldWithDefault(msg, 2, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.DiscussionOptions}\n */\nproto.services.DiscussionOptions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.DiscussionOptions;\n  return proto.services.DiscussionOptions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.DiscussionOptions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.DiscussionOptions}\n */\nproto.services.DiscussionOptions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeLimitMsat(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAnonymous(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.DiscussionOptions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.DiscussionOptions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.DiscussionOptions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.DiscussionOptions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFeeLimitMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getAnonymous();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 fee_limit_msat = 1;\n * @return {number}\n */\nproto.services.DiscussionOptions.prototype.getFeeLimitMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.DiscussionOptions.prototype.setFeeLimitMsat = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bool anonymous = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.services.DiscussionOptions.prototype.getAnonymous = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.services.DiscussionOptions.prototype.setAnonymous = function(value) {\n  jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetDiscussionsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetDiscussionsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetDiscussionsRequest.displayName = 'proto.services.GetDiscussionsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetDiscussionsRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetDiscussionsRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetDiscussionsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetDiscussionsRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetDiscussionsRequest}\n */\nproto.services.GetDiscussionsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetDiscussionsRequest;\n  return proto.services.GetDiscussionsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetDiscussionsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetDiscussionsRequest}\n */\nproto.services.GetDiscussionsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetDiscussionsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetDiscussionsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetDiscussionsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetDiscussionsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetDiscussionsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetDiscussionsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetDiscussionsResponse.displayName = 'proto.services.GetDiscussionsResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetDiscussionsResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetDiscussionsResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetDiscussionsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetDiscussionsResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      discussion: (f = msg.getDiscussion()) && proto.services.DiscussionInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetDiscussionsResponse}\n */\nproto.services.GetDiscussionsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetDiscussionsResponse;\n  return proto.services.GetDiscussionsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetDiscussionsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetDiscussionsResponse}\n */\nproto.services.GetDiscussionsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.DiscussionInfo;\n      reader.readMessage(value,proto.services.DiscussionInfo.deserializeBinaryFromReader);\n      msg.setDiscussion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetDiscussionsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetDiscussionsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetDiscussionsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetDiscussionsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDiscussion();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.DiscussionInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional DiscussionInfo discussion = 1;\n * @return {?proto.services.DiscussionInfo}\n */\nproto.services.GetDiscussionsResponse.prototype.getDiscussion = function() {\n  return /** @type{?proto.services.DiscussionInfo} */ (\n    jspb.Message.getWrapperField(this, proto.services.DiscussionInfo, 1));\n};\n\n\n/** @param {?proto.services.DiscussionInfo|undefined} value */\nproto.services.GetDiscussionsResponse.prototype.setDiscussion = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.GetDiscussionsResponse.prototype.clearDiscussion = function() {\n  this.setDiscussion(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.GetDiscussionsResponse.prototype.hasDiscussion = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetDiscussionHistoryByIDRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetDiscussionHistoryByIDRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetDiscussionHistoryByIDRequest.displayName = 'proto.services.GetDiscussionHistoryByIDRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetDiscussionHistoryByIDRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetDiscussionHistoryByIDRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetDiscussionHistoryByIDRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetDiscussionHistoryByIDRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      pageOptions: (f = msg.getPageOptions()) && proto.services.KeySetPageOptions.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetDiscussionHistoryByIDRequest}\n */\nproto.services.GetDiscussionHistoryByIDRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetDiscussionHistoryByIDRequest;\n  return proto.services.GetDiscussionHistoryByIDRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetDiscussionHistoryByIDRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetDiscussionHistoryByIDRequest}\n */\nproto.services.GetDiscussionHistoryByIDRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = new proto.services.KeySetPageOptions;\n      reader.readMessage(value,proto.services.KeySetPageOptions.deserializeBinaryFromReader);\n      msg.setPageOptions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetDiscussionHistoryByIDRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetDiscussionHistoryByIDRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetDiscussionHistoryByIDRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetDiscussionHistoryByIDRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getPageOptions();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.services.KeySetPageOptions.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional uint64 id = 1;\n * @return {number}\n */\nproto.services.GetDiscussionHistoryByIDRequest.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.GetDiscussionHistoryByIDRequest.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional KeySetPageOptions page_options = 2;\n * @return {?proto.services.KeySetPageOptions}\n */\nproto.services.GetDiscussionHistoryByIDRequest.prototype.getPageOptions = function() {\n  return /** @type{?proto.services.KeySetPageOptions} */ (\n    jspb.Message.getWrapperField(this, proto.services.KeySetPageOptions, 2));\n};\n\n\n/** @param {?proto.services.KeySetPageOptions|undefined} value */\nproto.services.GetDiscussionHistoryByIDRequest.prototype.setPageOptions = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.services.GetDiscussionHistoryByIDRequest.prototype.clearPageOptions = function() {\n  this.setPageOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.GetDiscussionHistoryByIDRequest.prototype.hasPageOptions = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetDiscussionHistoryResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetDiscussionHistoryResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetDiscussionHistoryResponse.displayName = 'proto.services.GetDiscussionHistoryResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetDiscussionHistoryResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetDiscussionHistoryResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetDiscussionHistoryResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetDiscussionHistoryResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      message: (f = msg.getMessage()) && proto.services.Message.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetDiscussionHistoryResponse}\n */\nproto.services.GetDiscussionHistoryResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetDiscussionHistoryResponse;\n  return proto.services.GetDiscussionHistoryResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetDiscussionHistoryResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetDiscussionHistoryResponse}\n */\nproto.services.GetDiscussionHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.Message;\n      reader.readMessage(value,proto.services.Message.deserializeBinaryFromReader);\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetDiscussionHistoryResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetDiscussionHistoryResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetDiscussionHistoryResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetDiscussionHistoryResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMessage();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.Message.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Message message = 1;\n * @return {?proto.services.Message}\n */\nproto.services.GetDiscussionHistoryResponse.prototype.getMessage = function() {\n  return /** @type{?proto.services.Message} */ (\n    jspb.Message.getWrapperField(this, proto.services.Message, 1));\n};\n\n\n/** @param {?proto.services.Message|undefined} value */\nproto.services.GetDiscussionHistoryResponse.prototype.setMessage = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.GetDiscussionHistoryResponse.prototype.clearMessage = function() {\n  this.setMessage(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.GetDiscussionHistoryResponse.prototype.hasMessage = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetDiscussionStatisticsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetDiscussionStatisticsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetDiscussionStatisticsRequest.displayName = 'proto.services.GetDiscussionStatisticsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetDiscussionStatisticsRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetDiscussionStatisticsRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetDiscussionStatisticsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetDiscussionStatisticsRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetDiscussionStatisticsRequest}\n */\nproto.services.GetDiscussionStatisticsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetDiscussionStatisticsRequest;\n  return proto.services.GetDiscussionStatisticsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetDiscussionStatisticsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetDiscussionStatisticsRequest}\n */\nproto.services.GetDiscussionStatisticsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetDiscussionStatisticsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetDiscussionStatisticsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetDiscussionStatisticsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetDiscussionStatisticsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 id = 1;\n * @return {number}\n */\nproto.services.GetDiscussionStatisticsRequest.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.GetDiscussionStatisticsRequest.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.GetDiscussionStatisticsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.GetDiscussionStatisticsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.GetDiscussionStatisticsResponse.displayName = 'proto.services.GetDiscussionStatisticsResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.GetDiscussionStatisticsResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.GetDiscussionStatisticsResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.GetDiscussionStatisticsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.GetDiscussionStatisticsResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      amtMsatSent: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      amtMsatReceived: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      amtMsatFees: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      messagesSent: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      messagesReceived: jspb.Message.getFieldWithDefault(msg, 5, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.GetDiscussionStatisticsResponse}\n */\nproto.services.GetDiscussionStatisticsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.GetDiscussionStatisticsResponse;\n  return proto.services.GetDiscussionStatisticsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.GetDiscussionStatisticsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.GetDiscussionStatisticsResponse}\n */\nproto.services.GetDiscussionStatisticsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtMsatSent(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtMsatReceived(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtMsatFees(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMessagesSent(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMessagesReceived(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.GetDiscussionStatisticsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.GetDiscussionStatisticsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.GetDiscussionStatisticsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.GetDiscussionStatisticsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAmtMsatSent();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getAmtMsatReceived();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getAmtMsatFees();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getMessagesSent();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getMessagesReceived();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 amt_msat_sent = 1;\n * @return {number}\n */\nproto.services.GetDiscussionStatisticsResponse.prototype.getAmtMsatSent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.GetDiscussionStatisticsResponse.prototype.setAmtMsatSent = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional uint64 amt_msat_received = 2;\n * @return {number}\n */\nproto.services.GetDiscussionStatisticsResponse.prototype.getAmtMsatReceived = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.GetDiscussionStatisticsResponse.prototype.setAmtMsatReceived = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint64 amt_msat_fees = 3;\n * @return {number}\n */\nproto.services.GetDiscussionStatisticsResponse.prototype.getAmtMsatFees = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.services.GetDiscussionStatisticsResponse.prototype.setAmtMsatFees = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional uint64 messages_sent = 4;\n * @return {number}\n */\nproto.services.GetDiscussionStatisticsResponse.prototype.getMessagesSent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.services.GetDiscussionStatisticsResponse.prototype.setMessagesSent = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional uint64 messages_received = 5;\n * @return {number}\n */\nproto.services.GetDiscussionStatisticsResponse.prototype.getMessagesReceived = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.services.GetDiscussionStatisticsResponse.prototype.setMessagesReceived = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.AddDiscussionRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.AddDiscussionRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.AddDiscussionRequest.displayName = 'proto.services.AddDiscussionRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.AddDiscussionRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.AddDiscussionRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.AddDiscussionRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.AddDiscussionRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      discussion: (f = msg.getDiscussion()) && proto.services.DiscussionInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.AddDiscussionRequest}\n */\nproto.services.AddDiscussionRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.AddDiscussionRequest;\n  return proto.services.AddDiscussionRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.AddDiscussionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.AddDiscussionRequest}\n */\nproto.services.AddDiscussionRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.DiscussionInfo;\n      reader.readMessage(value,proto.services.DiscussionInfo.deserializeBinaryFromReader);\n      msg.setDiscussion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.AddDiscussionRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.AddDiscussionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.AddDiscussionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.AddDiscussionRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDiscussion();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.DiscussionInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional DiscussionInfo discussion = 1;\n * @return {?proto.services.DiscussionInfo}\n */\nproto.services.AddDiscussionRequest.prototype.getDiscussion = function() {\n  return /** @type{?proto.services.DiscussionInfo} */ (\n    jspb.Message.getWrapperField(this, proto.services.DiscussionInfo, 1));\n};\n\n\n/** @param {?proto.services.DiscussionInfo|undefined} value */\nproto.services.AddDiscussionRequest.prototype.setDiscussion = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.AddDiscussionRequest.prototype.clearDiscussion = function() {\n  this.setDiscussion(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.AddDiscussionRequest.prototype.hasDiscussion = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.AddDiscussionResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.AddDiscussionResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.AddDiscussionResponse.displayName = 'proto.services.AddDiscussionResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.AddDiscussionResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.AddDiscussionResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.AddDiscussionResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.AddDiscussionResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      discussion: (f = msg.getDiscussion()) && proto.services.DiscussionInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.AddDiscussionResponse}\n */\nproto.services.AddDiscussionResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.AddDiscussionResponse;\n  return proto.services.AddDiscussionResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.AddDiscussionResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.AddDiscussionResponse}\n */\nproto.services.AddDiscussionResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.services.DiscussionInfo;\n      reader.readMessage(value,proto.services.DiscussionInfo.deserializeBinaryFromReader);\n      msg.setDiscussion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.AddDiscussionResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.AddDiscussionResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.AddDiscussionResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.AddDiscussionResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDiscussion();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.services.DiscussionInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional DiscussionInfo discussion = 1;\n * @return {?proto.services.DiscussionInfo}\n */\nproto.services.AddDiscussionResponse.prototype.getDiscussion = function() {\n  return /** @type{?proto.services.DiscussionInfo} */ (\n    jspb.Message.getWrapperField(this, proto.services.DiscussionInfo, 1));\n};\n\n\n/** @param {?proto.services.DiscussionInfo|undefined} value */\nproto.services.AddDiscussionResponse.prototype.setDiscussion = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.services.AddDiscussionResponse.prototype.clearDiscussion = function() {\n  this.setDiscussion(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.services.AddDiscussionResponse.prototype.hasDiscussion = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.UpdateDiscussionLastReadRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.UpdateDiscussionLastReadRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.UpdateDiscussionLastReadRequest.displayName = 'proto.services.UpdateDiscussionLastReadRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.UpdateDiscussionLastReadRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.UpdateDiscussionLastReadRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.UpdateDiscussionLastReadRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.UpdateDiscussionLastReadRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      discussionId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      lastReadMsgId: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.UpdateDiscussionLastReadRequest}\n */\nproto.services.UpdateDiscussionLastReadRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.UpdateDiscussionLastReadRequest;\n  return proto.services.UpdateDiscussionLastReadRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.UpdateDiscussionLastReadRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.UpdateDiscussionLastReadRequest}\n */\nproto.services.UpdateDiscussionLastReadRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDiscussionId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLastReadMsgId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.UpdateDiscussionLastReadRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.UpdateDiscussionLastReadRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.UpdateDiscussionLastReadRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.UpdateDiscussionLastReadRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDiscussionId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getLastReadMsgId();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 discussion_id = 1;\n * @return {number}\n */\nproto.services.UpdateDiscussionLastReadRequest.prototype.getDiscussionId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.UpdateDiscussionLastReadRequest.prototype.setDiscussionId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional uint64 last_read_msg_id = 2;\n * @return {number}\n */\nproto.services.UpdateDiscussionLastReadRequest.prototype.getLastReadMsgId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.services.UpdateDiscussionLastReadRequest.prototype.setLastReadMsgId = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.UpdateDiscussionResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.UpdateDiscussionResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.UpdateDiscussionResponse.displayName = 'proto.services.UpdateDiscussionResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.UpdateDiscussionResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.UpdateDiscussionResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.UpdateDiscussionResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.UpdateDiscussionResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.UpdateDiscussionResponse}\n */\nproto.services.UpdateDiscussionResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.UpdateDiscussionResponse;\n  return proto.services.UpdateDiscussionResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.UpdateDiscussionResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.UpdateDiscussionResponse}\n */\nproto.services.UpdateDiscussionResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.UpdateDiscussionResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.UpdateDiscussionResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.UpdateDiscussionResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.UpdateDiscussionResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.RemoveDiscussionRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.RemoveDiscussionRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.RemoveDiscussionRequest.displayName = 'proto.services.RemoveDiscussionRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.RemoveDiscussionRequest.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.RemoveDiscussionRequest.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.RemoveDiscussionRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.RemoveDiscussionRequest.toObject = function(includeInstance, msg) {\n    var f, obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.RemoveDiscussionRequest}\n */\nproto.services.RemoveDiscussionRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.RemoveDiscussionRequest;\n  return proto.services.RemoveDiscussionRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.RemoveDiscussionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.RemoveDiscussionRequest}\n */\nproto.services.RemoveDiscussionRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.RemoveDiscussionRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.RemoveDiscussionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.RemoveDiscussionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.RemoveDiscussionRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 id = 1;\n * @return {number}\n */\nproto.services.RemoveDiscussionRequest.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.services.RemoveDiscussionRequest.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.services.RemoveDiscussionResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.services.RemoveDiscussionResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.services.RemoveDiscussionResponse.displayName = 'proto.services.RemoveDiscussionResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\n  proto.services.RemoveDiscussionResponse.prototype.toObject = function(opt_includeInstance) {\n    return proto.services.RemoveDiscussionResponse.toObject(opt_includeInstance, this);\n  };\n\n\n  /**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.services.RemoveDiscussionResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n  proto.services.RemoveDiscussionResponse.toObject = function(includeInstance, msg) {\n    var f, obj = {\n\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.services.RemoveDiscussionResponse}\n */\nproto.services.RemoveDiscussionResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.services.RemoveDiscussionResponse;\n  return proto.services.RemoveDiscussionResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.services.RemoveDiscussionResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.services.RemoveDiscussionResponse}\n */\nproto.services.RemoveDiscussionResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.services.RemoveDiscussionResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.services.RemoveDiscussionResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.services.RemoveDiscussionResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.services.RemoveDiscussionResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\ngoog.object.extend(exports, proto.services);\n","/**\n * This function returns the currently selected account's URL.\n * @return {string} The URL.\n */\nconst url = () => {\n  return window.localStorage.getItem('url');\n};\n/**\n * This function assembles the backend rpc API URL based on current selected backend location.\n * @returns The string representing the API URL.\n */\nconst apiUrl = () => {\n  return `https://${url()}/c13n-grpc`;\n};\n\nexport default apiUrl;\n","const parseCurrentFunds = (props) => {\n  if (props.currentFunds !== -1 && props.selectedCryptoUnit) {\n    let cryptoRate;\n    switch (props.selectedCryptoUnit) {\n    case 'sat':\n      cryptoRate = 1;\n      return Number(props.currentFunds / cryptoRate).toFixed(0);\n    case 'msat':\n      cryptoRate = 0.001;\n      return Number(props.currentFunds / cryptoRate).toFixed(0);\n    case 'mBTC':\n      cryptoRate = 100000;\n      return Number(props.currentFunds / cryptoRate).toFixed(5);\n    }\n  }\n  return 0;\n};\n\nconst parseLastFundChange = (props) => {\n  if (props.lastFundChange !== 0 && props.selectedCryptoUnit) {\n    let cryptoRate;\n    switch (props.selectedCryptoUnit) {\n    case 'sat':\n      cryptoRate = 1;\n      return Number(props.lastFundChange / cryptoRate).toFixed(0);\n    case 'msat':\n      cryptoRate = 0.001;\n      return Number(props.lastFundChange / cryptoRate).toFixed(0);\n    case 'mBTC':\n      cryptoRate = 100000;\n      return Number(props.lastFundChange / cryptoRate).toFixed(5);\n    }\n  }\n  return '';\n};\n\nconst parseCurrentFiatAmount = (props) => {\n  if (props.selectedFiatUnit && props.exchangeRates && props.currentFunds !== -1) {\n    let rate = props.exchangeRates[props.selectedFiatUnit];\n    let btc = props.currentFunds / 100000000;\n    return Number(btc * rate).toFixed(2);\n  }\n  return 0;\n};\n\nconst msatToCurrentCryptoUnit = (props, amount) => {\n  if (props.selectedCryptoUnit) {\n    let cryptoRate;\n    switch (props.selectedCryptoUnit) {\n    case 'sat':\n      cryptoRate = 1000;\n      return Number(amount / cryptoRate);\n    case 'msat':\n      return amount;\n    case 'mBTC':\n      cryptoRate = 100000000;\n      return Number(amount / cryptoRate).toFixed(5);\n    }\n  }\n  return amount;\n};\n\nconst satToCurrentCryptoUnit = (props, amount) => {\n  if (props.selectedCryptoUnit) {\n    let cryptoRate;\n    switch (props.selectedCryptoUnit) {\n    case 'sat':\n      cryptoRate = 1;\n      return Number(amount / cryptoRate);\n    case 'msat':\n      cryptoRate = 0.001;\n      return Number(amount / cryptoRate);\n    case 'mBTC':\n      cryptoRate = 100000;\n      return Number(amount / cryptoRate).toFixed(5);\n    }\n  }\n  return amount;\n};\n\nconst currentCryptoAmtToFiat = (props, amount) => {\n  if (props.selectedCryptoUnit && props.selectedFiatUnit && props.exchangeRates) {\n    let satAmt;\n    switch (props.selectedCryptoUnit) {\n    case 'sat':\n      satAmt = amount;\n      break;\n    case 'msat':\n      satAmt = Number(amount / 1000);\n      break;\n    case 'mBTC':\n      satAmt = Number(amount * 100000).toFixed(5);\n      break;\n    }\n    let rate = props.exchangeRates[props.selectedFiatUnit];\n    let btc = satAmt / 100000000;\n    return Number(btc * rate).toFixed(6);\n  }\n  return 0;\n};\n\nconst msatAmtToFiat = (props, amount) => {\n  if (props.selectedFiatUnit && props.exchangeRates) {\n    let satAmt = amount / 1000;\n    let rate = props.exchangeRates[props.selectedFiatUnit];\n    let btc = satAmt / 100000000;\n    return Number(btc * rate).toFixed(6);\n  }\n  return 0;\n};\n\nconst currentCryptoAmtToMsat = (props, amount) => {\n  if (props.selectedCryptoUnit) {\n    let msatAmt;\n    switch (props.selectedCryptoUnit) {\n    case 'sat':\n      msatAmt = Number(amount * 1000);\n      break;\n    case 'msat':\n      msatAmt = amount;\n      break;\n    case 'mBTC':\n      msatAmt = Number(amount * 100000000);\n      break;\n    }\n    return msatAmt;\n  }\n  return amount;\n};\n\nconst retrieveDefaultCryptoAmount = (props) => {\n  switch (props.selectedCryptoUnit) {\n  case 'sat':\n    return'1';\n  case 'msat':\n    return'1000';\n  case 'mBTC':\n    return'0.00001';\n  }\n};\n\nconst selectedCryptoToVerbose = (unit) => {\n  switch (unit) {\n  case 'sat':\n    return 'satoshis';\n  case 'msat':\n    return 'millisats';\n  case 'mBTC':\n    return 'mBTC';\n  }\n};\n\nexport {\n  parseCurrentFunds,\n  parseLastFundChange,\n  parseCurrentFiatAmount,\n  msatToCurrentCryptoUnit,\n  satToCurrentCryptoUnit,\n  currentCryptoAmtToFiat,\n  currentCryptoAmtToMsat,\n  msatAmtToFiat,\n  retrieveDefaultCryptoAmount,\n  selectedCryptoToVerbose\n};\n","import messageClient from \"../../services/messageServices\";\nimport { appendToChatHistory } from '../../utils/discussion-utils';\n\nconst axios = require('axios').default;\n\nlet cachedImages = {};\n\nlet preimage = \"\";\nlet lsat = {};\n\nconst headerToLsat = (header) => {\n  const macaroonStr = header.split(' ')[1];\n  const invoiceStr = header.split(' ')[2];\n  const macaroon = macaroonStr.slice(10, -2);\n  const invoice = invoiceStr.slice(9, -1);\n  return {\n    invoice: invoice,\n    macaroon: macaroon\n  };\n};\n\nconst downloadImage = async (props, fullUrl) => {\n  if(cachedImages[fullUrl]) {\n    return cachedImages[fullUrl];\n  }\n  console.log('Downloading file from LSAT server');\n  await axios.get(\n    fullUrl,\n    {\n      timeout: 4000\n    }\n  ).then((res) => {\n  }).catch((err) => {\n    let header = (err?.response?.headers['www-authenticate']);\n    console.log(header);\n    if (header) {\n      lsat = headerToLsat(header);\n    }\n  });\n  if (lsat.invoice) {\n    messageClient().sendMessage(\n      {\n        payReq: lsat.invoice,\n        payload: \"\",\n        options: {\n          anonymous: true\n        }\n      },\n      async (err, res) => {\n        if (res) {\n          console.log(res);\n          appendToChatHistory(props, res.sentMessage);\n          props.selectedDiscussion.lastMsgId = res.sentMessage.id;\n          props.selectedDiscussion.lastReadMsgId = res.sentMessage.id;\n          props.updateCurrentFunds();\n          props.setLastFundChange(`-${Number(res.sentMessage.amtMsat / 1000 + res.sentMessage.totalFeesMsat / 1000)}`);\n          preimage = res.sentMessage.preimage;\n          axios.get(\n            fullUrl,\n            {\n              responseType: 'arraybuffer',\n              headers: {\n                'Authorization': `LSAT ${lsat.macaroon}:${preimage}`,\n              },\n            }\n          ).then((res) => {\n            const image64 = Buffer.from(res.data, 'binary').toString('base64');\n            cachedImages[fullUrl] = \"data:image/png;base64, \" + image64;\n          }).catch((err) => {\n            console.log(err);\n          });\n        }\n        if (err) {\n          console.log(err);\n        }\n      });\n  }\n\n};\n\nexport {\n  downloadImage,\n  cachedImages,\n};\n"],"sourceRoot":""}